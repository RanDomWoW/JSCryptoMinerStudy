<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
<head>
  <meta charset="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
  <title>React integration for ASP.NET MVC | ReactJS.NET</title>
  <meta name="viewport" content="width=device-width" />
  <meta property="og:title" content="React integration for ASP.NET MVC | ReactJS.NET" />
  <meta property="og:type" content="website" />
  <meta property="og:url" content="http://reactjs.net/index.html" />
  <meta property="og:image" content="http://facebook.github.io/react/img/logo_og.png" />
  <meta property="og:description" content=".NET integration for ReactJS" />
  <meta property="fb:app_id" content="1417169611875552" />

  <link rel="shortcut icon" href="/favicon/favicon.ico" />
  <link rel="alternate" type="application/rss+xml" title="ReactJS.NET" href="http://reactjs.net/feed.xml" />

  <link rel="stylesheet" href="/assets/main-45fccce12a6a074bba0f40179cfa1276.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/docsearch.js/2/docsearch.min.css" />

  <script type="text/javascript" src="//use.typekit.net/vqa1hcx.js"></script>
  <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
  <script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-25623237-6', 'reactjs.net');
    ga('send', 'pageview');
  </script>
  <!--[if lt IE 9]>
    <script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7/html5shiv.js"></script>
  <![endif]-->
</head>
<body>
  <div class="container">
    <div class="nav-main">
      <div class="wrap">
        <a class="nav-home" href="/">
          <img class="nav-logo" src="/img/logo.svg" width="48" height="36">
          ReactJS.NET
        </a>
        <input id="algolia-doc-search" type="text" placeholder="Search docs..." />
        <ul class="nav-site">
          <li><a href="/docs">Docs</a></li>
          <li><a href="/getting-started/tutorial.html">Tutorial</a></li>
          <li><a href="/getting-started/download.html">Download</a></li>
          <li><a href="/blog/">Blog</a></li>
          <li><a href="http://github.com/reactjs/React.NET">GitHub</a>
        </ul>
      </div>
    </div>

    <div class="hero">
  <div class="wrap">
    <div class="text"><strong>ReactJS.NET</strong></div>
    <div class="minitext">
      React â™¥ C# and ASP.NET MVC
    </div>
  </div>
</div>

<p><section class="content wrap">
  <section class="home-section">
    <p>
      ReactJS.NET makes it easier to use Facebook&#39;s
      <a href="http://facebook.github.io/react/">React</a> and
      <a href="http://facebook.github.io/react/docs/jsx-in-depth.html">JSX</a> from C# and
      other .NET languages, focusing specifically on ASP.NET MVC (although it
      also works in other environments). It supports both ASP.NET 4 (with MVC 4 or 5),
      and ASP.NET Core MVC. It is cross-platform and can run on Linux via Mono
      or .NET Core.
      Take a look at <a href="/getting-started/tutorial.html">the tutorial</a> to see how
      easy it is to get started with React and ReactJS.NET!
    </p>
    <p>
      <em>
        Latest news:
        <a href="/2018/03/3.3.0-release.html">ReactJS.NET 3.3</a>
        (March  4, 2018)
      </em>
    </p>
    <div id="examples">
      <div class="example">
        <h3>On-the-fly <a href="/getting-started/usage.html">JSX to JavaScript compilation</a></h3>
        <div class="example-desc">
          <p>
            Simply name your file with a <code>.jsx</code> extension and link to the
            file via a <code>script</code> tag.
          </p>
          <p>
            The files will automatically be compiled to JavaScript and cached
            server-side. No precompilation required. Perfect for development.
          </p>
        </div>
        <div class="example-code"></p>
<div class="highlight"><pre><code class="javascript language-javascript" data-lang="javascript"><span class="c1">// /Scripts/HelloWorld.jsx</span>
<span class="kd">var</span> <span class="nx">HelloWorld</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">createClass</span><span class="p">({</span>
  <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span><span class="nx">Hello</span> <span class="nx">world</span><span class="o">!&lt;</span><span class="err">/div&gt;;</span>
  <span class="p">}</span>
<span class="p">});</span>
</code></pre></div><div class="highlight"><pre><code class="html language-html" data-lang="html"><span class="c">&lt;!-- Reference it from HTML --&gt;</span>
<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;@Url.Content(&quot;</span><span class="err">~/</span><span class="na">Scripts</span><span class="err">/</span><span class="na">HelloWorld</span><span class="err">.</span><span class="na">jsx</span><span class="err">&quot;)&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</code></pre></div>
<p></div>
      </div>
      <div class="example">
        <h3>JSX to JavaScript compilation via popular minification/combination libraries</h3>
        <div class="example-desc">
          <p>
            Use Cassette or ASP.NET Minification and Combination? ReactJS.NET&#39;s
            got you covered.
          </p>
          <p>
            Reference your JSX files and they will be included in your bundles
            along with your other JavaScript files.
          </p>
          <p>
            If you&#39;re a fan of Node.js-based libraries, you can use
            <a href="/guides/webpack.html">Webpack</a> or Browserify instead, and still
            take advantage of ReactJS.NET&#39;s server-side rendering.
          </p>
        </div>
        <div class="example-code"></p>
<div class="highlight"><pre><code class="csharp language-csharp" data-lang="csharp"><span class="c1">// In BundleConfig.cs</span>
<span class="n">bundles</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">JsxBundle</span><span class="p">(</span><span class="s">&quot;~/bundles/main&quot;</span><span class="p">).</span><span class="n">Include</span><span class="p">(</span>
    <span class="c1">// Add your JSX files here</span>
    <span class="s">&quot;~/Scripts/HelloWorld.jsx&quot;</span><span class="p">,</span>
    <span class="s">&quot;~/Scripts/AnythingElse.jsx&quot;</span><span class="p">,</span>
    <span class="c1">// You can include regular JavaScript files in the bundle too</span>
    <span class="s">&quot;~/Scripts/ajax.js&quot;</span><span class="p">,</span>
<span class="p">));</span>
</code></pre></div><div class="highlight"><pre><code class="html language-html" data-lang="html"><span class="c">&lt;!-- In your view --&gt;</span>
@Scripts.Render(&quot;~/bundles/main&quot;)
</code></pre></div>
<p></div>
      </div>
      <div class="example">
        <h3><a href="http://reactjs.net/guides/server-side-rendering.html">Server-side component rendering</a></h3>
        <div class="example-desc">
          <p>
            Pre-render the initial state of your React components server-side to
            make the initial load feel faster.
          </p>
        </div>
        <div class="example-code"></p>
<div class="highlight"><pre><code class="html language-html" data-lang="html"><span class="c">&lt;!-- This will render the component server-side --&gt;</span>
@Html.React(&quot;CommentsBox&quot;, new {
    initialComments = Model.Comments
})

<span class="c">&lt;!-- Initialise the component in JavaScript too --&gt;</span>
<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;https://cdnjs.cloudflare.com/ajax/libs/react/15.3.2/react.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;https://cdnjs.cloudflare.com/ajax/libs/react/15.3.2/react-dom.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
@Scripts.Render(&quot;~/bundles/main&quot;)
@Html.ReactInitJavaScript()
</code></pre></div>
<p></div>
      </div>
    </div>
  </section>
  <hr class="home-divider" />
  <section class="home-bottom-section">
    <div class="buttons-unit">
      <a href="/getting-started/download.html" class="button">Get Started</a>
      <a href="/getting-started/tutorial.html" class="button">Tutorial</a>
    </div>
  </section>
</section></p>


    <footer class="wrap">
      <div class="right">
        &copy; 2014-Present Facebook Inc.
        <a href="https://github.com/reactjs/React.NET/blob/master/site/jekyll/index.md" target="_blank">
          Edit this page on GitHub
        </a>
      </div>
    </footer>
  </div>

  <!-- Algolia search -->
  <script src="https://cdn.jsdelivr.net/docsearch.js/2/docsearch.min.js"></script>
  <script>
  docsearch({
    apiKey: 'e9888f8a8af8c16709c02402b15c7695',
    indexName: 'reactjs_net',
    inputSelector: '#algolia-doc-search',
    debug: false // Set debug to true if you want to inspect the dropdown
  });
  </script>

  <!-- Facebook SDK -->
  <div id="fb-root"></div>
  <script>(function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=1417169611875552";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));</script>

  <!-- Website Custom Audience -->
  <script>(function() {
    var _fbq = window._fbq || (window._fbq = []);
    if (!_fbq.loaded) {
      var fbds = document.createElement('script');
      fbds.async = true;
      fbds.src = '//connect.facebook.net/en_US/fbds.js';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(fbds, s);
      _fbq.loaded = true;
    }
    _fbq.push(['addPixelId', "395824213885429"]);
  })();
  window._fbq = window._fbq || [];
  window._fbq.push(["track", "PixelInitialized", {}]);
  </script>
  <noscript><img height="1" width="1" border="0" alt="" style="display:none" src="https://www.facebook.com/tr?id=395824213885429&amp;ev=NoScript" /></noscript>
</body>
</html>