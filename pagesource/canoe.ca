<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>Canoe | Vidéos & Vedettes - Tendances - Voyage - Actualités | Autos</title>
	<meta name="title" content="Canoe.ca" />
	<meta name="author" content="Québecor Média" />
	<meta name="copyright" content="Canoe.ca" />
	<meta name="description" content="Votre portail d'information sur l'actualit&eacute;, la culture, le showbiz, les sports, la sant&eacute;, les technologies, la finance, les voyages, la mode et l'habitation."/>
	<meta name="keywords" content="" />
	<meta name="publisher" content="Canoe.ca" />

	<meta http-equiv="content-type" content="text/html; charset=iso-8859-1" />

	<meta name="google-site-verification" content="i0XIjOWArd-LYgfoQ-exSapEBK1SNcwasni_pTuIwAI" />
    <meta name="msvalidate.01" content="373E93069E0E8043073B20C6ACC15F69" /> 
    <meta property="fb:page_id" content="128774320370" />
    <meta name="y_key" content="36fd98e1fdfbf9d2">
	
	<link rel="icon" href="/images/favicon.ico" type="image/x-icon" />
	<link rel="shortcut icon" href="/images/favicon.ico" type="image/x-icon" />

	<!-- Grab Google CDN's jQuery, with a protocol relative URL; fall back to local if offline -->
	 <script>window.jQuery || document.write('<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"><\/script>')</script>
	 <script>window.jQuery || document.write('<script src="/commons/assets/js/vendor/jquery-1.9.0.min.js"><\/script>')</script>
	<script type="text/javascript" src="http://fr.canoe.ca/commons/assets/js/cookie/cookie.js"></script>
	<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true"></script>

	<script type="text/javascript"><!-- // <![CDATA[

    var lang = new cookie('canoe_lang');
    var langue_cookie = lang.getCookie();

	if (langue_cookie)
	{
		//alert('LANGUE cookie : '+ langue_cookie);

		var res = langue_cookie.split("|"); 

		for (var i=0; i<res.length; i++) 
		{
			//alert("res[" + i + "] = " + res[i]);
			$values = res[i].split(":");
			if ($values[0] == 'lang')
			{
				if ($values[1] == 'fr')
				{
					window.location.assign("http://fr.canoe.ca/"); 
					exit;
				}
				else
				{
					window.location.assign("http://en.canoe.com/"); 
					exit;
				}
				
			}
		}
	}
	else
	{
		// si on est ici c'est qu'il n'y avait pas de cookie
	    var geocoder;
		geocoder = new google.maps.Geocoder();
		var province;

		var succeed = function(position) {
			navigator.geolocation.received = true;
			if (!navigator.geolocation.timedout)
			{
				var lat = position.coords.latitude;
				var lng = position.coords.longitude;
				var latlng = new google.maps.LatLng(lat, lng);

				geocoder.geocode({'latLng': latlng}, function(results, status) 
				{
				  if (status == google.maps.GeocoderStatus.OK) 
				  {
					console.log(results)
					if (results[1]) 
					{
					   //formatted address
					   //alert(results[0].formatted_address)
					   //find country name
					   for (var i=0; i<results[0].address_components.length; i++) {
						  for (var b=0;b<results[0].address_components[i].types.length;b++) {
							//there are different types that might hold a city admin_area_lvl_1 usually does in come cases looking for sublocality type will be more appropriate
							if (results[0].address_components[i].types[b] == "administrative_area_level_1") {
								//this is the object you are looking for
								city= results[0].address_components[i];
								province = city;
								break;
							}
						  }
					   }

					   //city data
					   //alert(city.short_name + " et " + city.long_name)
					   province = city.short_name;

					   var lang = new cookie('canoe_lang');
					   // if the city is empty, we try the gelocation api
					   if (province === "QC" || province === "qc") {
							lang.setCookie({
								value:      'lang:fr|type:auto',
								expires:    new Date(2100,1,1),
								rootdomain: 1
							});
						   window.location.assign("http://fr.canoe.ca/");
					   }
					   else {
							lang.setCookie({
								value:      'lang:en|type:auto',
								expires:    new Date(2100,1,1),
								rootdomain: 1
							});
						   window.location.assign("http://en.canoe.com/");
					   }
					} else {
					  //alert("No results found, we use ");
					  failed();
					}
				  } 
				  else 
				  {
					  //alert("Geocoder failed due to: " + status);
					  failed();
				  }
				});
			}
			else {

				//alert('GOT YAH but user was to slow'); 
				failed();
			}
		};

		var failed  = function(obj) { 
			//navigator.geolocation.received = true;
			//!navigator.geolocation.timedout?alert('just failed'):alert('failed and user was to slow as well, tzz ._.'); 

			// On le met ici pour tester
			$.getJSON("http://freegeoip.net/json/", function(rs){
				if (rs.country_name) {
				  //console.log(rs);
				  //alert("GEO Latitude:"+rs.latitude);
				  //alert("GEO Longitude:"+rs.longitude);

				  var latlng = new google.maps.LatLng(rs.latitude, rs.longitude);

				  geocoder.geocode({'latLng': latlng}, function(results, status) 
				  {
					if (status == google.maps.GeocoderStatus.OK) 
					{
					  console.log(results)
					  if (results[1]) 
					  {
						 //formatted address
						 //alert("GEO: "+results[0].formatted_address)
						 //find country name
						 for (var i=0; i<results[0].address_components.length; i++) {
							for (var b=0;b<results[0].address_components[i].types.length;b++) {
							  //there are different types that might hold a city admin_area_lvl_1 usually does in come cases looking for sublocality type will be more appropriate
							  if (results[0].address_components[i].types[b] == "administrative_area_level_1") {
								  //this is the object you are looking for
								  city= results[0].address_components[i];
								  province = city;
								  break;
							  }
							}
						 }

						 //city data
						 //alert("GEO : "+city.short_name + " et " + city.long_name)
						 province = city.short_name;

						 var lang = new cookie('canoe_lang');
						 // if the city is empty, we try the gelocation api
						 if (province === "QC" || province === "qc") {
							  lang.setCookie({
								  value:      'lang:fr|type:auto',
								  expires:    new Date(2100,1,1),
								  rootdomain: 1
							  });
							 window.location.assign("http://fr.canoe.ca/");
						 }
						 else {
							  lang.setCookie({
								  value:      'lang:en|type:auto',
								  expires:    new Date(2100,1,1),
								  rootdomain: 1
							  });
							 window.location.assign("http://en.canoe.com/");
						 }
					  } else {
						//alert("No results found, we use ");
						window.location.assign("http://fr.canoe.ca/");
					  }
				  } 
				  else 
				  {
					  //alert("Geocoder failed due to: " + status);
					  window.location.assign("http://fr.canoe.ca/");
				  }
				});

				
				}
			  })
			  .error(function(e){
				   //alert("Geocoder failed");
				   window.location.assign("http://fr.canoe.ca/");
			  }); 

		};

		var timedout    = function() {
			navigator.geolocation.timedout = true; // could be used for other callbacks to trace if its timed out or not
			//!navigator.geolocation.received?alert('Request timed out'):null;    
			failed();
		}

		// Extend geolocation object
		if (navigator.geolocation) {

			if ( navigator.geolocation.getCurrentPosition  ) {
				navigator.geolocation.retrievePermission = function retrievePermission(succeed,failed,options,timeout) {
					this.received = false;              // reference for timeout callback
					this.timedout = false;              // reference for other callbacks
					this.getCurrentPosition.apply(this,arguments);  // actual request

					// Trigger timeout with its function; default timeout offset 5000ms
					if ( timeout ) {
						setTimeout(timeout.callback,timeout.offset || 5000);
					}
				}

				// New location request with timeout callback
				navigator.geolocation.retrievePermission(succeed,failed,{},{
					offset: 10000, // miliseconds
					callback: timedout  
				});

			// Awesome thingy is not implemented
			} else {
				//alert('geolocation is not supported');
				failed();
			}
		} else {
		   // Fallback for no geolocation
		   failed();
		}
}
</script> 

</head>

<body>

</body>
</html>