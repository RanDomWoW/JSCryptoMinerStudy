<!DOCTYPE html>
<!--[if IE 7]>
<html class="ie ie7" lang="zh-CN">
<![endif]-->
<!--[if IE 8]>
<html class="ie ie8" lang="zh-CN">
<![endif]-->
<!--[if !(IE 7) & !(IE 8)]><!-->
<html lang="zh-CN">
<!--<![endif]-->
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width" />
<title>写点什么 | 有关jvm,scala与后端架构</title>
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="pingback" href="http://hongjiang.info/xmlrpc.php" />
<!--[if lt IE 9]>
<script src="http://hongjiang.info/wp-content/themes/twentytwelve/js/html5.js" type="text/javascript"></script>
<![endif]-->
<link rel='dns-prefetch' href='//s.w.org' />
<link rel="alternate" type="application/rss+xml" title="写点什么 &raquo; Feed" href="http://hongjiang.info/feed/" />
<link rel="alternate" type="application/rss+xml" title="写点什么 &raquo; 评论Feed" href="http://hongjiang.info/comments/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.4\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.4\/svg\/","svgExt":".svg","source":{"concatemoji":"http:\/\/hongjiang.info\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.9.4"}};
			!function(a,b,c){function d(a,b){var c=String.fromCharCode;l.clearRect(0,0,k.width,k.height),l.fillText(c.apply(this,a),0,0);var d=k.toDataURL();l.clearRect(0,0,k.width,k.height),l.fillText(c.apply(this,b),0,0);var e=k.toDataURL();return d===e}function e(a){var b;if(!l||!l.fillText)return!1;switch(l.textBaseline="top",l.font="600 32px Arial",a){case"flag":return!(b=d([55356,56826,55356,56819],[55356,56826,8203,55356,56819]))&&(b=d([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]),!b);case"emoji":return b=d([55357,56692,8205,9792,65039],[55357,56692,8203,9792,65039]),!b}return!1}function f(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var g,h,i,j,k=b.createElement("canvas"),l=k.getContext&&k.getContext("2d");for(j=Array("flag","emoji"),c.supports={everything:!0,everythingExceptFlag:!0},i=0;i<j.length;i++)c.supports[j[i]]=e(j[i]),c.supports.everything=c.supports.everything&&c.supports[j[i]],"flag"!==j[i]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[j[i]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(h=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",h,!1),a.addEventListener("load",h,!1)):(a.attachEvent("onload",h),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),g=c.source||{},g.concatemoji?f(g.concatemoji):g.wpemoji&&g.twemoji&&(f(g.twemoji),f(g.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='twentytwelve-style-css'  href='http://hongjiang.info/wp-content/themes/twentytwelve/style.css?ver=4.9.4' type='text/css' media='all' />
<!--[if lt IE 9]>
<link rel='stylesheet' id='twentytwelve-ie-css'  href='http://hongjiang.info/wp-content/themes/twentytwelve/css/ie.css?ver=20121010' type='text/css' media='all' />
<![endif]-->
<script type='text/javascript' src='http://hongjiang.info/wp-includes/js/jquery/jquery.js?ver=1.12.4'></script>
<script type='text/javascript' src='http://hongjiang.info/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1'></script>
<link rel='https://api.w.org/' href='http://hongjiang.info/wp-json/' />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://hongjiang.info/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://hongjiang.info/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 4.9.4" />
		<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>
		
<link rel="stylesheet" href="http://hongjiang.info/wp-content/plugins/wassup/css/wassup-widget.css?ver=1.9.4.2" type="text/css" />
<script type="text/javascript">
//<![CDATA[
function wassup_get_screenres(){
	var screen_res = screen.width + " x " + screen.height;
	if(screen_res==" x ") screen_res=window.screen.width+" x "+window.screen.height;
	if(screen_res==" x ") screen_res=screen.availWidth+" x "+screen.availHeight;
	if (screen_res!=" x "){document.cookie = "wassup_screen_res2c9acd705c15718594003cd16ef43943=" + encodeURIComponent(screen_res)+ "; path=/; domain=" + document.domain;}
}
wassup_get_screenres();
//]]>
</script>	<style type="text/css" id="twentytwelve-header-css">
			.site-header h1 a,
		.site-header h2 {
			color: #444;
		}
		</style>
	<style type="text/css" id="custom-background-css">
body.custom-background { background-color: #dbdbdb; }
</style>
</head>

<body class="home blog custom-background single-author">
<div id="page" class="hfeed site">
	<header id="masthead" class="site-header" role="banner">
		<hgroup>
			<h1 class="site-title"><a href="http://hongjiang.info/" title="写点什么" rel="home">写点什么</a></h1>
			<h2 class="site-description">有关jvm,scala与后端架构</h2>
		</hgroup>

		<nav id="site-navigation" class="main-navigation" role="navigation">
			<button class="menu-toggle">菜单</button>
			<a class="assistive-text" href="#content" title="跳至内容">跳至内容</a>
			<div class="nav-menu"><ul>
<li class="current_page_item"><a href="http://hongjiang.info/">首页</a></li><li class="page_item page-item-256"><a href="http://hongjiang.info/scala/">scala</a></li>
<li class="page_item page-item-1603 page_item_has_children"><a href="http://hongjiang.info/index/">索引</a>
<ul class='children'>
	<li class="page_item page-item-1606"><a href="http://hongjiang.info/index/timeline/">ALL</a></li>
	<li class="page_item page-item-387"><a href="http://hongjiang.info/index/java/">java</a></li>
	<li class="page_item page-item-1268"><a href="http://hongjiang.info/index/tomcat/">tomcat</a></li>
	<li class="page_item page-item-390"><a href="http://hongjiang.info/index/shell/">os&#038;shell</a></li>
</ul>
</li>
<li class="page_item page-item-2"><a href="http://hongjiang.info/about/">关于</a></li>
<li class="page_item page-item-981"><a href="http://hongjiang.info/jobs/">工作机会</a></li>
<li class="page_item page-item-1161"><a href="http://hongjiang.info/message/">留言</a></li>
</ul></div>
		</nav><!-- #site-navigation -->

			</header><!-- #masthead -->

	<div id="main" class="wrapper">
	<div id="primary" class="site-content">
		<div id="content" role="main">
		
										
	<article id="post-2119" class="post-2119 post type-post status-publish format-standard hentry category-shell tag-bash">
				<header class="entry-header">
			
						<h1 class="entry-title">
				<a href="http://hongjiang.info/common-bash-functions/" rel="bookmark">一些方便系统诊断的bash函数</a>
			</h1>
										<div class="comments-link">
					<a href="http://hongjiang.info/common-bash-functions/#respond"><span class="leave-reply">发表回复</span></a>				</div><!-- .comments-link -->
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p>这段脚本包含100多个bash函数，是我几年前方便自己调试和诊断问题写的。贴出来给有需要的人，因为比较懒怎么使用这些函数就不写说明了。其中以下划线开头的是表示私有函数，以<code>cf_</code>开头的表示公共函数，可当做命令使用。</p>
<div>
<pre><code class="language-bash"># check current os is linux
function cf_is_linux() {
  [[ &quot;$OSTYPE&quot; = *linux* ]] &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  echo &quot;false&quot; &amp;&amp; return 1
}

# check current os is mac/darwin
function cf_is_darwin() {
  [[ &quot;$OSTYPE&quot; = *darwin* ]] &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  echo &quot;false&quot; &amp;&amp; return 1
}

# check current os is windows/cygwin
function cf_is_cygwin() {
  [[ &quot;$OSTYPE&quot; = *cygwin* ]] &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  echo &quot;false&quot; &amp;&amp; return 1
}

function cf_is_gnu_date() {
  date --version &gt;/dev/null 2&gt;&amp;1 &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  echo &quot;false&quot; &amp;&amp; return 1
}

function cf_is_gnu_sed() {
  sed --version &gt;/dev/null 2&gt;&amp;1 &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  echo &quot;false&quot; &amp;&amp; return 1
}

function cf_is_gnu_awk() {
  awk --version | grep GNU &gt;/dev/null &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  echo &quot;false&quot; &amp;&amp; return 1
}

function cf_is_gnu_grep() {
  grep --version | grep GNU &gt;/dev/null &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  echo &quot;false&quot; &amp;&amp; return 1
}

# java style startsWith
function cf_starts_with() {
  local str=$1
  local pre=$2
  [[ &quot;$str&quot; ==  ${pre}* ]]
}

# java style substring
function cf_substring() {
  local str=$1
  local begin=$2
  local end=$3
  if [ -z &quot;$end&quot; ]; then
    echo ${str:$begin} 
  else
    local len=`expr $end - $begin`
    echo ${str:$begin:$len}
  fi
}

# get current shell name
function cf_shell_name() {
  local name=$( ps -ocommand= -p $$ | awk &#39;{print $1}&#39;)
  if cf_starts_with $name &quot;-&quot;; then
    cf_substring $name 1
  else
    echo $name
  fi
}

# check current shell is bash
function cf_is_bash() {
  [[ `cf_shell_name` = &quot;-bash&quot; || `basename $(cf_shell_name)` = &quot;bash&quot; ]] &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  echo &quot;false&quot; &amp;&amp; return 1
}

# check current shell is zsh
function cf_is_zsh() {
  [[ `cf_shell_name` = &quot;-zsh&quot; || `basename $(cf_shell_name)` = &quot;zsh&quot; ]] &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  echo &quot;false&quot; &amp;&amp; return 1
}

function _script_dir() {
  if cf_is_bash &gt;/dev/null; then
    cd &quot;$( dirname &quot;${BASH_SOURCE[0]}&quot; )&quot; &amp;&amp; pwd -P 
  elif cf_is_zsh &gt;/dev/null; then
    cd &quot;$( dirname &quot;${(%):-%N}&quot; )&quot; &amp;&amp; pwd -P 
  else
    echo &quot;unsupported shell&quot; &amp;&amp; return 1
  fi
}

function _script_file() {
  if cf_is_bash &gt;/dev/null; then
    basename &quot;${BASH_SOURCE[0]}&quot; 
  elif cf_is_zsh &gt;/dev/null; then
    basename &quot;${(%):-%N}&quot; 
  else
    echo &quot;unsupported shell&quot; &amp;&amp; return 1
  fi
}

# colorful grep. private function
function _get_colorful_grep() {
  cf_is_gnu_grep &gt;/dev/null &amp;&amp; echo &quot;grep --color&quot; &amp;&amp; return 0
  export GREP_OPTIONS=&#39;--color=always&#39;
  export GREP_COLOR=&#39;1;35;40&#39;
  echo &quot;grep&quot; 
}

# list all common functions
function cf_functions() {
  if cf_is_bash &gt;/dev/null; then
    declare -F | awk &#39;{print $NF}&#39; | grep &quot;cf_&quot; | sort
  elif cf_is_zsh &gt;/dev/null; then
    print -l ${(ok)functions} | grep &quot;cf_&quot; | sort
  else
    echo &quot;unsupported shell&quot; &amp;&amp; return 1
  fi
}

# get total memory (MB)
function cf_mem_total() {
  if cf_is_linux &gt;/dev/null; then
    free -m | awk &#39;/^Mem/{print $2&quot;M&quot;}&#39;
  elif cf_is_darwin &gt;/dev/null; then
    sysctl hw.memsize | awk &#39;{print $2/1024/1024&quot;M&quot;}&#39;
  else
    echo &quot;unsupported os&quot; &amp;&amp; return 1
  fi 
}

# decimal to hexadecimal
function cf_dec2Hex() {
  printf &quot;%x&quot; $1
}

# decimal to octal 
function cf_dec2Oct() {
  printf &quot;%o&quot; $1
}

# decimal to binary
function cf_dec2Bin() {
  echo &quot;obase=2; $1&quot; | bc
}

# hexadecimal to decimal 
function cf_hex2Dec() {
  echo $((16#$1))
}

# octal to decimal 
function cf_oct2Dec() {
  echo $((8#$1))
}

# binary to decimal 
function cf_bin2Dec() {
  echo $((2#$1))
}

function cf_calc() {
  local exp=&quot;$1&quot;
  echo &quot;$exp&quot; | bc -l | awk &#39;{printf &quot;%.2f&quot;, $0}&#39;
}

# warning and exit, not for interactive shell
function cf_die() {
  local msg=&quot;$1&quot;
  local code=${2:-1}
  echo &quot;$msg&quot; &amp;&amp; exit $code
}

# highlight key words from file or pipeline
function cf_highlight() {
  local keyword=&quot;$1&quot;
  local cgrep=&quot;$(_get_colorful_grep)&quot;
  if [ -p /dev/stdin ]; then
    # from pipeline
    while IFS=&#39;&#39; read line; do
      echo $line | eval &quot;$cgrep -E \&quot;${keyword}|$\&quot;&quot;
    done
  else
    local file=&quot;$2&quot;
    eval &quot;$cgrep -E \&quot;${keyword}|$\&quot;&quot; &quot;$file&quot;
  fi
}

function cf_ps_env() {
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1

  if cf_is_linux &gt;/dev/null; then
    xargs --null --max-args=1 &lt; /proc/$pid/environ
  elif cf_is_darwin &gt;/dev/null; then
    ps -wwE -p $pid
  else
    echo &quot;unsupported os&quot; &amp;&amp; return 1
  fi
}

# get bash(current shell) major version
function cf_bash_major_ver() {
  echo ${BASH_VERSINFO[0]}
}

# get bash(current shell) minor version
function cf_bash_minor_ver() {
  echo ${BASH_VERSINFO[1]}
}

# get kernel version
function cf_kernel_ver() {
  if cf_is_linux &gt;/dev/null; then
    uname -r | cut -d&#39;-&#39; -f1
  elif cf_is_darwin &gt;/dev/null; then
    uname -r | cut -d&#39;-&#39; -f1
  else
    echo &quot;unsupported os&quot; &amp;&amp; return 1
  fi
}

# get kernel major version
function cf_kernel_major_ver() {
  if cf_is_linux &gt;/dev/null; then
    uname -r | awk -F&#39;.&#39; &#39;{print $1&quot;.&quot;$2}&#39; 
  elif cf_is_darwin &gt;/dev/null; then
    uname -r | awk -F&#39;.&#39; &#39;{print $1&quot;.&quot;$2}&#39; 
  else
    echo &quot;unsupported os&quot; &amp;&amp; return 1
  fi
}

# get kernel minor version
function cf_kernel_minor_ver() {
  if cf_is_linux &gt;/dev/null; then
    uname -r | awk -F&#39;.&#39; &#39;{print $3}&#39;
  elif cf_is_darwin &gt;/dev/null; then
    uname -r | awk -F&#39;.&#39; &#39;{print $3}&#39;
  else
    echo &quot;unsupported os&quot; &amp;&amp; return 1
  fi
}

# get value from config file such as app.properties
function cf_get_property() {
  local file=&quot;$1&quot;
  local key=&quot;$2&quot;
  grep &quot;^${key}=&quot; &quot;$file&quot; | tr -d &#39;\r&#39; | cut -d&#39;=&#39; -f2 | cf_trim
}

# get command path, eg: `cf_command_path ls` output /usr/bin/ls
function cf_command_path() {
  local cmd=$1
  cf_is_bash &amp;&amp; builtin type -P $cmd &amp;&amp; return $?

  if [ -x /usr/bin/which ]; then
    local p=$( /usr/bin/which $1 | head -1 )
    [ ! -z &quot;$p&quot; ] &amp;&amp; echo $p &amp;&amp; return 0
    return 1
  else
    local p=$( which $1 | grep &quot;^/&quot; | head -1 )
    [ ! -z &quot;$p&quot; ] &amp;&amp; echo $p &amp;&amp; return 0
    return 1
  fi
}

# get all ip addresses
function cf_ip_list() {
  if [ -x /sbin/ip ]; then
    local list=$(/sbin/ip -o -4 addr list | awk &#39;{print $4}&#39; | cut -d&#39;/&#39; -f1 | tr &#39;\n&#39; &#39;,&#39;)
  else
    local list=$(/sbin/ifconfig | grep &quot;inet &quot; | awk &#39;{print $2}&#39; | sed &#39;s/addr://&#39; | tr &#39;\n&#39; &#39;,&#39;)
  fi
  echo ${list%,}
}

function cf_stdio() {
  local pid=$1
  /usr/sbin/lsof -a -p $pid -d 0,1,2
}

function cf_stdout() {
  local pid=$1
  if cf_is_linux &gt;/dev/null; then
    readlink -f /proc/$pid/fd/1
  elif cf_is_darwin &gt;/dev/null; then
    /usr/sbin/lsof -a -p $pid -d 1 | awk &#39;NR&gt;1{print $NF}&#39;
  else
    echo &quot;unsupported os&quot; &amp;&amp; return 1
  fi
}

# get file last modification time
function cf_last_modification() {
  local file=&quot;$1&quot;
  if [[ $OSTYPE == *linux* ]];then
    date +%Y%m%d%H%M%S -r $file
  elif [[ $OSTYPE == *darwin* ]];then
    stat -f &quot;%Sm&quot; -t &quot;%Y%m%d%H%M%S&quot; $file
  fi
}

# check current user is root 
function cf_is_root() {
  [ `whoami` = &quot;root&quot; ] &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  echo &quot;false&quot; &amp;&amp; return 1
}

# check current shell is interactive
function cf_is_interactive_shell() {
  if cf_is_bash &gt;/dev/null; then
    [[ &quot;$-&quot; = *i* ]] &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  elif cf_is_zsh &gt;/dev/null; then
    [[ -o interactive ]] &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  else
    echo &quot;unsupported shell&quot; &amp;&amp; return 1
  fi
  echo &quot;false&quot; &amp;&amp; return 1
}

# check current shell is login shell
function cf_is_login_shell() {
  if cf_is_bash &gt;/dev/null; then
    shopt -q login_shell &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  elif cf_is_zsh &gt;/dev/null; then
    [[ -o login ]] &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  else
    echo &quot;unsupported shell&quot; &amp;&amp; return 1
  fi
  echo &quot;false&quot; &amp;&amp; return 1
}

# check command is exists
function cf_is_command_exists() {
  local cmd=$1
  if [ -x /usr/bin/which ]; then
    /usr/bin/which $cmd &gt;/dev/null 2&gt;&amp;1 &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  else
    which $cmd &gt;/dev/null 2&gt;&amp;1 &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0 
  fi
  echo &quot;false&quot; &amp;&amp; return 1
}

# check file name globbing flag
function cf_is_glob_enabled() {
  if cf_is_bash &gt;/dev/null; then 
    [[ $- != *f* ]] &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  elif cf_is_zsh &gt;/dev/null; then
    [[ -o glob ]] &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  else
    echo &quot;unsupported shell&quot; &amp;&amp; return 1
  fi
  echo &quot;false&quot; &amp;&amp; return 1
}

# enable file name globbing
function cf_enable_glob() {
  cf_is_bash &gt;/dev/null &amp;&amp; set +f &amp;&amp; return 0
  cf_is_zsh &gt;/dev/null &amp;&amp; set -o glob &amp;&amp; return 0
  echo &quot;unsupported shell&quot; &amp;&amp; return 1
}

# disable file name globbing
function cf_disable_glob() {
  cf_is_bash &gt;/dev/null &amp;&amp; set -f &amp;&amp; return 0
  cf_is_zsh &gt;/dev/null &amp;&amp; set -o noglob &amp;&amp; return 0
  echo &quot;unsupported shell&quot; &amp;&amp; return 1
}

# check extglob flag
function cf_is_extglob_enabled() {
  if cf_is_bash &gt;/dev/null; then 
    shopt -q extglob &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  elif cf_is_zsh &gt;/dev/null; then
    [[ -o kshglob ]] &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  else
    echo &quot;unsupported shell&quot; &amp;&amp; return 1
  fi
  echo &quot;false&quot; &amp;&amp; return 1
}

# enable extglob 
function cf_enable_extglob() {
  cf_is_bash &gt;/dev/null &amp;&amp; shopt -s extglob &amp;&amp; return 0
  cf_is_zsh &gt;/dev/null &amp;&amp; set -o kshglob &amp;&amp; return 0
  echo &quot;unsupported shell&quot; &amp;&amp; return 1
}

# disable extglob 
function cf_disable_extglob() {
  cf_is_bash &gt;/dev/null &amp;&amp; shopt -u extglob &amp;&amp; return 0
  cf_is_zsh &gt;/dev/null &amp;&amp; unsetopt kshglob &amp;&amp; return 0
  echo &quot;unsupported shell&quot; &amp;&amp; return 1
}

# check pid is exists
function cf_is_pid_exists() {
  local pid=$1
  [ -z &quot;$pid&quot; ] &amp;&amp; echo &quot;false&quot; &amp;&amp; return 1
  kill -0 $pid &gt;/dev/null 2&gt;&amp;1 &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  echo &quot;false&quot; &amp;&amp; return 1
}

function cf_is_java() {
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  ps -ocommand= -p$pid | awk &#39;$1~/java$/&#39; &gt; /dev/null &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0
  echo &quot;false&quot; &amp;&amp; return 1
}

function cf_is_available_port() {
  local port=$1
  if [[ &quot;$OSTYPE&quot; = *linux* ]];then
    local r=$( netstat -ant | awk &#39;$6==&quot;LISTEN&quot; &amp;&amp; $4~&quot;:&#39;$port&#39;$&quot;&#39; )
  elif [[ &quot;$OSTYPE&quot; = *darwin* ]];then
    local r=$( netstat -ant | awk &#39;$6==&quot;LISTEN&quot;&#39; | grep &quot;\.$port &quot; )
  else
    echo &quot;unknown system&quot; &amp;&amp; return 1
  fi

  [ -z &quot;$r&quot; ] &amp;&amp; echo &quot;true&quot; &amp;&amp; return 0;
  echo &quot;false&quot; &amp;&amp; return 1 # port has been used
}

function cf_defined() {
  if cf_is_bash &gt;/dev/null; then
    [[ ${!1-X} == ${!1-Y} ]]
  elif cf_is_zsh &gt;/dev/null; then
    [[ ${(P)1-X} == ${(P)1-Y} ]]
  else
    echo &quot;unsupported shell&quot; &amp;&amp; return 1
  fi
}

function cf_has_value() {
    cf_defined $1 || return 1
    if cf_is_bash &gt;/dev/null; then
      [[ -n ${!1} ]] &amp;&amp; return 0
    elif cf_is_zsh &gt;/dev/null; then
      [[ -n ${(P)1} ]] &amp;&amp; return 0
    fi
    return 1
}

function cf_has_sudo_privilege() {
  # do not need password
  sudo -n echo &gt;/dev/null 2&gt;&amp;1
}

function cf_timestamp() {
  date +%F-%T | tr &#39;:-&#39; &#39;_&#39; #2015_12_01_22_15_22
}

function cf_length() {
  echo ${#1}
}

# trim string
function cf_trim() {
  if [ -p /dev/stdin ]; then
    while IFS=&#39;&#39; read line; do
      _trim &quot;$line&quot;
    done
  else
    _trim &quot;$1&quot;
  fi
}

# private function
function _trim() {
  local str=&quot;$1&quot;
  local extglob=$(cf_is_extglob_enabled)
  if cf_is_bash &gt;/dev/null || cf_is_zsh &gt;/dev/null; then
    [ $extglob = &quot;false&quot; ] &amp;&amp; cf_enable_extglob
    str=&quot;${str##*( )}&quot;
    str=&quot;${str%%*( )}&quot;
    [ $extglob = &quot;false&quot; ] &amp;&amp; cf_disable_extglob
  else
    echo &quot;unsupported shell&quot; &amp;&amp; return 1
  fi
  echo $str
}

function cf_lower() {
  echo &quot;$1&quot; | tr &#39;[:upper:]&#39; &#39;[:lower:]&#39;
}

function cf_upper() {
  echo &quot;$1&quot; | tr &#39;[:lower:]&#39; &#39;[:upper:]&#39;
}

function cf_ps_name() {
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  if cf_is_java $pid &gt;/dev/null; then
    local main=$(cf_ps_java_main $pid)
    echo &quot;java($main)&quot;
  else
    ps -ocommand= -p $pid | awk &#39;{print $1}&#39;
  fi
}

function cf_ppid() {
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  ps -oppid= -p $pid
}

function cf_ps_java_main() {
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  ps -ocommand= -p $pid | tr &#39; &#39; &#39;\n&#39; | awk &#39;/-classpath|-cp/{getline;next};/^-/{next}1&#39; | awk &#39;NR==2&#39;
}

function cf_ps_time() {
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1

  local elapsed=&quot;$(ps -oetime= -p $pid | cf_trim)&quot;
  local started=&quot;$(ps -olstart= -p $pid | cf_trim)&quot;
  if [ `cf_is_gnu_date` = &quot;true&quot; ]; then
    started=$(date +&#39;%Y-%m-%d %H:%M:%S&#39; -d &quot;$started&quot;)
  fi
  local cpu_time=$(ps -otime= -p $pid | cf_trim)
  echo &quot;started from: $started, elapsed: $elapsed, cumulative cpu time: $cpu_time&quot;
}

function cf_ps_zombies() {
  ps -opid,state,command -e | awk &#39;NR==1 || $2==&quot;Z&quot;&#39;
}

function cf_connection_topology() {
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1

  /usr/sbin/lsof -Pan -iTCP -p $pid &gt; /tmp/.$pid.lsof
  grep -o &quot;[0-9.:]*-&gt;[0-9.:]*&quot; /tmp/.$pid.lsof &gt; /tmp/.$pid.conns
  grep &quot;LISTEN&quot; /tmp/.$pid.lsof | awk &#39;$9~/*/{print substr($9,3)}&#39; &gt; /tmp/.$pid.ports

  echo &quot;-------------- downstream -------------&quot;
  for port in $(cat /tmp/.$pid.ports); do
    cf_connection_list_by_port $port | awk &#39;$6==&quot;ESTABLISHED&quot; {print $5}&#39; | cut -d&#39;:&#39; -f1 | sort | uniq -c | awk &#39;{print $2&quot;--&gt;localhost:&quot;&#39;$port&#39;&quot; (&quot;$1&quot;)&quot;}&#39;
  done

  echo &quot;-------------- upstream ---------------&quot;
  local portsExpr=$(cat /tmp/.$pid.ports | sed -e &#39;s/^/:/&#39; -e &#39;s/$/-&gt;/&#39; | xargs | sed &#39;s/ /|/g&#39;)
  grep -Ev &quot;$portsExpr&quot; /tmp/.$pid.conns &gt; /tmp/.$pid.out
  awk -F&#39;-&gt;&#39; &#39;{print $2}&#39; /tmp/.$pid.out | sort | uniq -c | sort -nrk1 | awk &#39;{print &quot;localhost--&gt;&quot;$2&quot; (&quot;$1&quot;)&quot;}&#39;
  rm -f /tmp/.$pid.lsof /tmp/.$pid.conns /tmp/.$pid.ports
}

function cf_connection_list_by_pid() {
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  /usr/sbin/lsof -Pan -iTCP -p $pid
}

function cf_connection_list_by_port() {
  local port=$1
  netstat -ant| awk &#39;$4~/[:.]&#39;&quot;$port&quot;&#39;$/&#39;
}

function cf_connection_stat_by_pid() {
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  local interval=${2:-1}
  /usr/sbin/lsof -Pan -iTCP -p $pid -r $interval
}

function cf_connection_stat_by_port() {
  local port=$1
  netstat -ant -c| awk &#39;$1==&quot;Proto&quot;{print &quot;\n&quot;$0};$4~/[:.]&#39;&quot;$port&quot;&#39;$/&#39;
}

function cf_listening_sockets() {
  #lsof -Pnl -i4TCP -sTCP:LISTEN #low version unsupported -sTCP params
  if cf_is_linux &gt;/dev/null || cf_is_darwin &gt;/dev/null; then
    if cf_has_sudo_privilege; then
      sudo /usr/sbin/lsof -Pnl -i4TCP | grep LISTEN
    else
      /usr/sbin/lsof -Pnl -i4TCP | grep LISTEN
    fi
  else
    netstat -plnt 2&gt;/dev/null | grep -v tcp6
  fi
}

function cf_traffic_by_eth() {
  local eth=${1:-&quot;eth0&quot;}
  if cf_is_linux &gt;/dev/null; then
    [ ! -d /sys/class/net/$eth ] &amp;&amp; echo &quot;network interface not exists.&quot; &amp;&amp; return 1
    while true; do
      local r1=`cat /sys/class/net/$eth/statistics/rx_bytes`
      local t1=`cat /sys/class/net/$eth/statistics/tx_bytes`
      sleep 1
      local r2=`cat /sys/class/net/$eth/statistics/rx_bytes`
      local t2=`cat /sys/class/net/$eth/statistics/tx_bytes`
      local rkbps=`cf_calc &quot;( $r2 - $r1 ) / 1024&quot;`
      local tkbps=`cf_calc &quot;( $t2 - $t1 ) / 1024&quot;`
      echo &quot;$eth: RX $rkbps kB/s TX $tkbps kB/s&quot;
    done
  elif cf_is_darwin &gt;/dev/null; then
    # `netstat -I eth0 -w 1` or `nettop -n -m tcp`
    declare -a tuple
    local _i1=0
    cf_is_zsh &gt;/dev/null &amp;&amp; _i1=1
    local _i2=1
    cf_is_zsh &gt;/dev/null &amp;&amp; _i1=2
    while true; do
      tuple=( $(netstat -nbi -I $eth | tail -1 | awk &#39;{print $7,$10}&#39;) )
      local r1=${tuple[$_i1]}
      local t1=${tuple[$_i2]}
      sleep 1
      tuple=( $(netstat -nbi -I $eth | tail -1 | awk &#39;{print $7,$10}&#39;) )
      local r2=${tuple[$_i1]}
      local t2=${tuple[$_i2]}
      local rkbps=`cf_calc &quot;( $r2 - $r1 ) / 1024&quot;`
      local tkbps=`cf_calc &quot;( $t2 - $t1 ) / 1024&quot;`
      echo &quot;$eth: RX $rkbps kB/s TX $tkbps kB/s&quot;
    done
  else
    echo &quot;unsupported os&quot; &amp;&amp; return 1
  fi
}

function cf_traffic_by_pid() {
  ! cf_is_linux &gt;/dev/null &amp;&amp; echo &quot;only works in linux&quot; &amp;&amp; return 1
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1

  # kernel 2.6.18 not support, must 2.6.32 or later?
  local pf=&quot;/proc/$pid/net/netstat&quot;
  [ ! -f $pf ] &amp;&amp; echo &quot;$pf not found!&quot; &amp;&amp; return 1

  declare -a tuple
  local _i1=0
  cf_is_zsh &gt;/dev/null &amp;&amp; _i1=1
  local _i2=1
  cf_is_zsh &gt;/dev/null &amp;&amp; _i1=2
  local pname=&quot;$(cf_ps_name $pid)&quot;
  while true; do
    tuple=( $(grep &quot;IpExt: &quot; $pf | awk &#39;NR==2{print $8,$9}&#39;) )
    local r1=${tuple[$_i1]}
    local t1=${tuple[$_i2]}
    sleep 1
    tuple=( $(grep &quot;IpExt: &quot; $pf | awk &#39;NR==2{print $8,$9}&#39;) )
    local r2=${tuple[$_i1]}
    local t2=${tuple[$_i2]}
    local rkbps=`cf_calc &quot;( $r2 - $r1 ) / 1024&quot;`
    local tkbps=`cf_calc &quot;( $t2 - $t1 ) / 1024&quot;`
    echo &quot;$pname: IN $rkbps kB/s OUT $tkbps kB/s&quot;
  done
}

function cf_iotop() {
  sudo iotop -bod1
}

function cf_check_sum() {
  local dir=${1:-$PWD}
  local dirsum=0
  for sum  in $(find ${dir} -type f -print0 | xargs -0 cksum | awk &#39;{print $1}&#39;)
  do
    dirsum=$(( ${sum} + ${dirsum} ))
  done
  echo ${dirsum}
}

function cf_java_classpath_check() {
  [ $# -eq 0 ] &amp;&amp; echo &quot;please enter classpath dir&quot; &amp;&amp; return 1
  [ ! -d &quot;$1&quot; ] &amp;&amp; echo &quot;not a directory&quot; &amp;&amp; return 1

  local tmpfile=&quot;/tmp/.cp$(date +%s)&quot;
  local tmphash=&quot;/tmp/.hash$(date +%s)&quot;
  local verbose=&quot;/tmp/cp-verbose.log&quot;

  if cf_is_zsh &gt;/dev/null;then
    local -a files
    local begin=1
  elif cf_is_bash &gt;/dev/null;then
    declare -a files
    local begin=0
  else 
    echo &quot;unsupported shell&quot; &amp;&amp; return 1
  fi
  files=(`find &quot;$1&quot; -name &quot;*.jar&quot;`)

  for f in $files; do
    jarName=`basename $f`
    list=`unzip -l $f | awk -v fn=$jarName &#39;/\.class$/{print $NF,fn}&#39;`
    size=`echo &quot;$list&quot; | wc -l`
    echo $jarName $size &gt;&gt; $tmphash
    echo &quot;$list&quot;
  done | sort | awk &#39;NF{ a[$1]++;m[$1]=m[$1]&quot;,&quot;$2}END{for(i in a) if(a[i] &gt; 1) print i,substr(m[i],2)}&#39; &gt; $tmpfile

  awk &#39;{print $2}&#39; $tmpfile | awk -F&#39;,&#39; &#39;{i=1;for(;i&lt;=NF;i++) for(j=i+1;j&lt;=NF;j++) print $i,$j}&#39; | sort | uniq -c | sort -nrk1 | 
  while read line; do
    local dup=${line%% *}
    local jars=${line#* }
    local jar1=${jars% *}
    local jar2=${jars#* }
    local len_jar1=`grep -F &quot;$jar1&quot; $tmphash | grep ^&quot;$jar1&quot; | awk &#39;{print $2}&#39;`
    local len_jar2=`grep -F &quot;$jar2&quot; $tmphash | grep ^&quot;$jar2&quot; | awk &#39;{print $2}&#39;`
    local len=$(($len_jar1 &gt; $len_jar2 ? $len_jar1 : $len_jar2))
    local per=$(echo &quot;scale=2; $dup/$len&quot; | bc -l)
    echo ${per/./} $dup $jar1 $jar2
  done | sort -nr -k1 -k2 | awk &#39;NR==1{print &quot;Similarity DuplicateClasses File1 File2&quot;}{print &quot;%&quot;$0}&#39;| column -t

  sort $tmpfile | awk &#39;{print $1,&quot;\n\t\t&quot;,$2}&#39; &gt; $verbose
  echo &quot;See $verbose for more details.&quot;

  rm -f $tmpfile
  rm -f $tmphash
}

function cf_java_class_find() {
  local libdir=$1
  local name=$2
  local glob=$(cf_is_glob_enabled)
  [ $glob = &quot;false&quot; ] &amp;&amp; cf_enable_glob
  builtin pushd $libdir &gt;/dev/null
  for j in *.jar; do
    unzip -l $j | grep $name &amp;&amp; echo $j;
  done
  builtin popd &gt;/dev/null
  [ $glob = &quot;false&quot; ] &amp;&amp; cf_disable_glob
}

function cf_java_pids() {
  ps x | grep &quot;jav[a]&quot; | awk &#39;{print $1}&#39;
}

function cf_java_infos() {
  for p in `cf_java_pids`; do
    echo &quot;java pid: $p&quot;
    info=`ps -opid=,command= -p $p | tr &#39; &#39; &#39;\n&#39; | awk &#39;/-classpath|-cp/{getline;next};/-Xmx|-Dcatalina.base/{print};/^-/{next};1&#39; | xargs`
    echo &quot;  $info&quot;
    time=`cf_ps_time $p`
    echo &quot;  $time&quot;
  done
}

function cf_java_threads() {
  local pid=$1
  local vm_threads=&quot;GC task|VM |CompilerThread|Finalizer|Reference Handler|Signal Dispatcher&quot;
  &quot;$JAVA_HOME&quot;/bin/jstack $pid | grep &quot;^\&quot;&quot; | grep -Ev &quot;$vm_threads&quot;
}

function cf_java_sysprops() {
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  &quot;$JAVA_HOME&quot;/bin/jinfo -sysprops $pid
}

function cf_jstack_series() {
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  local count=${2:-5}  # defaults 5 times
  local delay=${3:-0.5} # defaults 0.5 seconds

  local logdir=${LOG_DIR:-&quot;/tmp&quot;}
  while [ $count -gt 0 ]; do
    if cf_is_gnu_date &gt;/dev/null; then 
      local suffix=$(date +%H%M%S.%N)
    else
      local suffix=$(date +%H%M%S)&quot;.&quot;$count
    fi
    &quot;$JAVA_HOME&quot;/bin/jstack $pid &gt; $logdir/jstack.$pid.$suffix
    sleep $delay
    let count--
    echo -n &quot;.&quot;
  done
}

function cf_dmesg() {
  ! cf_is_linux &gt;/dev/null &amp;&amp; echo &quot;only works in linux&quot; &amp;&amp; return 1

  dmesg -T &quot;$@&quot; 2&gt;/dev/null
  [ $? -eq 0 ] &amp;&amp; return 0

  dmesg &quot;$@&quot; | perl -w -e &#39;use strict;
  my ($uptime) = do { local @ARGV=&quot;/proc/uptime&quot;;&lt;&gt;}; ($uptime) = ($uptime =~ /^(\d+)\./);
  foreach my $line (&lt;&gt;) {
    printf( ($line=~/^\[\s*(\d+)\.\d+\](.+)/) ? ( &quot;[%s]%s\n&quot;, scalar localtime(time - $uptime + $1), $2 ) : $line )
  }&#39;
}

function cf_trace_http_request() {
  ! cf_is_linux &gt;/dev/null &amp;&amp; echo &quot;only works in linux&quot; &amp;&amp; return 1
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  strace -e read -s 2000 -qftp $pid 2&gt;&amp;1 | grep &quot; HTTP/1[.][01][\]r[\]n&quot; 
}

function cf_trace_http_response() {
  ! cf_is_linux &gt;/dev/null &amp;&amp; echo &quot;only works in linux&quot; &amp;&amp; return 1
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  strace -e write -s 2000 -qftp $pid 2&gt;&amp;1 | grep &quot;HTTP/1[.][01] &quot; 
}

function cf_trace_http_req_header() {
  ! cf_is_linux &gt;/dev/null &amp;&amp; echo &quot;only works in linux&quot; &amp;&amp; return 1
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  strace -e read -s 2000 -qftp $pid 2&gt;&amp;1 | grep &quot; HTTP/1[.][01][\]r[\]n&quot; | sed  &#39;s/\\r\\n/\n/g&#39;
}

function cf_trace_http_resp_header() {
  ! cf_is_linux &gt;/dev/null &amp;&amp; echo &quot;only works in linux&quot; &amp;&amp; return 1
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  strace -e write -s 2000 -qftp $pid 2&gt;&amp;1 | grep &quot;HTTP/1[.][01] &quot; | sed &#39;s/\\r\\n/\n/g&#39;
}

function cf_trace_http_invoke() {
  ! cf_is_linux &gt;/dev/null &amp;&amp; echo &quot;only works in linux&quot; &amp;&amp; return 1
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  strace -e sendto -s 2000 -qftp $pid 2&gt;&amp;1 | grep &quot; HTTP/1[.][01][\]r[\]n&quot; 
}

function cf_trace_connect() {
  ! cf_is_linux &gt;/dev/null &amp;&amp; echo &quot;only works in linux&quot; &amp;&amp; return 1
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  strace -e connect -s 2000 -qftp $pid 2&gt;&amp;1 | grep &quot;port&quot;
}

function cf_trace_socket() {
  ! cf_is_linux &gt;/dev/null &amp;&amp; echo &quot;only works in linux&quot; &amp;&amp; return 1
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  strace -e connect,socket,close -s 2000 -qftp $pid 2&gt;&amp;1 | grep &quot;port&quot;
}

function cf_trace_sql_select() {
  ! cf_is_linux &gt;/dev/null &amp;&amp; echo &quot;only works in linux&quot; &amp;&amp; return 1
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  strace -e sendto,write -s 2000 -qftp $pid 2&gt;&amp;1 | grep -i &quot;[\]3select&quot;
}

function cf_trace_sql_update() {
  ! cf_is_linux &gt;/dev/null &amp;&amp; echo &quot;only works in linux&quot; &amp;&amp; return 1
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  strace -e sendto,write -s 2000 -qftp $pid 2&gt;&amp;1 | grep -i &quot;[\]3update&quot;
}

function cf_trace_sql_insert() {
  ! cf_is_linux &gt;/dev/null &amp;&amp; echo &quot;only works in linux&quot; &amp;&amp; return 1
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  strace -e sendto,write -s 2000 -qftp $pid 2&gt;&amp;1 | grep -i &quot;[\]3insert&quot;
}

function cf_trace_redis_command() {
  ! cf_is_linux &gt;/dev/null &amp;&amp; echo &quot;only works in linux&quot; &amp;&amp; return 1
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  local cmd=$2
  strace -e sendto,write -s 2000 -qftp $pid 2&gt;&amp;1 | grep -i &quot;$cmd[\]r[\]n&quot;
}

function cf_trace_dubbo_request() {
  ! cf_is_linux &gt;/dev/null &amp;&amp; echo &quot;only works in linux&quot; &amp;&amp; return 1
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  strace -e read -s 2000 -qftp $pid 2&gt;&amp;1 | grep -i &quot;[\]tinterface&quot;
}

function cf_trace_dubbo_invoke() {
  ! cf_is_linux &gt;/dev/null &amp;&amp; echo &quot;only works in linux&quot; &amp;&amp; return 1
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  strace -e write -s 2000 -qftp $pid 2&gt;&amp;1 | grep -i &quot;[\]tinterface&quot;
}

function cf_trace_system_call() {
  ! cf_is_linux &gt;/dev/null &amp;&amp; echo &quot;only works in linux&quot; &amp;&amp; return 1
  local pid=$1
  ! cf_is_pid_exists &gt;/dev/null $pid &amp;&amp; echo &quot;pid:$pid not exists&quot; &amp;&amp; return 1
  local time=${2:-5}

  local outfile=&quot;/tmp/.sys-call.$pid&quot;
  strace -cqftp $pid -o $outfile &amp; 
  local spid=$!
  while [ $time -gt 0 ]; do
    sleep 1
    let time--
    echo -n &quot;.&quot;
  done
  echo &quot;&quot;
  kill $spid &amp;&amp; echo &quot;ok&quot;
  # if strace process still exists
  cf_is_pid_exists $spid &gt;/dev/null 2&gt;&amp;1 &amp;&amp; kill -9 $spid
  cat $outfile &amp;&amp; rm -f $outfile
}

function cf_random_entropy_stat() {
  ! cf_is_linux &gt;/dev/null &amp;&amp; echo &quot;only works in linux&quot; &amp;&amp; return 1
  while true; do
    echo &quot;entropy available:&quot; `cat /proc/sys/kernel/random/entropy_avail`
    sleep 1
  done
}

function cf_json_fmt() {
  python -mjson.tool
}

function cf_http_server() {
  local port=${1:-8000}
  python -mSimpleHTTPServer $port 2&gt;/dev/null
}
</code></pre>
</div>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
			本条目发布于<a href="http://hongjiang.info/common-bash-functions/" title="00:22" rel="bookmark"><time class="entry-date" datetime="2018-01-12T00:22:49+00:00">2018-01-12</time></a>。属于<a href="http://hongjiang.info/category/programming/shell/" rel="category tag">shell</a>分类，被贴了 <a href="http://hongjiang.info/tag/bash/" rel="tag">bash</a> 标签。<span class="by-author">作者是<span class="author vcard"><a class="url fn n" href="http://hongjiang.info/author/hongjiang/" title="查看所有由hongjiang发布的文章" rel="author">hongjiang</a></span>。</span>								</footer><!-- .entry-meta -->
	</article><!-- #post -->
							
	<article id="post-2103" class="post-2103 post type-post status-publish format-standard hentry category-uncategorized">
				<header class="entry-header">
			
						<h1 class="entry-title">
				<a href="http://hongjiang.info/these-violent-delights-have-violent-ends/" rel="bookmark">狂暴的欢愉必将有狂暴的结局</a>
			</h1>
										<div class="comments-link">
					<a href="http://hongjiang.info/these-violent-delights-have-violent-ends/#comments">1条回复</a>				</div><!-- .comments-link -->
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p>狂暴的欢愉必将有狂暴的结局，这句话是从《西部世界》里听到的，用来形容我对这一波数字化货币行情的感受再切合不过了。</p>
<p>并不是在这几天得知政府会将所有数字化货币交易关闭的消息后才有这样的感受。我是在这一波经历的末端才参与的，当时高潮已过，但一些八九月份ICO的项目仍存在极大投机性，便投了一点钱，目前当然是亏损了很多，但投入量很小，损失也在预期之内。</p>
<p>在2016年初的时候，开始关注到区块链相关的技术，当时这个概念还没有那么普及，但几乎不到半年时间这个概念被迅速放大并普及。大概也是2016年二三月份的时候还去上海静安寺附近的一家咖啡馆参加过一次以太坊的技术聚会，但那个时候完全是出于对其技术方面的好奇。与会的一半是区块链领域开发者，一半是投机者。有不少人现在已经在这个圈子较有影响力，比如后来的imtoken钱包的创始人何斌、秘猿科技的创始人Jan、暴走恭亲王、还有一些其他区块链创业公司的核心开发者等等。坐在我身边的好像还有果仁宝CTO，以及一位做智能跑步机的创业者（他在考虑将用户的跑步积分与挖矿虚拟货币兑换，当时令我很惊讶）。</p>
<p>只可惜那次聚会除了对一些技术概念熟悉了些，因为后续没有应用场景，就没有再对区块链进行关注。以太坊之后经历过被黑客攻击以及分叉等曲折的故事。等我再次关注关注到它的时候，已经是2017年的六七月，这时以太坊的价格已经增长了近一百倍。</p>
<p>并没有过懊悔什么，这个机会并不属于没有准备的人。我之前的好奇只是关注它的技术层面，从没有想到在投机性方面还存在如此巨大的可能，对它背后的经济学理论也懵懵懂懂、半信半疑。所以这一波行情跟我没什么关系。只是仍没有经住ICO的一些诱惑，尽管对行情走势看跌，但万一ICO的项目撞上一个爆发的呢？</p>
<p>蛮荒时代必有超常规的手段，政府的干预让这个事情变得如何还不一定，当我看着那些T恤上印着“一切才刚刚开始”或“Decentralize Everything”的九零后小伙子目光中充满笃信的神态时，迟疑自己是否有些老了，或许DAO时代真的可能会到来？</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
			本条目发布于<a href="http://hongjiang.info/these-violent-delights-have-violent-ends/" title="02:24" rel="bookmark"><time class="entry-date" datetime="2017-09-15T02:24:30+00:00">2017-09-15</time></a>。属于<a href="http://hongjiang.info/category/uncategorized/" rel="category tag">未分类</a>分类。<span class="by-author">作者是<span class="author vcard"><a class="url fn n" href="http://hongjiang.info/author/hongjiang/" title="查看所有由hongjiang发布的文章" rel="author">hongjiang</a></span>。</span>								</footer><!-- .entry-meta -->
	</article><!-- #post -->
							
	<article id="post-2095" class="post-2095 post type-post status-publish format-standard hentry category-uncategorized tag-195">
				<header class="entry-header">
			
						<h1 class="entry-title">
				<a href="http://hongjiang.info/recruit-engineers-2017/" rel="bookmark">继续招聘</a>
			</h1>
										<div class="comments-link">
					<a href="http://hongjiang.info/recruit-engineers-2017/#comments">4条回复</a>				</div><!-- .comments-link -->
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p>我们在招Java/Scala的资深工程师(或技术专家)，你将有机会跟我们共同参与一些挖财基础设施的开发。整体上我们算是偏中庸的一个技术团队，形成一套适合自己的技术栈，相对务实。这次招聘的岗位有面向中间件岗位的开发（消息、分布式事务、存储等），以及面向信贷业务的开发。</p>
<p>对于中间件开发岗位，如果你有Akka的应用经验更好，不过掌握Scala/Akka并不是必要条件，基本的要求是功底扎实，对分布式有一定的了解。至少有三年以上的工作经验，熟悉Java/Scala/C++其中之一。</p>
<p>对于业务开发岗位，希望你有较扎实的基本功和责任心，熟悉Spring生态和SOA，善于沟通和团队协作，有支付或互联网金融相关的工作背景会有加分。</p>
<p>工作地点在杭州。对职位感兴趣的请发邮件到: cuodao(at)wacai.com </p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
			本条目发布于<a href="http://hongjiang.info/recruit-engineers-2017/" title="22:55" rel="bookmark"><time class="entry-date" datetime="2017-07-24T22:55:53+00:00">2017-07-24</time></a>。属于<a href="http://hongjiang.info/category/uncategorized/" rel="category tag">未分类</a>分类，被贴了 <a href="http://hongjiang.info/tag/%e6%8b%9b%e8%81%98/" rel="tag">招聘</a> 标签。<span class="by-author">作者是<span class="author vcard"><a class="url fn n" href="http://hongjiang.info/author/hongjiang/" title="查看所有由hongjiang发布的文章" rel="author">hongjiang</a></span>。</span>								</footer><!-- .entry-meta -->
	</article><!-- #post -->
							
	<article id="post-2093" class="post-2093 post type-post status-publish format-standard hentry category-uncategorized tag-blog tag-https">
				<header class="entry-header">
			
						<h1 class="entry-title">
				<a href="http://hongjiang.info/operator-hijacks/" rel="bookmark">本站已支持https访问</a>
			</h1>
										<div class="comments-link">
					<a href="http://hongjiang.info/operator-hijacks/#comments">1条回复</a>				</div><!-- .comments-link -->
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p>几个月前已经配置了https，已经支持使用https方式访问本站，否则你可能在访问时遇到运营商广告劫持的情况，类似下图右下角的这个广告（宽带运营商篡改了http植入了广告）：</p>
<p><img src="https://hongjiang.info/wp-content/uploads/2017/07/operator-hijacks.jpg" style="width:600px"/></p>
<p>不过以前的blog里有些图片使用的url仍是http的，所以在chrome浏览器里可能看到有图片内容的文章时，并没有在地址栏展示一个绿色Secure锁的标记。</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
			本条目发布于<a href="http://hongjiang.info/operator-hijacks/" title="01:50" rel="bookmark"><time class="entry-date" datetime="2017-07-22T01:50:04+00:00">2017-07-22</time></a>。属于<a href="http://hongjiang.info/category/uncategorized/" rel="category tag">未分类</a>分类，被贴了 <a href="http://hongjiang.info/tag/blog/" rel="tag">blog</a>、<a href="http://hongjiang.info/tag/https/" rel="tag">https</a> 标签。<span class="by-author">作者是<span class="author vcard"><a class="url fn n" href="http://hongjiang.info/author/hongjiang/" title="查看所有由hongjiang发布的文章" rel="author">hongjiang</a></span>。</span>								</footer><!-- .entry-meta -->
	</article><!-- #post -->
							
	<article id="post-2088" class="post-2088 post type-post status-publish format-standard hentry category-programming category-scala tag-actor tag-akka tag-roundrobin">
				<header class="entry-header">
			
						<h1 class="entry-title">
				<a href="http://hongjiang.info/akka-roundrobin-routing-bug/" rel="bookmark">Akka的RoundRobinRouting实现存在bug</a>
			</h1>
										<div class="comments-link">
					<a href="http://hongjiang.info/akka-roundrobin-routing-bug/#comments">3条回复</a>				</div><!-- .comments-link -->
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p>Akka的<code>RoundRobinRouting</code>实现存在bug，当累计执行超过Long最大值之后(变为负数)，会导致分散不均，最后一个节点永远分配不上，直到累计值再次变为正数才恢复均匀。代码如下(2.4.9版本)：</p>
<div>
<pre><code class="language-none">final class RoundRobinRoutingLogic extends RoutingLogic {
  val next = new AtomicLong

  override def select(message: Any, routees: immutable.IndexedSeq[Routee]): Routee =
    if (routees.nonEmpty) {
      val size = routees.size
      val index = (next.getAndIncrement % size).asInstanceOf[Int]
      routees(if (index &lt; 0) size + index - 1 else index)
    } else NoRoutee

}</code></pre>
</div>
<p>上面<code>select</code>函数里当<code>index</code>为负数时，返回<code>size + index - 1</code>存在问题，用一段java代码验证一下：</p>
<div>
<pre><code class="language-none">import java.util.concurrent.atomic.AtomicLong;

public class Test {

    static final AtomicLong next = new AtomicLong(-2003);
    static final int size = 4;

    static int getNext() {
        int index = (int) (next.getAndIncrement() % size);
        if (index &lt; 0)
            return size + index - 1;
        else
            return index;
    }

    public static void main(String[] args) {
        for (int n = 0; n &lt; 8; n++) {
            System.out.println(getNext());
        }
    }
}

// 运行后输出：
0
1
2
0
0
1
2
0
</code></pre>
</div>
<p>上面的代码假设有4个节点，当<code>next</code>为负数后，一直在&quot;0,1,2&quot;这三个节点上分配，不会分配给最后一个节点（即索引为3的），修正的方式是当<code>index</code>为负数后，返回其绝对值(即 -index)即可。</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
			本条目发布于<a href="http://hongjiang.info/akka-roundrobin-routing-bug/" title="21:15" rel="bookmark"><time class="entry-date" datetime="2017-06-28T21:15:37+00:00">2017-06-28</time></a>。属于<a href="http://hongjiang.info/category/programming/" rel="category tag">programming</a>、<a href="http://hongjiang.info/category/programming/scala/" rel="category tag">scala</a>分类，被贴了 <a href="http://hongjiang.info/tag/actor/" rel="tag">actor</a>、<a href="http://hongjiang.info/tag/akka/" rel="tag">akka</a>、<a href="http://hongjiang.info/tag/roundrobin/" rel="tag">roundrobin</a> 标签。<span class="by-author">作者是<span class="author vcard"><a class="url fn n" href="http://hongjiang.info/author/hongjiang/" title="查看所有由hongjiang发布的文章" rel="author">hongjiang</a></span>。</span>								</footer><!-- .entry-meta -->
	</article><!-- #post -->
							
	<article id="post-2082" class="post-2082 post type-post status-publish format-standard hentry category-programming tag-spring-boot tag-tomcat">
				<header class="entry-header">
			
						<h1 class="entry-title">
				<a href="http://hongjiang.info/spring-boot-1-4-bug/" rel="bookmark">spring-boot 1.4.x遇到的cpu高的问题</a>
			</h1>
										<div class="comments-link">
					<a href="http://hongjiang.info/spring-boot-1-4-bug/#comments">1条回复</a>				</div><!-- .comments-link -->
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p>如果你的spring-boot应用里tomcat线程耗cpu较高，并主要耗在做读取jar的操作上(堆栈类似下面)，可能跟我们遇到同样的问题。</p>
<div>
<pre><code class="language-none">    CRC32.update(byte[], int, int) line: 76
    JarInputStream(ZipInputStream).read(byte[], int, int) line: 200
    JarInputStream.read(byte[], int, int) line: 207
    JarInputStream(ZipInputStream).closeEntry() line: 140
    JarInputStream(ZipInputStream).getNextEntry() line: 118
    JarInputStream.getNextEntry() line: 142
    JarInputStream.getNextJarEntry() line: 179
    JarWarResourceSet.getArchiveEntries(boolean) line: 112
    JarWarResourceSet(AbstractArchiveResourceSet).getResource(String) line: 256
    StandardRoot.getResourceInternal(String, boolean) line: 280
    CachedResource.validateResource(boolean) line: 95
    Cache.getResource(String, boolean) line: 69
    StandardRoot.getResource(String, boolean, boolean) line: 215
    StandardRoot.getResource(String) line: 205
    Mapper.internalMapWrapper(Mapper$ContextVersion, CharChunk, MappingData) line: 1027
    Mapper.internalMap(CharChunk, CharChunk, String, MappingData) line: 842
    Mapper.map(MessageBytes, MessageBytes, String, MappingData) line: 698
    CoyoteAdapter.postParseRequest(Request, Request, Response, Response) line: 672
    CoyoteAdapter.service(Request, Response) line: 344
    Http11Processor.service(SocketWrapperBase&lt;?&gt;) line: 784
    Http11Processor(AbstractProcessorLight).process(SocketWrapperBase&lt;?&gt;, SocketEvent) line: 66
    AbstractProtocol$ConnectionHandler&lt;S&gt;.process(SocketWrapperBase&lt;S&gt;, SocketEvent) line: 802
    NioEndpoint$SocketProcessor.doRun() line: 1410
    NioEndpoint$SocketProcessor(SocketProcessorBase&lt;S&gt;).run() line: 49
    ThreadPoolExecutor(ThreadPoolExecutor).runWorker(ThreadPoolExecutor$Worker) line: 1142
    ThreadPoolExecutor$Worker.run() line: 617
    TaskThread$WrappingRunnable.run() line: 61
    TaskThread(Thread).run() line: 745  </code></pre>
</div>
<p>这种情况只发生在 spring-boot 1.4.x版本(及1.3.x版本，更早的没有确认)，1.5.x已经没有这个问题。</p>
<p>主要的改变在<code>org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory</code>的内部类<code>StoreMergedWebXmlListener</code>的<code>onStart</code>方法:</p>
<div>
<pre><code class="language-none">// TomcatEmbeddedContext 启动时触发了该监听器
private void onStart(Context context) {
    ServletContext servletContext = context.getServletContext();
    if (servletContext.getAttribute(MERGED_WEB_XML) == null) {
        servletContext.setAttribute(MERGED_WEB_XML, getEmptyWebXml());
    }
    // 注意最后这句，1.5.3版本已经去掉了这句，它导致变慢
    TomcatResources.get(context).addClasspathResources(); 
}
</code></pre>
</div>
<p>在<code>addClasspathResources</code>方法里对于jar资源的处理，不同的tomcat版本方式有所不同，spring-boot 中如果使用嵌入式的 tomcat8 的话这些jar资源会记录到<code>StandardRoot</code>里的<code>jarResources</code>集合里，它们会被定时清理。</p>
<p>tomcat容器的后台线程(ContainerBackgroundProcessor)会触发<code>StandardRoot</code>里的清理逻辑</p>
<div>
<pre><code class="language-none">    public void backgroundProcess() {
        cache.backgroundProcess();
        gc();
    }

    public void gc() {
        for (List&lt;WebResourceSet&gt; list : allResources) {
            for (WebResourceSet webResourceSet : list) {
                webResourceSet.gc();
            }
        }
    }
    
    // JarWarResourceSet里的gc方法
    public void gc() {
        synchronized (archiveLock) {
            if (archive != null &amp;&amp; archiveUseCount == 0) {
                try {
                    archive.close();
                } catch (IOException e) {
                    // Log at least WARN
                }
                archive = null;
                archiveEntries = null;
            }
        }
    }
</code></pre>
</div>
<p>请求过来时，Mapper阶段会根据请求路径去找映射的资源，Cache不管命中还是未命中，都会对资源进行validate，在validateResource时要去遍历<code>WebResourceRoot</code>里所有的资源(包括所有的jar资源)，若应用依赖的jar比较多时，会导致cpu较高。</p>
<p>spring-boot 1.5 版本里不会再将 BOOT-INF/lib 下的所有jar添加到tomcat的<code>WebResourceRoot</code>里，升级到1.5.3后这个情况没有再发生。</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
			本条目发布于<a href="http://hongjiang.info/spring-boot-1-4-bug/" title="01:34" rel="bookmark"><time class="entry-date" datetime="2017-06-07T01:34:33+00:00">2017-06-07</time></a>。属于<a href="http://hongjiang.info/category/programming/" rel="category tag">programming</a>分类，被贴了 <a href="http://hongjiang.info/tag/spring-boot/" rel="tag">spring-boot</a>、<a href="http://hongjiang.info/tag/tomcat/" rel="tag">tomcat</a> 标签。<span class="by-author">作者是<span class="author vcard"><a class="url fn n" href="http://hongjiang.info/author/hongjiang/" title="查看所有由hongjiang发布的文章" rel="author">hongjiang</a></span>。</span>								</footer><!-- .entry-meta -->
	</article><!-- #post -->
							
	<article id="post-2079" class="post-2079 post type-post status-publish format-standard hentry category-scala tag-scala tag-scalac">
				<header class="entry-header">
			
						<h1 class="entry-title">
				<a href="http://hongjiang.info/scala-pitfalls-28/" rel="bookmark">scala雾中风景(28): private?public?</a>
			</h1>
										<div class="comments-link">
					<a href="http://hongjiang.info/scala-pitfalls-28/#comments">2条回复</a>				</div><!-- .comments-link -->
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p>记录前些天遇到的一个问题，scala里<code>protected</code>或<code>private</code>修饰的方法可能在编译为class时变成了<code>public</code>，这已经不是第一次遇到，最早遇到是在写一个java子类时要覆盖一些父类方法，父类是scala写的一个trait，里面的方法修饰为<code>protected</code>，当时IDE提示我override的方法必须声明为<code>public</code>感到奇怪反编译了一下父trait果然被声明为了<code>public</code>。</p>
<p>而这次遇到的稍有不同，跟继承没有关系，用下面的demo举例：</p>
<div>
<pre><code class="language-none"> ➜  cat A.scala
class A {
  private[this] def foo() = {
    List(1,2,3).map(i =&gt; bar(i))
  }

  private[this] def bar(i:Int):String = {
    &quot;str:&quot; + i
  }
}
</code></pre>
</div>
<p>当我们编译上面类之后，里面的<code>foo</code>和<code>bar</code>方法的修饰符最终在class里会有所不同，反编译后可看到<code>bar</code>修饰符变成了<code>public</code>:</p>
<div>
<pre><code class="language-none"> ➜  cfr-decompiler A
 ...
 public class A {
    private List&lt;String&gt; foo() {
        return (List)List..MODULE$.apply((Seq)Predef..MODULE$.wrapIntArray(new int[]{1, 2, 3})).map((Function1)new scala.Serializable(this){
            public static final long serialVersionUID = 0;
            private final /* synthetic */ A $outer;

            public final String apply(int i) {
                return this.$outer.A$$bar(i);
            }
        }, List..MODULE$.canBuildFrom());
    }

    public String A$$bar(int i) {
        return new StringBuilder().append((Object)&quot;str:&quot;).append((Object)BoxesRunTime.boxToInteger((int)i)).toString();
    }
}</code></pre>
</div>
<p>终归scala在jvm上要做一些妥协，按上面的实现，<code>foo</code>里面以闭包的方式使用<code>bar</code>的时候，如果保持scala <code>private[this]</code>的控制粒度，底层的匿名类其实已经无法访问<code>bar</code>了。所以scala在编译器的explicitouter环节做了一些向现实妥协的事情</p>
<div>
<pre><code class="language-none"> ➜  scalac -Xshow-phases
    phase name  id  description
    ----------  --  -----------
        parser   1  parse source into ASTs, perform simple desugaring
         namer   2  resolve names, attach symbols to named trees
packageobjects   3  load package objects
         typer   4  the meat and potatoes: type the trees
        patmat   5  translate match expressions
superaccessors   6  add super accessors in traits and nested classes
    extmethods   7  add extension methods for inline classes
       pickler   8  serialize symbol tables
     refchecks   9  reference/override checking, translate nested objects
       uncurry  10  uncurry, translate function values to anonymous classes
     tailcalls  11  replace tail calls by jumps
    specialize  12  @specialized-driven class and method specialization
 explicitouter  13  this refs to outer pointers
       erasure  14  erase types, add interfaces for traits
   posterasure  15  clean up erased inline classes
      lazyvals  16  allocate bitmaps, translate lazy vals into lazified defs
    lambdalift  17  move nested functions to top level
  constructors  18  move field definitions into constructors
       flatten  19  eliminate inner classes
         mixin  20  mixin composition
       cleanup  21  platform-specific cleanups, generate reflective calls
    delambdafy  22  remove lambdas
         icode  23  generate portable intermediate code
           jvm  24  generate JVM bytecode
      terminal  25  the last phase during a compilation run</code></pre>
</div>
<p>在这个阶段，当编译器发现一些<code>private</code>的方法会被内部类访问的话，就删除这些<code>private</code>修饰符:</p>
<div>
<pre><code class="language-none"> ➜  scalac -Xprint:explicitouter A.scala
[[syntax trees at end of             explicitouter]] // A.scala
package &lt;empty&gt; {
  class A extends Object {
    def &lt;init&gt;(): A = {
      A.super.&lt;init&gt;();
      ()
    };
    private[this] def foo(): List[String] = immutable.this.List.apply[Int](scala.this.Predef.wrapIntArray(Array[Int]{1, 2, 3})).map[String, List[String]]({
      @SerialVersionUID(value = 0) final &lt;synthetic&gt; class $anonfun extends scala.runtime.AbstractFunction1[Int,String] with Serializable {
        def &lt;init&gt;($outer: A.this.type): &lt;$anon: Int =&gt; String&gt; = {
          $anonfun.super.&lt;init&gt;();
          ()
        };
        final def apply(i: Int): String = $anonfun.this.$outer.bar(i);
        &lt;synthetic&gt; &lt;paramaccessor&gt; &lt;artifact&gt; private[this] val $outer: A.this.type = _;
        &lt;synthetic&gt; &lt;stable&gt; &lt;artifact&gt; def $outer(): A.this.type = $anonfun.this.$outer
      };
      (new &lt;$anon: Int =&gt; String&gt;(A.this): Int =&gt; String)
    }, immutable.this.List.canBuildFrom[String]());
    
    final def bar(i: Int): String = &quot;str:&quot;.+(i)
  }
}</code></pre>
</div>
<p>上面<code>bar</code>的<code>private[this]</code>在这个阶段被删除，而scala不同于java，缺省就是<code>public</code>，最终在class里变成了<code>public</code>。</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
			本条目发布于<a href="http://hongjiang.info/scala-pitfalls-28/" title="22:49" rel="bookmark"><time class="entry-date" datetime="2017-05-23T22:49:43+00:00">2017-05-23</time></a>。属于<a href="http://hongjiang.info/category/programming/scala/" rel="category tag">scala</a>分类，被贴了 <a href="http://hongjiang.info/tag/scala/" rel="tag">scala</a>、<a href="http://hongjiang.info/tag/scalac/" rel="tag">scalac</a> 标签。<span class="by-author">作者是<span class="author vcard"><a class="url fn n" href="http://hongjiang.info/author/hongjiang/" title="查看所有由hongjiang发布的文章" rel="author">hongjiang</a></span>。</span>								</footer><!-- .entry-meta -->
	</article><!-- #post -->
							
	<article id="post-2074" class="post-2074 post type-post status-publish format-standard hentry category-movie tag-movie">
				<header class="entry-header">
			
						<h1 class="entry-title">
				<a href="http://hongjiang.info/he-aint-heavy-he-is-my-father/" rel="bookmark">乘风破浪与新难兄难弟</a>
			</h1>
										<div class="comments-link">
					<a href="http://hongjiang.info/he-aint-heavy-he-is-my-father/#comments">2条回复</a>				</div><!-- .comments-link -->
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p><img src="http://hongjiang.info/wp-content/uploads/2017/04/nxnd.jpg" style="width:600px"/></p>
<p>韩寒的《乘风破浪》比他之前的《后会无期》拍的要好，故事更饱满一些。这部电影让我想起多年前看过的《新难兄难弟》，这两部电影在结构上很相似。</p>
<p>我在夜深人静的时候独自在看这部《乘风破浪》，回想的却是十多年前一群人挤在宿舍围着华中的电脑(15寸的非纯平CRT显示器)看《新难兄难弟》时的场景，一群人的有说有笑、调侃欢笑，如今天各一方，也极少相问。</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
			本条目发布于<a href="http://hongjiang.info/he-aint-heavy-he-is-my-father/" title="23:29" rel="bookmark"><time class="entry-date" datetime="2017-04-09T23:29:09+00:00">2017-04-09</time></a>。属于<a href="http://hongjiang.info/category/movie/" rel="category tag">movie</a>分类，被贴了 <a href="http://hongjiang.info/tag/movie/" rel="tag">movie</a> 标签。<span class="by-author">作者是<span class="author vcard"><a class="url fn n" href="http://hongjiang.info/author/hongjiang/" title="查看所有由hongjiang发布的文章" rel="author">hongjiang</a></span>。</span>								</footer><!-- .entry-meta -->
	</article><!-- #post -->
							
	<article id="post-2070" class="post-2070 post type-post status-publish format-standard hentry category-linux tag-bsd tag-ps tag-unix">
				<header class="entry-header">
			
						<h1 class="entry-title">
				<a href="http://hongjiang.info/process-being-debugged-state/" rel="bookmark">进程被debug时的状态</a>
			</h1>
										<div class="comments-link">
					<a href="http://hongjiang.info/process-being-debugged-state/#respond"><span class="leave-reply">发表回复</span></a>				</div><!-- .comments-link -->
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p>在mac/bsd和linux上ps展示进程状态的字符与linux可能含义不同，比如我的java进程在mac上ps看到是&quot;TX+&quot;状态</p>
<div>
<pre><code class="language-none">➜  ps aux | grep &quot;[j]ava&quot;
hongjiang  60387  0.0  0.4  6072548  36516 s001  TX+  7:28PM  0:00.19 java Daemon</code></pre>
</div>
<p>Linux上man ps看到 X 表示 &quot;dead (should never be seen)&quot;, 而Mac/BSD下则是 “The process is being traced or debugged” 的含义。 Linux上当一个进程被debug中，状态跟stopped一样都使用T表示(在某些高版本linux内核里会区分开，使用小写t表示进程是被debugger跟踪)</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
			本条目发布于<a href="http://hongjiang.info/process-being-debugged-state/" title="03:43" rel="bookmark"><time class="entry-date" datetime="2017-03-24T03:43:31+00:00">2017-03-24</time></a>。属于<a href="http://hongjiang.info/category/linux/" rel="category tag">linux</a>分类，被贴了 <a href="http://hongjiang.info/tag/bsd/" rel="tag">bsd</a>、<a href="http://hongjiang.info/tag/ps/" rel="tag">ps</a>、<a href="http://hongjiang.info/tag/unix/" rel="tag">unix</a> 标签。<span class="by-author">作者是<span class="author vcard"><a class="url fn n" href="http://hongjiang.info/author/hongjiang/" title="查看所有由hongjiang发布的文章" rel="author">hongjiang</a></span>。</span>								</footer><!-- .entry-meta -->
	</article><!-- #post -->
							
	<article id="post-2068" class="post-2068 post type-post status-publish format-standard hentry category-scala tag-scala">
				<header class="entry-header">
			
						<h1 class="entry-title">
				<a href="http://hongjiang.info/scala-final-object/" rel="bookmark">final object?</a>
			</h1>
										<div class="comments-link">
					<a href="http://hongjiang.info/scala-final-object/#respond"><span class="leave-reply">发表回复</span></a>				</div><!-- .comments-link -->
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p>使用final修饰object的场景极少见，需要显式打开<code>-Yoverride-objects</code>编译选项才行：</p>
<div>
<pre><code class="language-none"> ➜  scala -Yoverride-objects
Welcome to Scala version 2.11.6 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_51).
Type in expressions to have them evaluated.
Type :help for more information.

scala&gt; class A { object B }
defined class A

scala&gt; class C extends A  { override object B {}  }
defined class C</code></pre>
</div>
<p>如果A内部对<code>object B</code>使用<code>final</code>修饰了，子类C就不能覆盖这个object，不过它的意义是什么？这里<code>object B</code>是一个<code>module</code>，要解释object为何被当作module来设计，需要整理一下，等有时间再说。</p>
<p>PS，我刚发现2.11版本之后repl下，当你定义一个object时，提示已经不同了，在2.11版本之前，repl下会显示 &quot;defined module XXX&quot;， 而 2.11 里已经变成了 &quot;defined object XXX&quot;，可能隐含着设计者对module(早期scala中module应该是借鉴ML语言的module)这个术语可能存在理解不一致的担心，所以不再使用这个名词(只是我的猜测)。</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
			本条目发布于<a href="http://hongjiang.info/scala-final-object/" title="04:02" rel="bookmark"><time class="entry-date" datetime="2017-03-23T04:02:05+00:00">2017-03-23</time></a>。属于<a href="http://hongjiang.info/category/programming/scala/" rel="category tag">scala</a>分类，被贴了 <a href="http://hongjiang.info/tag/scala/" rel="tag">scala</a> 标签。<span class="by-author">作者是<span class="author vcard"><a class="url fn n" href="http://hongjiang.info/author/hongjiang/" title="查看所有由hongjiang发布的文章" rel="author">hongjiang</a></span>。</span>								</footer><!-- .entry-meta -->
	</article><!-- #post -->
			
					<nav id="nav-below" class="navigation" role="navigation">
			<h3 class="assistive-text">文章导航</h3>
			<div class="nav-previous"><a href="http://hongjiang.info/page/2/" ><span class="meta-nav">&larr;</span> 早期文章</a></div>
			<div class="nav-next"></div>
		</nav><!-- .navigation -->
	
		
		</div><!-- #content -->
	</div><!-- #primary -->


			<div id="secondary" class="widget-area" role="complementary">
			<aside id="search-2" class="widget widget_search"><form role="search" method="get" id="searchform" class="searchform" action="http://hongjiang.info/">
				<div>
					<label class="screen-reader-text" for="s">搜索：</label>
					<input type="text" value="" name="s" id="s" />
					<input type="submit" id="searchsubmit" value="搜索" />
				</div>
			</form></aside>		<aside id="recent-posts-2" class="widget widget_recent_entries">		<h3 class="widget-title">近期文章</h3>		<ul>
											<li>
					<a href="http://hongjiang.info/common-bash-functions/">一些方便系统诊断的bash函数</a>
									</li>
											<li>
					<a href="http://hongjiang.info/these-violent-delights-have-violent-ends/">狂暴的欢愉必将有狂暴的结局</a>
									</li>
											<li>
					<a href="http://hongjiang.info/recruit-engineers-2017/">继续招聘</a>
									</li>
											<li>
					<a href="http://hongjiang.info/operator-hijacks/">本站已支持https访问</a>
									</li>
											<li>
					<a href="http://hongjiang.info/akka-roundrobin-routing-bug/">Akka的RoundRobinRouting实现存在bug</a>
									</li>
											<li>
					<a href="http://hongjiang.info/spring-boot-1-4-bug/">spring-boot 1.4.x遇到的cpu高的问题</a>
									</li>
											<li>
					<a href="http://hongjiang.info/scala-pitfalls-28/">scala雾中风景(28): private?public?</a>
									</li>
											<li>
					<a href="http://hongjiang.info/he-aint-heavy-he-is-my-father/">乘风破浪与新难兄难弟</a>
									</li>
											<li>
					<a href="http://hongjiang.info/process-being-debugged-state/">进程被debug时的状态</a>
									</li>
											<li>
					<a href="http://hongjiang.info/scala-final-object/">final object?</a>
									</li>
											<li>
					<a href="http://hongjiang.info/socket-hang-two-and-a-half-hours/">socketRead0阻塞2个半小时?</a>
									</li>
											<li>
					<a href="http://hongjiang.info/shell-signal-and-jvm-quit/">Shell,信号量与Java进程的退出</a>
									</li>
											<li>
					<a href="http://hongjiang.info/review-2016/">回顾2016</a>
									</li>
											<li>
					<a href="http://hongjiang.info/wassup-real-time-analytics/">WassUp Real Time Analytics</a>
									</li>
											<li>
					<a href="http://hongjiang.info/write-blog-continuously/">如何持续的写博客?</a>
									</li>
											<li>
					<a href="http://hongjiang.info/fpis-chinese-errata-2/">《Scala函数式编程》中文版勘误2</a>
									</li>
											<li>
					<a href="http://hongjiang.info/untitled-2/">记录几个实践中的问题</a>
									</li>
											<li>
					<a href="http://hongjiang.info/youdao-dict-exception-stack-trace/">有道词典的异常堆栈</a>
									</li>
											<li>
					<a href="http://hongjiang.info/oneapm-bugs/">OneApm的问题</a>
									</li>
											<li>
					<a href="http://hongjiang.info/tomcat8-5-8-bugs/">tomcat8.5.8遇到的两个问题</a>
									</li>
					</ul>
		</aside><aside id="recent-comments-2" class="widget widget_recent_comments"><h3 class="widget-title">近期评论</h3><ul id="recentcomments"><li class="recentcomments"><span class="comment-author-link">怪兽</span>发表在《<a href="http://hongjiang.info/message/#comment-4874">留言</a>》</li><li class="recentcomments"><span class="comment-author-link">hongjiang</span>发表在《<a href="http://hongjiang.info/fpis-chinese-errata/#comment-4873">《Scala函数式编程》中文版勘误</a>》</li><li class="recentcomments"><span class="comment-author-link">hongjiang</span>发表在《<a href="http://hongjiang.info/java7-fork-join/#comment-4872">分享ppt: java7里的fork-join</a>》</li><li class="recentcomments"><span class="comment-author-link">hongjiang</span>发表在《<a href="http://hongjiang.info/ppt-jvm-memory-management/#comment-4871">分享ppt: jvm内存管理</a>》</li><li class="recentcomments"><span class="comment-author-link"><a href='https://weibo.com/ajaxlogin.php?framelogin=1&#038;callback=parent.sinaSSOController.feedBackUrlCallBack' rel='external nofollow' class='url'>李涛</a></span>发表在《<a href="http://hongjiang.info/ppt-jvm-memory-management/#comment-4870">分享ppt: jvm内存管理</a>》</li><li class="recentcomments"><span class="comment-author-link"><a href='https://weibo.com/ajaxlogin.php?framelogin=1&#038;callback=parent.sinaSSOController.feedBackUrlCallBack' rel='external nofollow' class='url'>李涛</a></span>发表在《<a href="http://hongjiang.info/java7-fork-join/#comment-4869">分享ppt: java7里的fork-join</a>》</li><li class="recentcomments"><span class="comment-author-link">徐</span>发表在《<a href="http://hongjiang.info/how-tomcat-implements-keep-alive/#comment-4868">tomcat对keep-alive的实现逻辑</a>》</li><li class="recentcomments"><span class="comment-author-link">shutao</span>发表在《<a href="http://hongjiang.info/scala-list-apply/#comment-4867">通过List.apply方法构造List的背后逻辑</a>》</li><li class="recentcomments"><span class="comment-author-link">jacklong</span>发表在《<a href="http://hongjiang.info/why-kill-2-cannot-stop-tomcat/#comment-4866">tomcat进程意外退出的问题分析</a>》</li><li class="recentcomments"><span class="comment-author-link">funky</span>发表在《<a href="http://hongjiang.info/scala-union-diff-intersect/#comment-4865">scala中集合的交集、并集、差集</a>》</li><li class="recentcomments"><span class="comment-author-link">lidong</span>发表在《<a href="http://hongjiang.info/scala-pitfalls-5/#comment-4864">scala雾中风景(5): 中缀表达</a>》</li><li class="recentcomments"><span class="comment-author-link">spk</span>发表在《<a href="http://hongjiang.info/scala/#comment-4863">scala</a>》</li><li class="recentcomments"><span class="comment-author-link">fade</span>发表在《<a href="http://hongjiang.info/these-violent-delights-have-violent-ends/#comment-4861">狂暴的欢愉必将有狂暴的结局</a>》</li><li class="recentcomments"><span class="comment-author-link"><a href='http://zhoajun' rel='external nofollow' class='url'>长河</a></span>发表在《<a href="http://hongjiang.info/scala-int-unbox-for-null/#comment-4860">Int与Integer的拆箱问题</a>》</li><li class="recentcomments"><span class="comment-author-link"><a href='http://zhoajun' rel='external nofollow' class='url'>长河</a></span>发表在《<a href="http://hongjiang.info/scala-int-unbox-for-null/#comment-4859">Int与Integer的拆箱问题</a>》</li></ul></aside><aside id="categories-2" class="widget widget_categories"><h3 class="widget-title">分类目录</h3>		<ul>
	<li class="cat-item cat-item-5"><a href="http://hongjiang.info/category/programming/java/" >java</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://hongjiang.info/category/life/" >life</a>
</li>
	<li class="cat-item cat-item-10"><a href="http://hongjiang.info/category/linux/" >linux</a>
</li>
	<li class="cat-item cat-item-84"><a href="http://hongjiang.info/category/movie/" >movie</a>
</li>
	<li class="cat-item cat-item-4"><a href="http://hongjiang.info/category/programming/" >programming</a>
</li>
	<li class="cat-item cat-item-2"><a href="http://hongjiang.info/category/programming/scala/" >scala</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://hongjiang.info/category/programming/shell/" >shell</a>
</li>
	<li class="cat-item cat-item-1"><a href="http://hongjiang.info/category/uncategorized/" >未分类</a>
</li>
	<li class="cat-item cat-item-176"><a href="http://hongjiang.info/category/%e6%9e%b6%e6%9e%84/" >架构</a>
</li>
		</ul>
</aside><aside id="archives-2" class="widget widget_archive"><h3 class="widget-title">文章归档</h3>		<ul>
			<li><a href='http://hongjiang.info/2018/01/'>2018年一月</a></li>
	<li><a href='http://hongjiang.info/2017/09/'>2017年九月</a></li>
	<li><a href='http://hongjiang.info/2017/07/'>2017年七月</a></li>
	<li><a href='http://hongjiang.info/2017/06/'>2017年六月</a></li>
	<li><a href='http://hongjiang.info/2017/05/'>2017年五月</a></li>
	<li><a href='http://hongjiang.info/2017/04/'>2017年四月</a></li>
	<li><a href='http://hongjiang.info/2017/03/'>2017年三月</a></li>
	<li><a href='http://hongjiang.info/2017/02/'>2017年二月</a></li>
	<li><a href='http://hongjiang.info/2016/12/'>2016年十二月</a></li>
	<li><a href='http://hongjiang.info/2016/11/'>2016年十一月</a></li>
	<li><a href='http://hongjiang.info/2016/10/'>2016年十月</a></li>
	<li><a href='http://hongjiang.info/2016/09/'>2016年九月</a></li>
	<li><a href='http://hongjiang.info/2016/08/'>2016年八月</a></li>
	<li><a href='http://hongjiang.info/2016/07/'>2016年七月</a></li>
	<li><a href='http://hongjiang.info/2016/05/'>2016年五月</a></li>
	<li><a href='http://hongjiang.info/2016/04/'>2016年四月</a></li>
	<li><a href='http://hongjiang.info/2016/03/'>2016年三月</a></li>
	<li><a href='http://hongjiang.info/2016/02/'>2016年二月</a></li>
	<li><a href='http://hongjiang.info/2016/01/'>2016年一月</a></li>
	<li><a href='http://hongjiang.info/2015/12/'>2015年十二月</a></li>
	<li><a href='http://hongjiang.info/2015/11/'>2015年十一月</a></li>
	<li><a href='http://hongjiang.info/2015/10/'>2015年十月</a></li>
	<li><a href='http://hongjiang.info/2015/09/'>2015年九月</a></li>
	<li><a href='http://hongjiang.info/2015/08/'>2015年八月</a></li>
	<li><a href='http://hongjiang.info/2015/07/'>2015年七月</a></li>
	<li><a href='http://hongjiang.info/2015/06/'>2015年六月</a></li>
	<li><a href='http://hongjiang.info/2015/05/'>2015年五月</a></li>
	<li><a href='http://hongjiang.info/2015/04/'>2015年四月</a></li>
	<li><a href='http://hongjiang.info/2015/03/'>2015年三月</a></li>
	<li><a href='http://hongjiang.info/2015/02/'>2015年二月</a></li>
	<li><a href='http://hongjiang.info/2015/01/'>2015年一月</a></li>
	<li><a href='http://hongjiang.info/2014/12/'>2014年十二月</a></li>
	<li><a href='http://hongjiang.info/2014/11/'>2014年十一月</a></li>
	<li><a href='http://hongjiang.info/2014/10/'>2014年十月</a></li>
	<li><a href='http://hongjiang.info/2014/09/'>2014年九月</a></li>
	<li><a href='http://hongjiang.info/2014/08/'>2014年八月</a></li>
	<li><a href='http://hongjiang.info/2014/07/'>2014年七月</a></li>
	<li><a href='http://hongjiang.info/2014/06/'>2014年六月</a></li>
	<li><a href='http://hongjiang.info/2014/05/'>2014年五月</a></li>
	<li><a href='http://hongjiang.info/2014/04/'>2014年四月</a></li>
	<li><a href='http://hongjiang.info/2014/03/'>2014年三月</a></li>
	<li><a href='http://hongjiang.info/2014/02/'>2014年二月</a></li>
	<li><a href='http://hongjiang.info/2014/01/'>2014年一月</a></li>
	<li><a href='http://hongjiang.info/2013/12/'>2013年十二月</a></li>
	<li><a href='http://hongjiang.info/2013/11/'>2013年十一月</a></li>
	<li><a href='http://hongjiang.info/2013/10/'>2013年十月</a></li>
	<li><a href='http://hongjiang.info/2013/09/'>2013年九月</a></li>
	<li><a href='http://hongjiang.info/2013/08/'>2013年八月</a></li>
	<li><a href='http://hongjiang.info/2013/07/'>2013年七月</a></li>
	<li><a href='http://hongjiang.info/2013/06/'>2013年六月</a></li>
	<li><a href='http://hongjiang.info/2013/05/'>2013年五月</a></li>
	<li><a href='http://hongjiang.info/2013/04/'>2013年四月</a></li>
		</ul>
		</aside><aside id="linkcat-" class="widget widget_links"><h3 class="widget-title">书签</h3>
	<ul class='xoxo blogroll'>
<li><a href="http://ifeve.com/">并发编程网</a></li>
<li><a href="http://afoo.me/" rel="acquaintance co-worker">扶墙老师</a></li>
<li><a href="http://jm.taobao.org" rel="acquaintance co-worker">阿里中间件</a></li>

	</ul>
</aside>
<aside id="meta-2" class="widget widget_meta"><h3 class="widget-title">功能</h3>			<ul>
						<li><a href="http://hongjiang.info/wp-login.php">登录</a></li>
			<li><a href="http://hongjiang.info/feed/">文章<abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="http://hongjiang.info/comments/feed/">评论<abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="https://cn.wordpress.org/" title="基于WordPress，一个优美、先进的个人信息发布平台。">WordPress.org</a></li>			</ul>
			</aside>		</div><!-- #secondary -->
		</div><!-- #main .wrapper -->
	<footer id="colophon" role="contentinfo">
		<div class="site-info">
						<a href="https://cn.wordpress.org/" title="优雅的个人发布平台">自豪地采用WordPress</a>
		</div><!-- .site-info -->
	</footer><!-- #colophon -->
</div><!-- #page -->


<!-- <p class="small"> WassUp 1.9.4.2 timestamp: 2018-03-23 02:40:57PM UTC (10:40PM)<br />
如果上面的时间戳不是当前时间,该页将被缓存.</p> -->
<script type='text/javascript' src='http://hongjiang.info/wp-content/themes/twentytwelve/js/navigation.js?ver=20140711'></script>
<script type='text/javascript' src='http://hongjiang.info/wp-includes/js/wp-embed.min.js?ver=4.9.4'></script>
</body>
</html>