<!DOCTYPE html>
<!--[if IE 6]>
<html id="ie6" lang="zh-CN">
<![endif]-->
<!--[if IE 7]>
<html id="ie7" lang="zh-CN">
<![endif]-->
<!--[if IE 8]>
<html id="ie8" lang="zh-CN">
<![endif]-->
<!--[if !(IE 6) & !(IE 7) & !(IE 8)]><!-->
<html lang="zh-CN">
<!--<![endif]-->
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width" />
<title>nosa.me | 未来不会有sa</title>
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="stylesheet" type="text/css" media="all" href="http://www.nosa.me/wp-content/themes/twentyeleven/style.css" />
<link rel="pingback" href="http://www.nosa.me/xmlrpc.php" />
<!--[if lt IE 9]>
<script src="http://www.nosa.me/wp-content/themes/twentyeleven/js/html5.js" type="text/javascript"></script>
<![endif]-->
<link rel='dns-prefetch' href='//www.nosa.me' />
<link rel='dns-prefetch' href='//s.w.org' />
<link rel="alternate" type="application/rss+xml" title="nosa.me &raquo; Feed" href="http://www.nosa.me/feed/" />
<link rel="alternate" type="application/rss+xml" title="nosa.me &raquo; 评论Feed" href="http://www.nosa.me/comments/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.2.1\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.2.1\/svg\/","svgExt":".svg","source":{"concatemoji":"http:\/\/www.nosa.me\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.7.9"}};
			!function(a,b,c){function d(a){var b,c,d,e,f=String.fromCharCode;if(!k||!k.fillText)return!1;switch(k.clearRect(0,0,j.width,j.height),k.textBaseline="top",k.font="600 32px Arial",a){case"flag":return k.fillText(f(55356,56826,55356,56819),0,0),!(j.toDataURL().length<3e3)&&(k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57331,65039,8205,55356,57096),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57331,55356,57096),0,0),c=j.toDataURL(),b!==c);case"emoji4":return k.fillText(f(55357,56425,55356,57341,8205,55357,56507),0,0),d=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55357,56425,55356,57341,55357,56507),0,0),e=j.toDataURL(),d!==e}return!1}function e(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i,j=b.createElement("canvas"),k=j.getContext&&j.getContext("2d");for(i=Array("flag","emoji4"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='yarppWidgetCss-css'  href='http://www.nosa.me/wp-content/plugins/yet-another-related-posts-plugin/style/widget.css?ver=4.7.9' type='text/css' media='all' />
<link rel='stylesheet' id='default-template-css'  href='http://www.nosa.me/wp-content/plugins/simple-subscribe/extension/readygraph/assets/css/default-popup.css?ver=4.7.9' type='text/css' media='all' />
<link rel='stylesheet' id='uaf_client_css-css'  href='http://www.nosa.me/wp-content/uploads/useanyfont/uaf.css?ver=1483512076' type='text/css' media='all' />
<link rel='stylesheet' id='core-css'  href='http://www.nosa.me/wp-content/plugins/simple-subscribe/assets/styleFrontEnd.css?ver=4.7.9' type='text/css' media='all' />
<script type='text/javascript' src='http://www.nosa.me/wp-includes/js/jquery/jquery.js?ver=1.12.4'></script>
<script type='text/javascript' src='http://www.nosa.me/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1'></script>
<link rel='https://api.w.org/' href='http://www.nosa.me/wp-json/' />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.nosa.me/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.nosa.me/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 4.7.9" />
		<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>
		<style type="text/css" id="custom-background-css">
body.custom-background { background-color: #ffffff; }
</style>

	<!-- Clean Archives Reloaded v3.2.0 | http://www.viper007bond.com/wordpress-plugins/clean-archives-reloaded/ -->
	<style type="text/css">.car-collapse .car-yearmonth { cursor: s-resize; } </style>
	<script type="text/javascript">
		/* <![CDATA[ */
			jQuery(document).ready(function() {
				jQuery('.car-collapse').find('.car-monthlisting').hide();
				jQuery('.car-collapse').find('.car-monthlisting:first').show();
				jQuery('.car-collapse').find('.car-yearmonth').click(function() {
					jQuery(this).next('ul').slideToggle('fast');
				});
				jQuery('.car-collapse').find('.car-toggler').click(function() {
					if ( '展开所有月份' == jQuery(this).text() ) {
						jQuery(this).parent('.car-container').find('.car-monthlisting').show();
						jQuery(this).text('折叠所有月份');
					}
					else {
						jQuery(this).parent('.car-container').find('.car-monthlisting').hide();
						jQuery(this).text('展开所有月份');
					}
					return false;
				});
			});
		/* ]]> */
	</script>

</head>

<body class="home blog custom-background single-author two-column right-sidebar">
<div id="page" class="hfeed">
	<header id="branding" role="banner">
			<hgroup>
				<h1 id="site-title"><span><a href="http://www.nosa.me/" rel="home">nosa.me</a></span></h1>
				<h2 id="site-description">未来不会有sa</h2>
			</hgroup>

			
								<form method="get" id="searchform" action="http://www.nosa.me/">
		<label for="s" class="assistive-text">搜索</label>
		<input type="text" class="field" name="s" id="s" placeholder="搜索" />
		<input type="submit" class="submit" name="submit" id="searchsubmit" value="搜索" />
	</form>
			
			<nav id="access" role="navigation">
				<h3 class="assistive-text">主菜单</h3>
								<div class="skip-link"><a class="assistive-text" href="#content">跳至主内容区域</a></div>
									<div class="skip-link"><a class="assistive-text" href="#secondary">跳至副内容区域</a></div>
												<div class="menu"><ul>
<li class="current_page_item"><a href="http://www.nosa.me/">首页</a></li><li class="page_item page-item-1275"><a href="http://www.nosa.me/%e6%96%87%e7%ab%a0%e5%88%97%e8%a1%a8/">文章列表</a></li>
<li class="page_item page-item-251"><a href="http://www.nosa.me/about/">关于</a></li>
</ul></div>
			</nav><!-- #access -->
	</header><!-- #branding -->


	<div id="main">

		<div id="primary">
			<div id="content" role="main">

			
						<nav id="nav-above">
			<h3 class="assistive-text">文章导航</h3>
			<div class="nav-previous"><a href="http://www.nosa.me/page/2/" ><span class="meta-nav">&larr;</span> 早期文章</a></div>
			<div class="nav-next"></div>
		</nav><!-- #nav-above -->
	
								
					
	<article id="post-2979" class="post-2979 post type-post status-publish format-standard hentry category-op_platform">
		<header class="entry-header">
						<h1 class="entry-title"><a href="http://www.nosa.me/2017/04/28/%e8%bf%90%e7%bb%b4%e7%b3%bb%e7%bb%9f-roadmap/" rel="bookmark">运维系统 Roadmap</a></h1>
			
						<div class="entry-meta">
				<span class="sep">发表于</span><a href="http://www.nosa.me/2017/04/28/%e8%bf%90%e7%bb%b4%e7%b3%bb%e7%bb%9f-roadmap/" title="18:36" rel="bookmark"><time class="entry-date" datetime="2017-04-28T18:36:50+00:00">04/28/2017</time></a><span class="by-author"><span class="sep">由</span><span class="author vcard"><a class="url fn n" href="http://www.nosa.me/author/wateer/" title="查看所有由wateer发布的文章" rel="author">wateer</a></span></span>			</div><!-- .entry-meta -->
			
					</header><!-- .entry-header -->

		
		<div class="entry-content">
			<p>下面是我在公司内部 Review 时总结的一个文档，内容主要是运维系统如何做和他们之间的关联，放在里备忘以及参考。</p>
<p><a href="http://www.nosa.me/wp-content/uploads/2017/04/system_for_devops.pdf">system_for_devops</a></p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
												<span class="cat-links">
				<span class="entry-utility-prep entry-utility-prep-cat-links">发表在</span><a href="http://www.nosa.me/category/op_platform/" rel="category tag">运维工具平台</a>			</span>

															
			
					</footer><!-- .entry-meta -->
	</article><!-- #post-2979 -->

				
					
	<article id="post-2413" class="post-2413 post type-post status-publish format-standard hentry category-op_platform tag-451 tag-456 tag-445 tag-455 tag-454 tag-421 tag-424 tag-447">
		<header class="entry-header">
						<h1 class="entry-title"><a href="http://www.nosa.me/2017/01/11/%e5%92%8c%e6%9c%8d%e5%8a%a1%e6%a0%91%e5%85%b3%e8%81%94%e7%9a%84%e7%b3%bb%e7%bb%9f/" rel="bookmark">和服务树关联的系统</a></h1>
			
						<div class="entry-meta">
				<span class="sep">发表于</span><a href="http://www.nosa.me/2017/01/11/%e5%92%8c%e6%9c%8d%e5%8a%a1%e6%a0%91%e5%85%b3%e8%81%94%e7%9a%84%e7%b3%bb%e7%bb%9f/" title="00:40" rel="bookmark"><time class="entry-date" datetime="2017-01-11T00:40:00+00:00">01/11/2017</time></a><span class="by-author"><span class="sep">由</span><span class="author vcard"><a class="url fn n" href="http://www.nosa.me/author/wateer/" title="查看所有由wateer发布的文章" rel="author">wateer</a></span></span>			</div><!-- .entry-meta -->
			
						<div class="comments-link">
				<a href="http://www.nosa.me/2017/01/11/%e5%92%8c%e6%9c%8d%e5%8a%a1%e6%a0%91%e5%85%b3%e8%81%94%e7%9a%84%e7%b3%bb%e7%bb%9f/#respond"><span class="leave-reply">回复</span></a>			</div>
					</header><!-- .entry-header -->

		
		<div class="entry-content">
			<p>服务树是运维系统中最重要也是最基础的基础组件，基于服务树我们可以方便的统一管理很多资源和系统，包括:</p>
<pre><code>1. 机器管理
2. 权限系统
3. 监控系统
4. 数据展示(系统资源)和可用率展示(节点关联服务)
5. 配置管理
6. 服务发现
7. 部署系统
</code></pre>
<p>这七个系统基于服务树节点各司其职:<br />
1. 机器管理负责管理节点下面的机器，包括机器列表、初始化、重启等；<br />
2. 权限系统负责管理节点下面机器的登陆权限、已经其他子系统的查看修改等权限；<br />
3. 监控系统基于节点来管理监控，基于节点增加和删除监控非常简单；<br />
4. 数据展示和可用率展示负责展示节点下面的机器的系统资源使用情况和节点关联服务的可用率情况；<br />
5. 配置管理负责系统基础环境和应用基础环境，装机时指定服务节点，装机后环境会被自动初始化好(我们使用 Puppet)。</p>
<p>事实上 1 &#8211; 5 点我们已经有了比较丰富的经验，这里不再赘述，重点阐述一下 6 &#8211; 7 点。</p>
<hr />
<h1>服务发现</h1>
<p>服务发现需要实现服务变更后自动发现、负载均衡等基本特性，还可以实现某些高级特性，比如区域化解析、CNAME(路由切换)、关系图谱和安全注册。</p>
<p>设计可以参考<a href="http://mp.weixin.qq.com/s?__biz=MzIxMzIyNDkyMw==&amp;mid=2654108401&amp;idx=1&amp;sn=8ae0b128ac07ff54e4be1bb8b23fb8d3&amp;chksm=8c7cc645bb0b4f5348238096d56451d404fa4fe321031118248961f27f2b913814daa940c44c&amp;scene=21#wechat_redirect">这篇文章</a>的设计。</p>
<p>这里我们只讨论一下服务发现需要的数据结构，最基本的数据结构包括下面两个部分。</p>
<h2>1. 服务的基础信息</h2>
<p>1). 服务唯一标识，我们采用服务节点字符串来表示；<br />
2). 服务启动端口。</p>
<p>虽然服务发现基于服务节点，但是服务发现系统对于服务节点下面的机器有独立的一份存储，服务发现系统和服务节点的机器信息对齐可以采用程序的守护进程来保证，在发布一台机器之后守护进程会自动向服务发现系统注册，并向服务节点注册，在停止一台机器的服务之前，先从服务发现系统删除，并从服务节点删除。</p>
<h2>2. 机器列表、负责均衡算法</h2>
<p>机器列表就是当前服务正在运行的机器列表，我们可以对机器指定负载均衡算法。</p>
<p>比如:<br />
1). WRR，应当支持对节点下面的机器指定权重，默认权重一样；<br />
2). 一致性哈希；<br />
3). 其他算法。</p>
<p>除了上面这两种，我们增加了另外两种比较特殊的数据，LVS 和 Nginx，因为除了这里所说的服务发现系统，LVS 和 Nginx 作为代理也实现了服务发现的功能。增加 LVS 和 Nginx 信息是为了当 LVS 和 Nginx 后面的服务更新之后自动通知 LVS 和 Nginx 。</p>
<h2>3. LVS 信息</h2>
<p>需要的信息如下:<br />
1). VIP；<br />
2). Src Port；<br />
3). Dest PORT(目的 IP 即是服务节点下机器 IP)；<br />
4). 其他信息(比如 syn_proxy、persistence_timeout、weight)。</p>
<p>当 LVS 后面的服务(Nginx)发布时，动态通知 LVS (怎么通知再讨论)摘除或增加，注意需要保证摘除和增加时流量无损。</p>
<h2>4. Nginx 信息</h2>
<p>需要的信息如下:<br />
1). 服务所属的 domain 和 uri，可以有多个，对于每个 domain，还需要知道启用端口、日志路径、证书文件等；<br />
2). upstream 名称；<br />
3). 其他属性，可以自定义，比如 ip_hash。</p>
<p>当 Nginx 后面的服务(Webapp)发布时，动态通知 Nginx (怎么通知再讨论)摘除或增加，注意需要保证摘除和增加时流量无损。</p>
<hr />
<h1>部署系统</h1>
<p>部署系统基于一个服务节点，对服务节点下面的机器进行部署(这里是机器的部署，Docker 部署额外讨论)。</p>
<h2>1. 部署系统的组件</h2>
<p>简单的说，部署系统至少需要三个组件：<br />
Build Server<br />
控制中心<br />
执行 Agent</p>
<p>简单的流程:<br />
1. Build Server 接受编译请求，编译通过后传入产品库；<br />
2. 控制中心接收部署请求，通过 RPC 连接 Agent；<br />
3. Agent 解析部署请求，开始执行部署工作，Agent 需要支持暂停、停止、查看日志等功能；<br />
4. 控制中心需要支持查看任务状态等功能。</p>
<h2>2. 环境管理</h2>
<p>这里可以分为基础环境管理和应用环境管理。</p>
<p>基础环境包括：<br />
内存参数、用户、文件句柄、基础软件包、sshd 配置等。</p>
<p>应用环境是指应用需要的环境，比如 Java、tomcat 等，因为我们都是基于虚拟机，每台机器只有一个应用，不存在混布的问题，所以应用环境可以直接在装机时初始化。</p>
<p>基础环境和应用环境通过上面第 5 点的配置管理解决，在装机时指定服务节点， 装机之后即可初始化好基础环境和应用环境。</p>
<h2>3. 应用程序配置</h2>
<p>通过 Puppet 解决，指定不同的 env 生成不同的配置文件。</p>
<h2>4. 部署的扩展</h2>
<p>在 Agent 端使用进程守护工具，比如 God，可以带来很多好处(需要做二次开发)，比如：<br />
1. 实现统一的停起方式和查看方式；<br />
2. 实现定时任务，比如可以用来解决日志切割问题；<br />
3. 和服务树系统对接，自动把服务信息和机器名注册到服务树；<br />
4. 和监控系统对接，自动生成采集监控数据的 cron 脚本，并注册监控项和报警策略；<br />
5. 和测试系统对接，实现自动化测试；<br />
6. 和 LVS 和服务发现系统对接，自动和 LVS、服务发现系统关联。</p>
<p>这几点里面其中和运维系统的关联很重要。</p>
<hr />
<p>参考：</p>
<p>服务树设计参考两篇文章 <a href="http://mp.weixin.qq.com/s?__biz=MzIxMzIyNDkyMw==&amp;mid=2654108400&amp;idx=1&amp;sn=c0488b907b176f4ef22b8b633913db87&amp;chksm=8c7cc644bb0b4f521ee2e851ccb250f1ea718449758d2c356c90d1a3190282386ff3fb10e597&amp;scene=21#wechat_redirect">服务管理平台</a> 和 <a href="http://noops.me/?p=289">一个关于如何管理海量机器的关联结构模型</a></p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
												<span class="cat-links">
				<span class="entry-utility-prep entry-utility-prep-cat-links">发表在</span><a href="http://www.nosa.me/category/op_platform/" rel="category tag">运维工具平台</a>			</span>

															<span class="sep"> | </span>
							<span class="tag-links">
				<span class="entry-utility-prep entry-utility-prep-tag-links">标签有</span><a href="http://www.nosa.me/tag/%e5%85%b3%e8%81%94/" rel="tag">关联</a>、<a href="http://www.nosa.me/tag/%e6%9c%8d%e5%8a%a1%e5%8f%91%e7%8e%b0/" rel="tag">服务发现</a>、<a href="http://www.nosa.me/tag/%e6%9c%8d%e5%8a%a1%e6%a0%91/" rel="tag">服务树</a>、<a href="http://www.nosa.me/tag/%e6%9d%83%e9%99%90/" rel="tag">权限</a>、<a href="http://www.nosa.me/tag/%e7%9b%91%e6%8e%a7/" rel="tag">监控</a>、<a href="http://www.nosa.me/tag/%e8%ae%be%e8%ae%a1/" rel="tag">设计</a>、<a href="http://www.nosa.me/tag/%e9%83%a8%e7%bd%b2/" rel="tag">部署</a>、<a href="http://www.nosa.me/tag/%e9%85%8d%e7%bd%ae/" rel="tag">配置</a>			</span>
						
									<span class="sep"> | </span>
						<span class="comments-link"><a href="http://www.nosa.me/2017/01/11/%e5%92%8c%e6%9c%8d%e5%8a%a1%e6%a0%91%e5%85%b3%e8%81%94%e7%9a%84%e7%b3%bb%e7%bb%9f/#respond"><span class="leave-reply">发表回复</span></a></span>
			
					</footer><!-- .entry-meta -->
	</article><!-- #post-2413 -->

				
					
	<article id="post-2773" class="post-2773 post type-post status-publish format-standard hentry category-op_platform tag-puppet tag-445 tag-377 tag-452">
		<header class="entry-header">
						<h1 class="entry-title"><a href="http://www.nosa.me/2016/12/21/%e6%9c%ba%e5%99%a8%e7%8e%af%e5%a2%83%e7%ae%a1%e7%90%86/" rel="bookmark">机器环境管理</a></h1>
			
						<div class="entry-meta">
				<span class="sep">发表于</span><a href="http://www.nosa.me/2016/12/21/%e6%9c%ba%e5%99%a8%e7%8e%af%e5%a2%83%e7%ae%a1%e7%90%86/" title="23:46" rel="bookmark"><time class="entry-date" datetime="2016-12-21T23:46:05+00:00">12/21/2016</time></a><span class="by-author"><span class="sep">由</span><span class="author vcard"><a class="url fn n" href="http://www.nosa.me/author/wateer/" title="查看所有由wateer发布的文章" rel="author">wateer</a></span></span>			</div><!-- .entry-meta -->
			
						<div class="comments-link">
				<a href="http://www.nosa.me/2016/12/21/%e6%9c%ba%e5%99%a8%e7%8e%af%e5%a2%83%e7%ae%a1%e7%90%86/#respond"><span class="leave-reply">回复</span></a>			</div>
					</header><!-- .entry-header -->

		
		<div class="entry-content">
			<p>对于机器的环境管理，已经痛苦很长时间了，每次机器创建之后，需要先部署基础环境，比如 Java、tomcat 等，然后再发布应用程序。对于这个问题，我之前一直想用 Docker 解决，但是事实上 Docker 也不能解决所有的问题，比如 Hadoop 并不适合 Docker，对于 Hadoop 这种适合部署在机器上的组件还需要手动维护基础环境。</p>
<p>作为一个有追求的不断提高效率的人，我现在终于决定要解决这个问题了，也就是机器的环境管理问题。</p>
<p>事实上，机器分为 物理机 和 虚拟机，对于大部分类 Web 程序我们使用虚拟机，对于 Hadoop、Mysql 等资源消耗型程序我们使用物理机，而且物理机和虚拟机基本没有「混布」，这是前提，如果混布，管理起来会麻烦很多(需要分目录来管理，不能共用)。</p>
<p>&nbsp;</p>
<p>因为一个服务的环境是一样的，所以我们基于服务树来统一管理服务的环境，思路很简单：</p>
<p>1. 把 服务节点 和 Puppet class 做一个关联，即表示服务节点下的所有机器都使用此 Puppet class 来配置基础环境。</p>
<p>2. Puppet 有多个 class，class 之间的继承等关联关系通过 Puppet 配置文件来维护；</p>
<p>3. Puppet class 需要暴露出来一个 class 的列表来供做关联的时候做选择，这个列表可以放在 Puppet 配置中的一个文件里，文件对外提供 HTTP 下载(然后再封装成 API)。</p>
<p>那么，当机器来请求 Puppet 获取配置的时候，怎么返回呢？</p>
<p>参考 <a title="这篇文章" href="http://www.nosa.me/2015/01/09/%E5%A6%82%E4%BD%95-%E4%BD%BF-puppet-node-%E6%8C%87%E4%BB%A4%E5%AE%9A%E4%B9%89%E7%9A%84%E6%9C%BA%E5%99%A8%E5%88%97%E8%A1%A8%E5%8A%A8%E6%80%81%E8%8E%B7%E5%8F%96/" target="_blank">这篇文章</a>，我们使用 Puppet 的 ENC 功能，写一个自定义脚本，传入机器名，返回包含 class 的 yaml 格式文本。脚本的流程：</p>
<p>1. 根据机器名获取机器属于哪个(些)服务节点(基于服务树 API)；</p>
<p>2. 根据服务节点获取 Puppet class；</p>
<p>3. 拼成 yaml 格式文本并打印。</p>
<p>如果属于多个服务节点，而且服务节点的 Puppet class 不一样，此时可以使用 default class (只配置系统基础环境，不配置应用基础环境)。</p>
<p>&nbsp;</p>
<p>但是，还有一个问题，如何在机器创建之后立即配置环境？</p>
<p>现状是：</p>
<p>1. 机器安装好之后会立即执行 Puppet；</p>
<p>2. Puppet 执行之后会自动安装资产系统 agent，agent 把机器上报到资产系统，表示此机器安装完成；</p>
<p>3. 然后调用 API 把机器关联到安装机器时指定的服务节点。</p>
<p>像上面讲的，Puppet 配置(应用)基础环境需要知道是哪个服务节点，而第 1 步的时候不知道是哪个服务节点。</p>
<p>这里抛出一个修改 ENC 脚本的方法：</p>
<p>1. ENC 调用服务树 API，获取机器绑定的服务节点；</p>
<p>2. 如果找不到节点，那么继续调用装机系统 API，获取服务节点。</p>
<p>这种方法只有「正在装」的机器才会调用装机系统 API，增加的调用不多，所以能接受。</p>
<p>&nbsp;</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
												<span class="cat-links">
				<span class="entry-utility-prep entry-utility-prep-cat-links">发表在</span><a href="http://www.nosa.me/category/op_platform/" rel="category tag">运维工具平台</a>			</span>

															<span class="sep"> | </span>
							<span class="tag-links">
				<span class="entry-utility-prep entry-utility-prep-tag-links">标签有</span><a href="http://www.nosa.me/tag/puppet/" rel="tag">puppet</a>、<a href="http://www.nosa.me/tag/%e6%9c%8d%e5%8a%a1%e6%a0%91/" rel="tag">服务树</a>、<a href="http://www.nosa.me/tag/%e6%9c%ba%e5%99%a8/" rel="tag">机器</a>、<a href="http://www.nosa.me/tag/%e7%8e%af%e5%a2%83/" rel="tag">环境</a>			</span>
						
									<span class="sep"> | </span>
						<span class="comments-link"><a href="http://www.nosa.me/2016/12/21/%e6%9c%ba%e5%99%a8%e7%8e%af%e5%a2%83%e7%ae%a1%e7%90%86/#respond"><span class="leave-reply">发表回复</span></a></span>
			
					</footer><!-- .entry-meta -->
	</article><!-- #post-2773 -->

				
					
	<article id="post-2720" class="post-2720 post type-post status-publish format-standard hentry category-op_platform tag-nginx tag-449 tag-13 tag-447">
		<header class="entry-header">
						<h1 class="entry-title"><a href="http://www.nosa.me/2016/11/09/%e5%a6%82%e4%bd%95%e8%87%aa%e5%8a%a8%e5%8c%96%e7%9a%84%e7%94%9f%e6%88%90-nginx-%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6/" rel="bookmark">如何自动化的生成 Nginx 配置文件</a></h1>
			
						<div class="entry-meta">
				<span class="sep">发表于</span><a href="http://www.nosa.me/2016/11/09/%e5%a6%82%e4%bd%95%e8%87%aa%e5%8a%a8%e5%8c%96%e7%9a%84%e7%94%9f%e6%88%90-nginx-%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6/" title="21:52" rel="bookmark"><time class="entry-date" datetime="2016-11-09T21:52:23+00:00">11/09/2016</time></a><span class="by-author"><span class="sep">由</span><span class="author vcard"><a class="url fn n" href="http://www.nosa.me/author/wateer/" title="查看所有由wateer发布的文章" rel="author">wateer</a></span></span>			</div><!-- .entry-meta -->
			
						<div class="comments-link">
				<a href="http://www.nosa.me/2016/11/09/%e5%a6%82%e4%bd%95%e8%87%aa%e5%8a%a8%e5%8c%96%e7%9a%84%e7%94%9f%e6%88%90-nginx-%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6/#respond"><span class="leave-reply">回复</span></a>			</div>
					</header><!-- .entry-header -->

		
		<div class="entry-content">
			<p>本文讨论如何自动化的生成 Nginx 配置文件，Nginx 配置文件指的是 server 的配置，这里有一个很重要的概念，就是：服务树，我们希望基于服务树来维护 server 配置需要的信息。</p>
<p>&nbsp;</p>
<p>服务树的每一个节点就是一个服务，那么，我们对每个节点定义必要的信息，包括：</p>
<p>node_id &#8211; 节点 id，代表服务；</p>
<p>domain_uris &#8211; 代表服务绑定的域名和路径，支持多个，因为一个服务可能同时需要绑定外网域名和内网域名，而且有绑定多个路径的需求，它的格式如下：</p>
<p>[{&#8216;domain_id&#8217;: domain_id, &#8216;uri&#8217;: uri }, &#8230;] ；</p>
<p>upstream node name &#8211; 这个服务的 upstream 名称；</p>
<p>servers &#8211; node_id 下绑定的机器列表(每台机器可以绑定不同的权重，以实现流量控制)；</p>
<p>port &#8211; 这个服务监听的端口；</p>
<p>ip_hash &#8211; 是否对 upstream 启用 ip hash。</p>
<p>&nbsp;</p>
<p>上面的 domain_id 表示域名信息，事实上域名信息包括：</p>
<p>domain &#8211; 域名；</p>
<p>ports &#8211; 端口，可以包含多个端口，并且支持是否开启 ssl；</p>
<p>access_log_path &#8211; 正常日志路径，默认为 ${domain}_access.log；</p>
<p>error_log_path &#8211; 错误日志路径，默认为 ${domain}_error.log；</p>
<p>ssl_cert_path &#8211; 证书文件路径，如果 ports 中没有开启 ssl，此处可以留空；</p>
<p>ssl_cert_key_path &#8211; 私钥文件路径，如果 ports 中没有开启 ssl，此处可以留空；</p>
<p>要注意的一点，如果 ssl 文件配置在 server 中，如果客户端不支持 SNI，ssl 连接可能会失败，这里我们不讨论多个域名证书不放在 server 中的配置问题。</p>
<p>生成配置文件基于模板，很简单，不过要注意的是，location $uri 有顺序要求，只要能保证按照 uri 的长度从高到低就没问题了。</p>
<p>&nbsp;</p>
<p>自动生成配置文件的好处：</p>
<p>1. 在页面上点点就能增加、修改或删除服务的 Nginx 配置，比较方面，而且彻底解决了使用 git 管理配置带来的各种 rewrite 、if 等冗长的配置问题；</p>
<p>2. 可以基于服务做可用率的报警，根据服务可以查到 domain 和 path，然后过滤 Nginx 日志来计算可用率。而且当服务出问题的时候可以查看到服务的每台机器的可用率状况，然后做出自动剔除机器的动作。</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
												<span class="cat-links">
				<span class="entry-utility-prep entry-utility-prep-cat-links">发表在</span><a href="http://www.nosa.me/category/op_platform/" rel="category tag">运维工具平台</a>			</span>

															<span class="sep"> | </span>
							<span class="tag-links">
				<span class="entry-utility-prep entry-utility-prep-tag-links">标签有</span><a href="http://www.nosa.me/tag/nginx/" rel="tag">nginx</a>、<a href="http://www.nosa.me/tag/%e7%94%9f%e6%88%90/" rel="tag">生成</a>、<a href="http://www.nosa.me/tag/%e8%87%aa%e5%8a%a8/" rel="tag">自动</a>、<a href="http://www.nosa.me/tag/%e9%85%8d%e7%bd%ae/" rel="tag">配置</a>			</span>
						
									<span class="sep"> | </span>
						<span class="comments-link"><a href="http://www.nosa.me/2016/11/09/%e5%a6%82%e4%bd%95%e8%87%aa%e5%8a%a8%e5%8c%96%e7%9a%84%e7%94%9f%e6%88%90-nginx-%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6/#respond"><span class="leave-reply">发表回复</span></a></span>
			
					</footer><!-- .entry-meta -->
	</article><!-- #post-2720 -->

				
					
	<article id="post-2596" class="post-2596 post type-post status-publish format-standard hentry category-app_platform tag-swarmkit tag-task tag-73 tag-443">
		<header class="entry-header">
						<h1 class="entry-title"><a href="http://www.nosa.me/2016/10/17/swarm-%e7%9a%84-%e4%bb%bb%e5%8a%a1%e6%b5%81/" rel="bookmark">swarm task 的更新流程</a></h1>
			
						<div class="entry-meta">
				<span class="sep">发表于</span><a href="http://www.nosa.me/2016/10/17/swarm-%e7%9a%84-%e4%bb%bb%e5%8a%a1%e6%b5%81/" title="20:23" rel="bookmark"><time class="entry-date" datetime="2016-10-17T20:23:24+00:00">10/17/2016</time></a><span class="by-author"><span class="sep">由</span><span class="author vcard"><a class="url fn n" href="http://www.nosa.me/author/wateer/" title="查看所有由wateer发布的文章" rel="author">wateer</a></span></span>			</div><!-- .entry-meta -->
			
						<div class="comments-link">
				<a href="http://www.nosa.me/2016/10/17/swarm-%e7%9a%84-%e4%bb%bb%e5%8a%a1%e6%b5%81/#respond"><span class="leave-reply">回复</span></a>			</div>
					</header><!-- .entry-header -->

		
		<div class="entry-content">
			<p>swarm 声明了 13 中 task 状态，如下：</p>
<p>TaskStateNew TaskState = 0<br />
TaskStateAllocated TaskState = 64<br />
TaskStatePending TaskState = 128<br />
TaskStateAssigned TaskState = 192<br />
TaskStateAccepted TaskState = 256<br />
TaskStatePreparing TaskState = 320<br />
TaskStateReady TaskState = 384<br />
TaskStateStarting TaskState = 448<br />
TaskStateRunning TaskState = 512<br />
TaskStateCompleted TaskState = 576<br />
TaskStateShutdown TaskState = 640<br />
TaskStateFailed TaskState = 704<br />
TaskStateRejected TaskState = 768</p>
<p>&nbsp;</p>
<p>1. Orchestrator 判断如果 service 指定的 slot 数量大于正在运行的 slot 数量， 则创建 task，状态为 TaskStateNew；</p>
<p>2. TaskStateAllocated 为 task 收集网络资源之后把状态改成 TaskStateAllocated；</p>
<p>3. TaskStatePending 表示 Scheduler 收到请求但是还未 unassigned，在代码中我未见到有把状态改成 TaskStatePending；</p>
<p>4. Scheduler 收到 task 之后会把 task 调度到合适的 node 上，状态改为 TaskStateAssigned；</p>
<p>5. 进入 Agent 的处理流程：</p>
<p>1). Agent 收到 task，并且获取到 task 的 Controller 之后改成 TaskStateAccepted；</p>
<p>2). 如果状态为 TaskStateAccepted，改成 TaskStatePreparing；</p>
<p>3). 如果状态为 TaskStatePreparing，调用 Controller 的 Prepare 方法，把状态改成 TaskStateReady；</p>
<p>4). 如果状态为 TaskStateReady，改成 TaskStateStarting。</p>
<p>5). 如果状态为 TaskStateStarting，调用 Controller 的 Start 方法，把状态改成 TaskStateRunning；</p>
<p>6). 如果状态为 TaskStateRunning，则调用 Controller 的 Wait 方法，如果 task 执行完了，状态改为 TaskStateCompleted；</p>
<p>当 task 状态有变化，Agent 会通过到 Dispatcher 的 session 把状态汇报给 Dispatcher。</p>
<p>7). 当 task 的 DesiredState 为 TaskStateShutdown 而且状态小于 TaskStateCompleted 时，调用 Controller 的 Shutdown 方法，关闭 task。</p>
<p>task 的 DesiredState 在 task 创建之后是 TaskStateRunning，如果 manager 想关闭 task，把 DesiredState 设置成 TaskStateShutdown(DesiredState 只能被 manager 修改)。</p>
<p>&nbsp;</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
												<span class="cat-links">
				<span class="entry-utility-prep entry-utility-prep-cat-links">发表在</span><a href="http://www.nosa.me/category/app_platform/" rel="category tag">应用基础平台</a>			</span>

															<span class="sep"> | </span>
							<span class="tag-links">
				<span class="entry-utility-prep entry-utility-prep-tag-links">标签有</span><a href="http://www.nosa.me/tag/swarmkit/" rel="tag">swarmkit</a>、<a href="http://www.nosa.me/tag/task/" rel="tag">task</a>、<a href="http://www.nosa.me/tag/%e6%b5%81%e7%a8%8b/" rel="tag">流程</a>、<a href="http://www.nosa.me/tag/%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f/" rel="tag">生命周期</a>			</span>
						
									<span class="sep"> | </span>
						<span class="comments-link"><a href="http://www.nosa.me/2016/10/17/swarm-%e7%9a%84-%e4%bb%bb%e5%8a%a1%e6%b5%81/#respond"><span class="leave-reply">发表回复</span></a></span>
			
					</footer><!-- .entry-meta -->
	</article><!-- #post-2596 -->

				
						<nav id="nav-below">
			<h3 class="assistive-text">文章导航</h3>
			<div class="nav-previous"><a href="http://www.nosa.me/page/2/" ><span class="meta-nav">&larr;</span> 早期文章</a></div>
			<div class="nav-next"></div>
		</nav><!-- #nav-above -->
	
			
			</div><!-- #content -->
		</div><!-- #primary -->

		<div id="secondary" class="widget-area" role="complementary">
					<aside id="recent-posts-2" class="widget widget_recent_entries">		<h3 class="widget-title">近期文章</h3>		<ul>
					<li>
				<a href="http://www.nosa.me/2017/04/28/%e8%bf%90%e7%bb%b4%e7%b3%bb%e7%bb%9f-roadmap/">运维系统 Roadmap</a>
						</li>
					<li>
				<a href="http://www.nosa.me/2017/01/11/%e5%92%8c%e6%9c%8d%e5%8a%a1%e6%a0%91%e5%85%b3%e8%81%94%e7%9a%84%e7%b3%bb%e7%bb%9f/">和服务树关联的系统</a>
						</li>
					<li>
				<a href="http://www.nosa.me/2016/12/21/%e6%9c%ba%e5%99%a8%e7%8e%af%e5%a2%83%e7%ae%a1%e7%90%86/">机器环境管理</a>
						</li>
					<li>
				<a href="http://www.nosa.me/2016/11/09/%e5%a6%82%e4%bd%95%e8%87%aa%e5%8a%a8%e5%8c%96%e7%9a%84%e7%94%9f%e6%88%90-nginx-%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6/">如何自动化的生成 Nginx 配置文件</a>
						</li>
					<li>
				<a href="http://www.nosa.me/2016/10/17/swarm-%e7%9a%84-%e4%bb%bb%e5%8a%a1%e6%b5%81/">swarm task 的更新流程</a>
						</li>
					<li>
				<a href="http://www.nosa.me/2016/10/14/docker-swarmkit-%e6%ba%90%e7%a0%81%e9%98%85%e8%af%bb-agent-%e9%83%a8%e5%88%86/">docker swarmkit 源码阅读: Agent 部分</a>
						</li>
					<li>
				<a href="http://www.nosa.me/2016/10/12/docker-swarmkit-%e6%ba%90%e7%a0%81%e9%98%85%e8%af%bb-dispatcher-%e9%83%a8%e5%88%86/">docker swarmkit 源码阅读: Dispatcher 部分</a>
						</li>
					<li>
				<a href="http://www.nosa.me/2016/10/11/docker-swarmkit-%e6%ba%90%e7%a0%81%e9%98%85%e8%af%bb-scheduler-%e9%83%a8%e5%88%86/">docker swarmkit 源码阅读: Scheduler 部分</a>
						</li>
					<li>
				<a href="http://www.nosa.me/2016/10/10/docker-swarmkit-%e6%ba%90%e7%a0%81%e9%98%85%e8%af%bb-allocator-%e9%83%a8%e5%88%86/">docker swarmkit 源码阅读: Allocator 部分</a>
						</li>
					<li>
				<a href="http://www.nosa.me/2016/09/28/docker-swarmkit-%e6%ba%90%e7%a0%81%e9%98%85%e8%af%bb-orchestrator-%e9%83%a8%e5%88%86/">docker swarmkit 源码阅读: Orchestrator 部分</a>
						</li>
				</ul>
		</aside>		<aside id="tag_cloud-3" class="widget widget_tag_cloud"><h3 class="widget-title">标签</h3><div class="tagcloud"><a href='http://www.nosa.me/tag/aws-2/' class='tag-link-15 tag-link-position-1' title='10个话题' style='font-size: 16.252631578947pt;'>aws</a>
<a href='http://www.nosa.me/tag/bios/' class='tag-link-68 tag-link-position-2' title='2个话题' style='font-size: 8pt;'>BIOS</a>
<a href='http://www.nosa.me/tag/boto/' class='tag-link-45 tag-link-position-3' title='4个话题' style='font-size: 11.242105263158pt;'>boto</a>
<a href='http://www.nosa.me/tag/ddns/' class='tag-link-65 tag-link-position-4' title='3个话题' style='font-size: 9.7684210526316pt;'>DDNS</a>
<a href='http://www.nosa.me/tag/dell/' class='tag-link-66 tag-link-position-5' title='3个话题' style='font-size: 9.7684210526316pt;'>DELL</a>
<a href='http://www.nosa.me/tag/dhcp/' class='tag-link-62 tag-link-position-6' title='4个话题' style='font-size: 11.242105263158pt;'>DHCP</a>
<a href='http://www.nosa.me/tag/dns/' class='tag-link-64 tag-link-position-7' title='6个话题' style='font-size: 13.452631578947pt;'>DNS</a>
<a href='http://www.nosa.me/tag/docker/' class='tag-link-124 tag-link-position-8' title='4个话题' style='font-size: 11.242105263158pt;'>docker</a>
<a href='http://www.nosa.me/tag/ec2/' class='tag-link-39 tag-link-position-9' title='6个话题' style='font-size: 13.452631578947pt;'>ec2</a>
<a href='http://www.nosa.me/tag/file/' class='tag-link-261 tag-link-position-10' title='3个话题' style='font-size: 9.7684210526316pt;'>file</a>
<a href='http://www.nosa.me/tag/fullnat/' class='tag-link-20 tag-link-position-11' title='2个话题' style='font-size: 8pt;'>fullnat</a>
<a href='http://www.nosa.me/tag/guestfish/' class='tag-link-199 tag-link-position-12' title='3个话题' style='font-size: 9.7684210526316pt;'>guestfish</a>
<a href='http://www.nosa.me/tag/http/' class='tag-link-17 tag-link-position-13' title='7个话题' style='font-size: 14.189473684211pt;'>http</a>
<a href='http://www.nosa.me/tag/https/' class='tag-link-96 tag-link-position-14' title='4个话题' style='font-size: 11.242105263158pt;'>https</a>
<a href='http://www.nosa.me/tag/instance/' class='tag-link-91 tag-link-position-15' title='3个话题' style='font-size: 9.7684210526316pt;'>instance</a>
<a href='http://www.nosa.me/tag/keepalive/' class='tag-link-209 tag-link-position-16' title='3个话题' style='font-size: 9.7684210526316pt;'>keepalive</a>
<a href='http://www.nosa.me/tag/kvm/' class='tag-link-174 tag-link-position-17' title='11个话题' style='font-size: 16.842105263158pt;'>kvm</a>
<a href='http://www.nosa.me/tag/linux/' class='tag-link-101 tag-link-position-18' title='3个话题' style='font-size: 9.7684210526316pt;'>linux</a>
<a href='http://www.nosa.me/tag/lvs/' class='tag-link-16 tag-link-position-19' title='11个话题' style='font-size: 16.842105263158pt;'>lvs</a>
<a href='http://www.nosa.me/tag/nat/' class='tag-link-42 tag-link-position-20' title='3个话题' style='font-size: 9.7684210526316pt;'>nat</a>
<a href='http://www.nosa.me/tag/nginx/' class='tag-link-37 tag-link-position-21' title='26个话题' style='font-size: 22pt;'>nginx</a>
<a href='http://www.nosa.me/tag/open-falcon/' class='tag-link-373 tag-link-position-22' title='3个话题' style='font-size: 9.7684210526316pt;'>open-falcon</a>
<a href='http://www.nosa.me/tag/puppet/' class='tag-link-108 tag-link-position-23' title='4个话题' style='font-size: 11.242105263158pt;'>puppet</a>
<a href='http://www.nosa.me/tag/pxe/' class='tag-link-61 tag-link-position-24' title='2个话题' style='font-size: 8pt;'>PXE</a>
<a href='http://www.nosa.me/tag/python/' class='tag-link-457 tag-link-position-25' title='7个话题' style='font-size: 14.189473684211pt;'>Python</a>
<a href='http://www.nosa.me/tag/qcow2/' class='tag-link-175 tag-link-position-26' title='6个话题' style='font-size: 13.452631578947pt;'>qcow2</a>
<a href='http://www.nosa.me/tag/redis/' class='tag-link-30 tag-link-position-27' title='3个话题' style='font-size: 9.7684210526316pt;'>redis</a>
<a href='http://www.nosa.me/tag/route-table/' class='tag-link-41 tag-link-position-28' title='2个话题' style='font-size: 8pt;'>route table</a>
<a href='http://www.nosa.me/tag/ssl/' class='tag-link-93 tag-link-position-29' title='4个话题' style='font-size: 11.242105263158pt;'>ssl</a>
<a href='http://www.nosa.me/tag/swarmkit/' class='tag-link-433 tag-link-position-30' title='6个话题' style='font-size: 13.452631578947pt;'>swarmkit</a>
<a href='http://www.nosa.me/tag/tcp/' class='tag-link-19 tag-link-position-31' title='4个话题' style='font-size: 11.242105263158pt;'>tcp</a>
<a href='http://www.nosa.me/tag/tftp/' class='tag-link-63 tag-link-position-32' title='2个话题' style='font-size: 8pt;'>TFTP</a>
<a href='http://www.nosa.me/tag/tornado/' class='tag-link-27 tag-link-position-33' title='2个话题' style='font-size: 8pt;'>tornado</a>
<a href='http://www.nosa.me/tag/vpc/' class='tag-link-23 tag-link-position-34' title='3个话题' style='font-size: 9.7684210526316pt;'>vpc</a>
<a href='http://www.nosa.me/tag/yum/' class='tag-link-103 tag-link-position-35' title='3个话题' style='font-size: 9.7684210526316pt;'>yum</a>
<a href='http://www.nosa.me/tag/%e5%8e%9f%e7%90%86/' class='tag-link-14 tag-link-position-36' title='2个话题' style='font-size: 8pt;'>原理</a>
<a href='http://www.nosa.me/tag/%e5%8f%91%e5%b8%83/' class='tag-link-86 tag-link-position-37' title='5个话题' style='font-size: 12.421052631579pt;'>发布</a>
<a href='http://www.nosa.me/tag/%e5%ae%9e%e4%be%8b/' class='tag-link-50 tag-link-position-38' title='4个话题' style='font-size: 11.242105263158pt;'>实例</a>
<a href='http://www.nosa.me/tag/%e6%b5%81%e7%a8%8b/' class='tag-link-73 tag-link-position-39' title='5个话题' style='font-size: 12.421052631579pt;'>流程</a>
<a href='http://www.nosa.me/tag/%e6%ba%90%e7%a0%81/' class='tag-link-374 tag-link-position-40' title='8个话题' style='font-size: 14.926315789474pt;'>源码</a>
<a href='http://www.nosa.me/tag/%e8%87%aa%e5%8a%a8/' class='tag-link-13 tag-link-position-41' title='2个话题' style='font-size: 8pt;'>自动</a>
<a href='http://www.nosa.me/tag/%e8%99%9a%e6%8b%9f%e6%9c%ba/' class='tag-link-196 tag-link-position-42' title='3个话题' style='font-size: 9.7684210526316pt;'>虚拟机</a>
<a href='http://www.nosa.me/tag/%e8%a3%85%e6%9c%ba/' class='tag-link-12 tag-link-position-43' title='5个话题' style='font-size: 12.421052631579pt;'>装机</a>
<a href='http://www.nosa.me/tag/%e9%95%9c%e5%83%8f/' class='tag-link-176 tag-link-position-44' title='7个话题' style='font-size: 14.189473684211pt;'>镜像</a>
<a href='http://www.nosa.me/tag/%e9%95%bf%e8%bf%9e%e6%8e%a5/' class='tag-link-18 tag-link-position-45' title='2个话题' style='font-size: 8pt;'>长连接</a></div>
</aside><aside id="categories-2" class="widget widget_categories"><h3 class="widget-title">分类目录</h3>		<ul>
	<li class="cat-item cat-item-10"><a href="http://www.nosa.me/category/aws/" >AWS</a> (10)
</li>
	<li class="cat-item cat-item-31"><a href="http://www.nosa.me/category/python/" >Python</a> (3)
</li>
	<li class="cat-item cat-item-26"><a href="http://www.nosa.me/category/web_develop/" >Web开发</a> (1)
</li>
	<li class="cat-item cat-item-92"><a href="http://www.nosa.me/category/webserver/" >Web服务器</a> (23)
</li>
	<li class="cat-item cat-item-389"><a href="http://www.nosa.me/category/%e5%9f%ba%e7%a1%80%e8%bd%af%e4%bb%b6/" >基础软件</a> (1)
</li>
	<li class="cat-item cat-item-119"><a href="http://www.nosa.me/category/app_platform/" >应用基础平台</a> (21)
</li>
	<li class="cat-item cat-item-127"><a href="http://www.nosa.me/category/app_arch/" >应用程序架构</a> (3)
</li>
	<li class="cat-item cat-item-158"><a href="http://www.nosa.me/category/sa/" >系统管理</a> (13)
</li>
	<li class="cat-item cat-item-344"><a href="http://www.nosa.me/category/%e7%bd%91%e7%bb%9c/" >网络</a> (2)
</li>
	<li class="cat-item cat-item-2"><a href="http://www.nosa.me/category/lb/" >负载均衡器</a> (3)
</li>
	<li class="cat-item cat-item-11"><a href="http://www.nosa.me/category/op_arch/" >运维基础架构</a> (13)
</li>
	<li class="cat-item cat-item-128"><a href="http://www.nosa.me/category/op_platform/" >运维工具平台</a> (8)
</li>
	<li class="cat-item cat-item-155"><a href="http://www.nosa.me/category/others/" >那些事儿</a> (2)
</li>
	<li class="cat-item cat-item-118"><a href="http://www.nosa.me/category/cfg_tools/" >配置管理工具</a> (3)
</li>
		</ul>
</aside><aside id="archives-5" class="widget widget_archive"><h3 class="widget-title">文章归档</h3>		<ul>
			<li><a href='http://www.nosa.me/2017/04/'>2017年四月</a>&nbsp;(1)</li>
	<li><a href='http://www.nosa.me/2017/01/'>2017年一月</a>&nbsp;(1)</li>
	<li><a href='http://www.nosa.me/2016/12/'>2016年十二月</a>&nbsp;(1)</li>
	<li><a href='http://www.nosa.me/2016/11/'>2016年十一月</a>&nbsp;(1)</li>
	<li><a href='http://www.nosa.me/2016/10/'>2016年十月</a>&nbsp;(5)</li>
	<li><a href='http://www.nosa.me/2016/09/'>2016年九月</a>&nbsp;(2)</li>
	<li><a href='http://www.nosa.me/2016/08/'>2016年八月</a>&nbsp;(1)</li>
	<li><a href='http://www.nosa.me/2016/07/'>2016年七月</a>&nbsp;(1)</li>
	<li><a href='http://www.nosa.me/2016/06/'>2016年六月</a>&nbsp;(1)</li>
	<li><a href='http://www.nosa.me/2016/05/'>2016年五月</a>&nbsp;(4)</li>
	<li><a href='http://www.nosa.me/2016/04/'>2016年四月</a>&nbsp;(2)</li>
	<li><a href='http://www.nosa.me/2016/02/'>2016年二月</a>&nbsp;(2)</li>
	<li><a href='http://www.nosa.me/2016/01/'>2016年一月</a>&nbsp;(1)</li>
	<li><a href='http://www.nosa.me/2015/12/'>2015年十二月</a>&nbsp;(3)</li>
	<li><a href='http://www.nosa.me/2015/11/'>2015年十一月</a>&nbsp;(1)</li>
	<li><a href='http://www.nosa.me/2015/10/'>2015年十月</a>&nbsp;(5)</li>
	<li><a href='http://www.nosa.me/2015/09/'>2015年九月</a>&nbsp;(5)</li>
	<li><a href='http://www.nosa.me/2015/08/'>2015年八月</a>&nbsp;(6)</li>
	<li><a href='http://www.nosa.me/2015/07/'>2015年七月</a>&nbsp;(3)</li>
	<li><a href='http://www.nosa.me/2015/06/'>2015年六月</a>&nbsp;(1)</li>
	<li><a href='http://www.nosa.me/2015/05/'>2015年五月</a>&nbsp;(1)</li>
	<li><a href='http://www.nosa.me/2015/04/'>2015年四月</a>&nbsp;(2)</li>
	<li><a href='http://www.nosa.me/2015/03/'>2015年三月</a>&nbsp;(2)</li>
	<li><a href='http://www.nosa.me/2015/02/'>2015年二月</a>&nbsp;(1)</li>
	<li><a href='http://www.nosa.me/2015/01/'>2015年一月</a>&nbsp;(1)</li>
	<li><a href='http://www.nosa.me/2014/12/'>2014年十二月</a>&nbsp;(7)</li>
	<li><a href='http://www.nosa.me/2014/11/'>2014年十一月</a>&nbsp;(18)</li>
	<li><a href='http://www.nosa.me/2014/10/'>2014年十月</a>&nbsp;(23)</li>
	<li><a href='http://www.nosa.me/2014/09/'>2014年九月</a>&nbsp;(4)</li>
		</ul>
		</aside><aside id="recent-comments-2" class="widget widget_recent_comments"><h3 class="widget-title">近期评论</h3><ul id="recentcomments"></ul></aside><aside id="meta-2" class="widget widget_meta"><h3 class="widget-title">功能</h3>			<ul>
						<li><a href="http://www.nosa.me/wp-login.php">登录</a></li>
			<li><a href="http://www.nosa.me/feed/">文章<abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="http://www.nosa.me/comments/feed/">评论<abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="https://cn.wordpress.org/" title="基于WordPress，一个优美、先进的个人信息发布平台。">WordPress.org</a></li>			</ul>
			</aside><aside id="text-10" class="widget widget_text">			<div class="textwidget"></div>
		</aside>		</div><!-- #secondary .widget-area -->

	</div><!-- #main -->

	<footer id="colophon" role="contentinfo">

			

			<div id="site-generator">
								<a href="http://cn.wordpress.org/" title="优雅的个人发布平台">自豪地采用WordPress</a>
			</div>
	</footer><!-- #colophon -->
</div><!-- #page -->

<script type='text/javascript' src='http://www.nosa.me/wp-content/plugins/simple-subscribe/assets/netteForms.js?ver=1.0.0'></script>
<script type='text/javascript' src='http://www.nosa.me/wp-includes/js/wp-embed.min.js?ver=4.7.9'></script>

</body>
</html>