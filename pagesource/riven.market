
<!-- DOCUMENT START -->
<!DOCTYPE html>
<html lang="EN">	<head>
    <!-- Global site tag (gtag.js) - Google Analytics -->
	<script async src="https://www.googletagmanager.com/gtag/js?id=UA-108263474-1"></script>
	<script>
	  window.dataLayer = window.dataLayer || [];
	  function gtag(){dataLayer.push(arguments);}
	  gtag('js', new Date());

	  gtag('config', 'UA-108263474-1');
	</script>


    <!-- META CONTENT -->
    <meta charset="UTF-8">
    <meta name="description" content="Trade your Warframe Rivens the easy way! Stop wasting your time staring at the trade chat or hope that someone will post your Riven of choice, sell or buy any Riven like a Pro!">
    <meta name="keyword" content="Riven, market, trading, trade hub, easy, fast, sell, buy, auction, offer, find, Riven Mod, Veiled Riven, Hek, Soma, Scoliac, Artax, Riven.market, Ignis, Simulor, Boltor, Tigris, Atterax, Orthos, Opticor, Plains of Eidolon, Warframe, WF, Steam, PC, how to, how, Console, PS4, XB1, Playstation, XBox, X-BOX, XBOX ONE, list, all, mobile, cross-browser">
    <meta http-equiv="Cache-control" content="public">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="theme-color" content="#b18ed1">

    
    <!-- FAVICON -->
	<link rel="icon" href="/_img/favicon.png" sizes="16x16 32x32" type="image/png">
	
    <!-- STYLES -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Noto+Sans:400,700|Open+Sans+Condensed:300|Open+Sans:300,400,700|Raleway:100,200,300,400,700|Yantramanav:300,400">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons" media="none" onload="if(media!='all')media='all'">
    <link rel="stylesheet" type='text/css' href="/_css/reset.css">
	<link rel="stylesheet" type='text/css' href="/_css/main.css" media="none" onload="if(media!='all')media='all'">
	<link rel="manifest" href="/manifest.json">
    <link rel="stylesheet" type='text/css' id="theme" media="none" onload="if(media!='all')media='all'">
    
    <!-- TITLE -->
	<title>
		Riven.market - Listing (ITS OVER) 9000+ Rivens!
	</title>
    
    <!-- GLOBAL CODE -->
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    <script src="/_js/lib.js"></script>
    <style>.select-container,
.select-container button
{
	height: 60px;
}

.select-container
{
	/* overflow: hidden; */
}

.select-container button
{
	display: flex;
	justify-content: flex-start;
	position: relative;
	border: 1px solid rgb(191,191,191);
	background: #fff;
	box-shadow: inset 0 0 5px rgb(239,239,239);
}

.select-container button:hover
{
	background: rgb(239,239,239);
}

.select-container button:after
{
  font-family: "Material Icons";
	content: "expand_more";
  font-size: 24px;
	height: 100%;
	position: absolute;
	right: 0;
	top: 0;
	border-left: 1px solid rgb(191,191,191);
	border-top-right-radius: 5px;
	border-bottom-right-radius: 5px;
	background: rgb(223,223,223);
	width: 20px;
	display: flex;
	justify-content: center;
	align-items: center;
}


.select-container.visible button:after
{
	content: "expand_less";
}

.select-container .select-options {
    visibility: hidden;
    background: #fff;
    position: absolute;
    z-index: 100;
    overflow-y: scroll;
}

.select-container.visible .select-options {
    visibility: visible;
}
.select-container .select-optgroup,
.select-container .select-optgroup label,
.select-container .select-option,
.select-container .select-option label
{
	display: block;
}

.select-container .select-optgroup label,
.select-container .select-option label
{
	padding: 10px;
}

.select-container .select-optgroup .select-option label
{
	padding: 10px 20px;
}

.select-container .select-optgroup > label
{
    font-style: italic;
}

.select-container.visible input[type="checkbox"]
{
	display: none;
}

.select-container.visible input[type="checkbox"] + label:hover
{
	background: rgba(177, 142, 209,0.25);
}

.select-container.visible input[type="checkbox"]:checked + label
{
	background: rgba(177, 142, 209,0.75);
}/* COMMON ELEMENTS */

button,
textarea
{
	margin: 0;
	padding: 4px 8px;
	background: rgb(var(--color-white));
	border: 1px solid rgb(var(--color-lightgray));
	color: rgb(var(--color-black));
	box-shadow: inset 0 0 5px rgb(var(--color-shadow));
	transition: all 0.25s;
	resize: none;
}
button:hover
{
	background: rgb(var(--color-lightgray));
	border: 1px solid rgb(var(--color-shadow));
}

#navmobile
{
	display:none;
}

/* LANDING PAGE BUTTONS */

div#riven_option
{
  position: relative;
  width: 410px;
  margin: 25px auto 75px;
  flex-wrap: wrap;
  justify-content: space-between;
}
#riven_option i
{
  color: rgb(var(--color-black));
  font-size: 48px;
  opacity: 0.9;
  /* text-shadow: 0px 0px 2px rgba(var(--color-black),0.7); */
  transition: all 0.2s ease;
}
#riven_option .bigbutton
{
  font-size: 16px;
	/* text-shadow: 0px 0px 2px rgba(var(--color-black),0.2); */
  position: relative;
  display: block;
  border: none;
  box-sizing: border-box;
  background: rgba(var(--color-light),0.7);
  background-clip: padding-box;
  height: 100px;
  width: 200px;
  margin-top: 34px;
  margin-bottom: 34px;
  cursor: pointer;
  filter: drop-shadow(0px 1px 1px rgba(var(--color-black),0.9));
  transition: all 0.2s ease;
  border-radius: 0px;
  box-shadow: none;
}
#riven_list
{
  margin-left: 105px;
}
#riven_option .bigbutton:before, #riven_option .bigbutton:after
{
  content: '';
  position: absolute;
  border-left: 100px solid transparent;
  border-right: 100px solid transparent;
  left: 0;
}
#riven_option .bigbutton:before
{
  top: -60px;
  border-bottom: 60px solid rgba(var(--color-light),0.7);
  transition: all 0.2s ease;
}
#riven_option .bigbutton:after
{
  bottom: -60px;
  width: 0;
  border-top: 60px solid rgba(var(--color-light),0.7);
  transition: all 0.2s ease;
}

#riven_option .bigbutton:hover
{
  color: rgb(var(--color-lightgray));
  background-color: rgba(var(--color-dark),0.7);
}
#riven_option .bigbutton:hover i
{
  color: rgb(var(--color-white));
  font-size: 60px;
}
#riven_option .bigbutton:hover:before
{
  border-bottom: 60px solid rgba(var(--color-dark),0.7);
}
#riven_option .bigbutton:hover:after
{
  border-top: 60px solid rgba(var(--color-dark),0.7);
}
#riven_list:hover
{
  transform: translate(0px,-5px);
}
#riven_buy:hover
{
  transform: translate(0px,5px);
}
#riven_sell:hover
{
  transform: translate(0px,5px);
}

/* ACTIVITY TOGGLE */

.onlinestatus
{
  position: absolute;
  letter-spacing: 0px;
  width: 130px;
  height: 24px;
  top: 42px;
  right: 2px;
  background: #444;
  margin: 5px 0;
  border-radius: 48px;
  box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.5), 0px 1px 0px rgba(255, 255, 255, 0.2);
}
.onlinestatus:before
{
  content: 'INGAME';
  color: #27ae60;
  position: absolute;
  left: 10px;
  z-index: 0;
  font: 12px/26px Arial, sans-serif;
  font-weight: bold;
}
.onlinestatus:after
{
  content: 'OFFLINE';
  color: #000;
  position: absolute;
  top: 0;
  right: 10px;
  z-index: 0;
  font: 12px/26px Arial, sans-serif;
  font-weight: bold;
  /* text-shadow: 1px 1px 0px rgba(255, 255, 255, 0.15); */
}
.onlinestatus input ~ label
{
  display: block;
  width: 58px;
  height: 20px;
  cursor: pointer;
  position: absolute;
  top: 2px;
  left: 2px;
  z-index: 1;
  background: #dcddd4;
  border-radius: 50px;
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease;
  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.3);
}
.onlinestatus input[type=checkbox]:checked + label
{
  left: 70px;
}



/* FILTER */
form
{
	display: flex;
}

.multiselect, .multiselect select, button.selectbox
{
	height: 30px;
	overflow: hidden;
}

button.selectbox:after
{
  font-family: "Material Icons";
	content: "arrow_drop_down";
}

.multiselect div.options
{
	visibility: hidden;
	background: rgb(var(--color-white));
	position: absolute;
	z-index: 100;
}

.multiselect.select div.options
{
	visibility: visible;
	height: 250px;
	overflow-y: scroll;
}

.multiselect .option, .multiselect .option label
{
	display: block;
}

.multiselect .option label
{
	padding: 10px;
}

.multiselect.select div.options input[type="checkbox"]
{
	display: none;
}

.multiselect.select div.options input[type="checkbox"]:checked + label
{
	background: rgba(var(--color-light),0.75);
}


/* LIST */
form#list
{
	display: flex;
	justify-content:space-between;
	flex-wrap: wrap;
	margin: 1em 0;
	align-items: center;
	margin-top: 28px;
}
#filter
{
  display: flex;
	width: 100%;
  flex-wrap: wrap;
}
#filter > .row
{
  max-width: 600px;
  display: flex;
  flex-shrink: 1;
	justify-content:space-between;
  margin-bottom: 10px;
}
#filter button
{
	width: 100%;
  height: 34px;
}

#filter input, #filter select
{
  height: 34px;
  padding: 4px 8px;
}
#filter > .row > div.itemContent,
#filter > .row > select#weapon,
#filter > .row > div.price
{
	max-width: 200px;
  position: relative;
}
#filter > .row > div#stats,
#filter > .row > select#negstat,
#filter > .row > button#filterlist,
#filter > .row > a
{
	max-width: 300px;
}
#filter > .row > div.itemContent > label,
#filter > .row > div.price > label
{
	white-space: nowrap;
}
#filter > .row > div.price
{
	text-align: right;
  position: relative;
}
#filter .price input
{
  width: 100px;
  padding-right: 24px;
  direction: rtl;
}
#filter .price img
{
  position: absolute;
  margin-left: -22px;
  margin-top: 7px;
}
#filter .price label, #filter .rivenCheckbox ~ label
{
  position: absolute;
  bottom: 42px;
}
#filter .rivenCheckbox ~ label
{
  left: -10px;
}
#stats
{
  min-width: 260px;
	position: relative;
}
#stats .select
{
	width: 100%;
}

#stats > i
{
  position: absolute;
  margin-left: -26px;
  margin-top: 5px;
  opacity: 0.5;
}

#stats:hover > i
{
  opacity: 0.9;
}

#stats > div
{
	display: flex;
	justify-content: flex-start;
	position: absolute;
  bottom: 25px;
}
#stats > div > .item
{
	position: relative;
	cursor: pointer;
	font-size: 13px;
	padding: 2px 14px 4px 4px;
	border: 1px solid rgb(var(--color-darkgray));
	/* border-radius: 5px; */
	background: rgba(var(--color-light),0.4);
	margin: 0 5px 12px 0;
}
#stats > div > .item:after
{
	position: absolute;
	right: 2px;
	top: 3px;
	content: "clear";
	font-family: "Material Icons";
	color: rgb(var(--color-darkgray));
}

#stats ul
{
	display: none;
  border: 1px solid rgb(var(--color-lightgray));
	overflow-y: scroll;
	height: 250px;
	position: absolute;
	z-index: 100;
	background: rgb(var(--color-white));
}
#stats ul li
{
	padding: 5px;
	font-size: 14px;
}

#stats.selected ul
{
	display: block;
}

#stats .hidden
{
	display: none;
}

#riven-list
{
	border: none;
	display: table;
	width: 100%;
	margin: 1em 0;
}
.attribute.stats
{
	display: table;
	width: 100%;
	height: 100%;
}

#riven-list .header, .riven, .stat.pos, .stat.neg
{
	display: table-row;
}

.riven .lightbox, .riven .image
{
  cursor: pointer;
}

#riven-list .header
{
	background-color: rgba(var(--color-light),0.75);
}

.riven:nth-child(odd)/*,
.riven:nth-child(odd) .hovermenu*/
{
	background-color: rgba(var(--color-light),0.25);
	transition: all 0.25s;
}

.riven:nth-child(odd):hover/*,
.riven:nth-child(odd):hover .hovermenu*/
{
	background-color: rgba(var(--color-light),0.3);
}

.riven:nth-child(even)/*,
.riven:nth-child(even) .hovermenu*/
{
	background-color: rgba(var(--color-white),0.3);
	transition: all 0.25s;
}

.riven:nth-child(even):hover/*,
.riven:nth-child(even):hover .hovermenu*/
{
	background-color: rgba(var(--color-white),0.8);
}

.filter, .attribute
{
  font-size: 13px;
  font-weight: 500;
	display: table-cell;
	padding: 5px;
  vertical-align: middle;
	line-height: 1.2em;
	/* text-shadow: 0px 0px 1px rgba(var(--color-black), 0.2); */
	position: relative;
	border-right: 1px solid rgba(var(--color-white),0.5);
}
.filter
{
  font-size: 14px;
	padding-left: 4px;
	padding-right: 8px;
}
.filter:first-child, .attribute:first-child
{
	padding: 0;
	margin: 0;
}
.filter:first-child, .attribute:first-child,
.filter:last-child, .attribute:last-child
{
	border-right: none;
}

.filter.sort
{
	cursor: pointer;
}

.filter.sort:after
{
	color: #eee;
	position: absolute;
	right: -1px;
	font-family: "Material Icons";
	content: "unfold_more";
  font-size: 16px;
}

.filter.sort.asc:after
{
	content: "expand_less";
}

.filter.sort.desc:after
{
	content: "expand_more";
}

.attribute.lightbox
{
	display: flex;
	justify-content: center;
	align-items: center;
	z-index: -10000;
	position: fixed;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	opacity: 0;
	transition: all 0.5s;
}

.lightbox.user
{
	margin-top: 25px;
  font-family: "Noto Sans", sans-serif;
  font-size: 2em;
  font-weight: bold;
  width: 100%;
  text-align: center;
}

.lightbox.user .name
{
	font-weight: bold;
	color: rgb(var(--color-dark));
}

.attribute.lightbox.visible
{
	background: rgba(var(--color-white),0.75);
	z-index: 10000;
	opacity: 1;
}

.attribute.image
{
	position: relative;
	background-image: url(_modules/riven/img/riven.png);
	background-size: 50px auto;
	background-repeat: no-repeat;
	background-position: center center;
	width: 60px;
	height: 65px;
  text-align: center;
  vertical-align: middle;
}

.attribute.image i
{
  position: relative;
  top: 14px;
  color: rgba(220,220,220,0.7);
}

.attribute.image .image.container, .lightbox.preview
{
	opacity: 0;
	position: absolute;
	display: flex;
	flex-direction: column;
	align-items: center;
	z-index: -100;
	top: 0;
	left: 75px;
	background-image: url(_modules/riven/img/riven.png);
	background-size: contain;
	background-repeat: no-repeat;
	background-position: top center;
	width: 316px;
	height: 400px;
	transform-origin: top left;
	transition: all 0.5s;
	padding-top: 39px;
	padding-left: 41px;
	padding-right: 35px;
	margin: 0 auto;
}

.attribute.image:hover .image.container, .lightbox.preview
{
	opacity: 1;
	z-index: 100;
}

.filter, .attribute.name, .attribute.price, .attribute.action
{
	white-space: nowrap;
}

.filter, .attribute.action 
{
	text-align: center;
}

.filter.online > .material-icons
{
  position: absolute;
  font-size: 22px;
  opacity: 0.6;
  top: 2px;
  bottom: 0;
  left: 0;
  right: 0;
}

.attribute.online
{
	position: relative;
  font-family: "Material Icons";
  font-size: 22px;
  text-align: center;
  color: rgb(var(--color-black));
	padding: 0;
}
.attribute.online.ingame
{
  color: rgb(var(--color-green));
}
.attribute.online.offline
{
  color: rgba(var(--color-black),0.35);
}

.hovermenu
{
	position: absolute;
	display: none;
	z-index: 10;
	height: 24px;
	right: 32px;
	bottom: 0px;
	font-size: 12px;
}
.hovermenu a 
{
	white-space: nowrap;
	margin: 0px 8px;
}
.hovermenu a i
{
	font-size: 16px;
	transform: translateY(25%);
}

.riven:hover .hovermenu,
.hovermenu:hover
{
	display: flex;
}
.attribute.price, .attribute.polarity, .attribute.rank, .attribute.mastery, .attribute.rerolls, .attribute.seller
{
	text-align: right;
}

.attribute.seller
{
  min-width: 60px;
  max-width: calc(40px + 5vw);
  word-wrap: break-word;
  word-break: break-all;
  overflow: hidden;
  flex-shrink: 1;
}

.attribute.seller, .attribute.type, .attribute.weapon, .attribute.name
{
  letter-spacing: -1px;
}


.attribute.action i.material-icons, .attribute.action span
{
  cursor: pointer;
}

.attribute.price
{
  position: relative;
  margin-right: 25px;
  text-align: right;
  text-overflow: clip;
  white-space: nowrap;
}
.attribute.price img
{
  margin-left: 0;
}
.attribute.price input, .attribute.rank input, .attribute.mastery input, .attribute.rerolls input
{
  font-size: 13px;
  color: rgb(var(--color-darkcontrast));
  border: 1px solid rgb(var(--color-darkcontrast));
  background: transparent;
  -webkit-appearance: none;
  -moz-appearance:textfield;
  direction: rtl;
  padding: 2px 4px;
  cursor: text;
}

.attribute.price input[type=number]::-webkit-outer-spin-button,
.attribute.price input[type=number]::-webkit-inner-spin-button,
.attribute.rank input[type=number]::-webkit-outer-spin-button,
.attribute.rank input[type=number]::-webkit-inner-spin-button,
.attribute.mastery input[type=number]::-webkit-outer-spin-button,
.attribute.mastery input[type=number]::-webkit-inner-spin-button,
.attribute.rerolls input[type=number]::-webkit-outer-spin-button,
.attribute.rerolls input[type=number]::-webkit-inner-spin-button
{
    -webkit-appearance: none;
    margin: 0;
}
.attribute.rank input, .attribute.mastery input
{
  width: 24px;
}
.attribute.rerolls input
{
  width: 48px;
  direction: ltr;
}
.attribute.price input:disabled, .attribute.rank input:disabled, .attribute.mastery input:disabled, .attribute.rerolls input:disabled
{
  color: rgb(var(--color-black));
  border: none;
}

.attribute.action > div
{
  display: flex;
  justify-content: flex-end;
  height: 24px;
}

.attribute.action span
{
  display: inline-block;
  line-height: 24px;
}

.lightbox.preview
{
	position: relative;
	left: 0;
}

.stat.name, .stat.value
{
	display: table-cell;
  vertical-align: middle;
}

.stat.neg .stat.name, .stat.neg .stat.value
{
  color: rgb(var(--color-warning));
}

.stat.name
{
	text-align: left;
	padding-right: 10px;
}

.stat.value
{
	text-align: right;
}

.page-select
{
	margin: 0 0 0 auto;
}

.page-select label
{
	margin-left: 1em;
	background: rgba(var(--color-white),0.4);
  border: 1px solid rgba(var(--color-black),0.8);
	cursor: pointer;
  font-weight: 600;
  padding: 0 5px;
	transition: all 0.25s;
  min-width: 32px;
  height: 32px;
	display: inline-block;
	text-align: center;
  vertical-align: middle;
}

.page-select label, .page-select label i
{
  line-height: 32px;
}

.page-select label:hover
{
	background: rgba(var(--color-white),0.6);
}
.page-select input
{
	display: none;
}

#list span
{
  margin-bottom: 0px;
}

/* CREATOR */
#rivencreator
{
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 25px;
}

#creator, #finalizer
{
  width: 500px;
  margin-left: 50px;
  line-height: 1.8em; 
}
#creator > ul, #finalizer > ul
{
    display: flex;
    flex-wrap: wrap;
}
#creator > ul, #creator > ul > li, #finalizer > ul, #finalizer > ul > li
{
	width: 100%;
}

#creator li.checkbox, #finalizer li.checkbox
{
	margin-left: -50px;
}
#creator li.checkbox .itemContent, #finalizer li.checkbox .itemContent
{
	display: flex;
}
#creator li.half, #finalizer li.half
{
	width: 50%;
	transition: width 0.5s ease 0.1s;
}
#creator li.half select, #finalizer li.half select
{
	transition: width 0.5s ease 0.1s;
}
#creator li.half.ratherFull, #finalizer li.half.ratherFull
{
	width: 100%;
	transition: width 1s ease 0.5s;
}
#creator li.half.ratherFull select, #finalizer li.half.ratherFull select
{
	width: 87.5%;
	transition: width 1s ease 0.5s;
}
#creator .checkbox .itemContent, #finalizer .checkbox .itemContent
{
	flex-direction: row;
}
#creator .itemContent, #finalizer .itemContent
{
	display: flex;
	flex-direction: column;
}
#creator select, #creator input[type="number"], #creator input[type="button"], #finalizer select, #finalizer input[type="number"], #finalizer input[type="button"]
{
	background-color: rgba(var(--color-white),0.5);
  border: solid 1px rgba(var(--color-black),0.4);
  /* border-radius: 2px; */
  margin-bottom: 5px;
  padding: 4px 8px;
}
#creator input[type="button"]:hover, #creator select:focus, #creator input[type="number"]:focus, #finalizer input[type="button"]:hover, #finalizer select:focus, #finalizer input[type="number"]:focus
{
	background-color: rgba(var(--color-white),0.8);
}
#creator .itemContent > select, #creator .itemContent > input, #creator .itemContent > div, #finalizer .itemContent > select, #finalizer .itemContent > input, #finalizer .itemContent > div
{
	margin-left: 10px;
	width: 75%;
}
#creator .itemContent > div > select, #finalizer .itemContent > div > select
{
	width: 70%;
}
#creator .itemContent > div > input, #finalizer .itemContent > div > input
{
	width: 20%;
}
#creator .itemContent > div, .itemContent > select#namepicker, #finalizer .itemContent > div
{
	display: flex;
	justify-content: space-between;
	width: 87.5%;
}
#creator .itemContent > div.slider, #finalizer .itemContent > div.slider
{
	width: 75%;
}
#creator .itemContent > div.slider > input, #finalizer .itemContent > div.slider > input
{
	width: 100%;
}
#creator #createriven, #finalizer #sellriven
{
  clear: both;
  margin-top: 25px;
  width: 87.5%;
  height: 50px;
}
select#polarity
{
  background-image: url("/_modules/riven/img/madurai.png"); 
  background-repeat: no-repeat;
  background-position: 5px center;
  padding-left: 25px;
}

#rivencreator .preview
{
	flex-grow: 1;
}

#rivencreator .preview > form
{
	display: flex;
	flex-direction: column;
	width: 316px;
	margin: 0 auto;
}

/* PREVIEW */

#previewriven
{
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 316px;
  height: 400px;
  background-image: url("/_modules/riven/img/riven.png"); 
  background-repeat: no-repeat;
  padding-top: 39px;
  padding-left: 41px;
  padding-right: 35px;
  margin: 0 auto;
}
#previewriven h1, #previewriven h2, #previewriven h3, #previewriven ul li, #rerollicon, #rivenveiled,
.image.container h1, .image.container h2, .image.container h3, .image.container ul li,
.lightbox.preview h1, .lightbox.preview h2, .lightbox.preview h3, .lightbox.preview ul li
{
  color: #b18ed1;
}
#previewriven h1, .image.container h1, .lightbox.preview h1
{
  font-family: "Noto Sans", sans-serif;
  font-size: 17px;
  font-weight: bold;
  /* text-shadow: 0px 0px 2px rgba(140, 113, 161, 0.25); */
  text-align: left;
  letter-spacing: -1px;
  
  background-repeat: no-repeat;
  background-position: right 1px; 
  background-size: 18px 18px;
  
  width: 35px;
  margin-left: 205px;
  line-height: 18px;
}
#previewriven h2, .image.container h2, .lightbox.preview h2
{
  font-family: "Yantramanav", sans-serif;
  font-weight: 400;
  font-size: 28px;
  /* text-shadow: 0px 0px 2px rgba(var(--color-light), 0.75); */
  position: absolute;
  top: 210px;
  left: auto;
  transform: scale(0.9,1);
  white-space: nowrap;
}
.image.container h2, .lightbox.preview h2
{
  width: 100%;
  text-align: center;
  left: 2px;
}
#previewriven ul, .image.container ul, .lightbox.preview ul
{
  margin-top: 180px;
  margin-left: 10px;
  margin-right: 10px;
  font-size: 16px;
  line-height: 1.1em;
}
#previewriven ul li, .image.container ul li, .lightbox.preview ul li
{
  font-family: "Noto Sans", sans-serif;
  /* text-shadow: 0px 0px 2px rgba(var(--color-black), 0.6); */
  text-align: center;
}
#previewriven h3, #rivenveiled, .image.container h3, .lightbox.preview h3
{
  font-family: "Noto Sans", sans-serif;
  font-size: 16px;
  font-weight: bold;
  position: absolute;
  bottom: 52px;
  width: 50%;
}
h3#mr, h3 #rivenveiled
{
  left: 66px;
  text-align: left;
}
h3#rerolls
{
  right: 62px;
  text-align: right;
}
img#rerollicon
{
  height: 16px;
  width: 16px;
  margin-bottom: -2px;
}
#previewriven ul li img, .image.container ul li img, .lightbox.preview ul li img
{
  height: 16px;
  margin-bottom: -0.15em;
}
.stat.name img, .attribute.price img, .attribute.rerolls img, .attribute.polarity img
{
  height: 12px;
  margin-bottom: -1px;
  margin-right: 0.1em;
  opacity: 0.8;
}

#rivenveiled
{
  bottom: 0px;
}
.hide
{
  display: none;
}

/* STATS */
.statSelector
{
  display: flex;
  flex-direction: column;
  margin-left: 10px;
  margin-right: 10px;
  width: 100%;
  position: relative;
}
.statSelector select
{
  width: 300px;
}
.statSelector input
{
  width: 80px;
}
.veil
{
	overflow: hidden;
}
.veil > .itemContent
{
	margin-top: 0px;
	transition: margin-top 1.1s ease 0.1s;
	transition: margin-top 1.2s ease 0.1s;
}
.veil.hideField > .itemContent
{
	margin-top: -100%;
	transition: margin-top 4.0s ease 0.1s;
}

/* SLIDER */
.slider
{
  display: flex;
  justify-content: stretch;
  align-items: center;
  line-height: 1.8em;
  margin-bottom: 10px;
  width: calc(100% - 60px);
  position: relative;
}
.slider.price
{
  width: 300px;
  margin-bottom: 0;
}

input[type=range]
{
  -webkit-appearance: none;
  margin: 10px;
  width: 100%;
	background: transparent;
	border: none;
}

.slider.price input[type=range]
{
  -webkit-appearance: none;
  margin: 10px;
  width: calc(100% - 200px);
}

input[type=range]:focus
{
  outline: none;
}
input[type=range]::-webkit-slider-runnable-track
{
  width: 100%;
  height: 3px;
  cursor: pointer;
  background: rgb(var(--color-lightgray));
}
input[type=range]::-webkit-slider-thumb
{
  box-shadow: 0px 0px 1px rgb(var(--color-black));
  border: 1px solid rgb(var(--color-dark));
  background: rgb(var(--color-light));
  height: 16px;
  width: 16px;
  border-radius: 1px;
  cursor: pointer;
  -webkit-appearance: none;
  margin-top: -7px;
  transform: rotate(45deg);
}
input[type=range]::-webkit-slider-thumb:hover, input[type=range]::-webkit-slider-thumb:active
{
  border: 1px solid rgb(var(--color-light));
  background: rgb(var(--color-dark));
}
input[type=range]:focus::-webkit-slider-runnable-track
{
  background: rgb(var(--color-gray));
}
input[type=range]::-moz-range-track {
  width: 100%;
  height: 3px;
  cursor: pointer;
  background: rgb(var(--color-gray));
}
input[type=range]::-moz-range-thumb
{
  box-shadow: 0px 0px 1px rgb(var(--color-black)), inset 0px 0px 2px rgba(var(--color-black),0.5);
  border: 1px solid rgb(var(--color-dark));
  background: rgb(var(--color-light));
  height: 16px;
  width: 16px;
  border-radius: 1px;
  transform: rotate(45deg);
}
input[type=range]::-moz-range-thumb:hover, input[type=range]::-moz-range-thumb:active
{
  border: 1px solid rgb(var(--color-light));
  background: rgb(var(--color-dark));
}
input[type=range]::-ms-track {
  width: 100%;
  height: 3px;
  background: transparent;
  border-color: transparent;
  color: transparent;
}
input[type=range]::-ms-thumb {
  margin-top: 1px;
  box-shadow: 0px 0px 1px rgb(var(--color-black));
  border: 1px solid rgb(var(--color-dark));
  background: rgb(var(--color-light));
  height: 16px;
  width: 16px;
  border-radius: 1px;
  transform: rotate(45deg);
}
input[type=range]::-ms-thumb:hover, input[type=range]::-ms-thumb:active
{
  border: 1px solid rgb(var(--color-light));
  background: rgb(var(--color-dark));
}
.sliderValue
{
  display: inline-block;
  position: absolute;
  top: 50%;
  margin-top: -14px;
  margin-left: calc(100% + 20px);
  width: 40px;
  color: white;
  line-height: 20px;
  text-align: center;
  /* border-radius: 2px; */
  background: rgb(var(--color-gray));
  padding: 4px 8px;
}

.slider.price .sliderValue
{
  right: 10px;
  width: 60px;
}

.sliderValue:after
{
    content: '';
    position: absolute;
    top: 1px;
    left: -10px;
    width: 0;
    height: 0;
    border-top: 13px solid transparent;
    border-right: 10px solid rgb(var(--color-gray));
    border-bottom: 13px solid transparent;
}



/* CHECKBOX */
input[type=checkbox] {
	visibility: hidden;
}
#checkArray
{
  display: flex;
  justify-content: center;
}
#checkArray > div
{
  display: flex;
  width: 80px;
  font-size: 14px;
  flex-direction: column;
  align-items: center;
  letter-spacing: -1px;
}
#creator .itemContent > .rivenCheckbox, #finalizer .itemContent > .rivenCheckbox, #list .itemContent > .rivenCheckbox
{
	width: 24px;
	height: 24px;
	margin: 5px 13px;
  background: rgb(var(--color-light));
	box-shadow: inset 0px 0px 2px black, 0px 0px 2px rgba(var(--color-black),0.5);
	transform: rotate(45deg);
}
#list .itemContent
{
	display: flex;
	align-items: center;
}
#filter > span
{
  margin-top: 10px;
  margin-bottom: -2em;
  width: 100%;
}
.rivenCheckbox label
{
	cursor: pointer;
	position: absolute;
	width: 22px;
	height: 22px;
	left: 2px;
	top: 2px;
}
.rivenCheckbox label:after
{
	opacity: 0;
	content: '';
	position: absolute;
	width: 16px;
	height: 16px;
	background: rgb(var(--color-dark));
	top: 2px;
	left: 2px;
}
.rivenCheckbox label:hover::after
{
	opacity: 0.5;
  box-shadow: 0px 0px 5px rgba(var(--color-white),0.8);
  transition: opacity 0.2s ease 0.1s;
}
.rivenCheckbox input[type=checkbox]:checked + label:after
{
	opacity: 1;
  transition: opacity 0.5s ease 0.1s;
}

/* CAPTCHA */
#captcha.itemContent
{
  margin-left: auto;
}
#captcha
{
  width: 302px;
  margin: 0 auto;
  margin-top: 1.5em;
}

/* CHAT */

#chat
{
	position: fixed;
	right: 0;
	bottom: 0;
	width: 320px;
	max-height: 500px;
	padding-bottom: 60px;
	z-index: 10;
}
#chat input[type="checkbox"],
#chat input[type="radio"]
{
	display: none;
}
#chat > label
{
	width: 50px;
	height: 50px;
	background-color: rgba(var(--color-light),0.75);
	position: absolute;
	right: 0;
	bottom: 0;
	display: flex;
	justify-content: center;
	align-items: center;
	cursor: pointer;
}
#chat > label i
{
	color: rgba(var(--color-white),0.75);
	font-size: 30px;
}
#chat > label.new
{
	background-color: rgba(var(--color-white),0.75);
}
#chat > label.new i
{
	color: rgba(var(--color-green),0.75);
}
#chat-box
{
	height: 440px;
	overflow-y: auto;
	display: none;
	flex-direction: column;
	background: rgb(var(--color-white));
	border: 10px solid rgb(var(--color-white));
	box-shadow: 0px 3px 2px rgba(var(--color-black),0.5);
}
#chat-box *
{
	font-size: 14px;
}
#chat-box:after
{
	content:"";
	position: absolute;
	bottom: 40px;
	right: 15px;
	border: 10px solid transparent;
	border-top: 10px solid rgb(var(--color-white));
}
#chat > input[type="checkbox"]:checked ~ #chat-box
{
	display: flex;
}

#chat .chat-conversation,
#chat .chat-contact
{
	margin-bottom: 5px;
}
#chat .chat-conversation:last-child
{
	margin-bottom: 0;
}

#chat .chat-conversation > input[type="checkbox"]:checked ~ .chat-body,
#chat .chat-conversation > input[type="checkbox"]:checked ~ .new-message
{
	display: flex;
}
#chat .chat-header
{
	height: 30px;
	padding: 5px;
	display: flex;
	background-color: rgba(var(--color-light),0.75);
}
#chat .chat-name
{
	flex-grow: 1;
	display: flex;
	justify-content: center;
	align-items: center;
	cursor: pointer;
}
#chat .chat-status
{
	width: 30px;
	text-align: center;
}
#chat .chat-time
{
	/* width: 100px; */
}
#chat .chat-body
{
	position: relative;
	display: none;
	flex-direction: column;
	overflow-y: auto;
	border: 1px solid rgba(var(--color-black),0.35);
	border-top: none;
	max-height: 200px;
}
#chat .chat-conversation .new-message
{
	display: none;
	width: 100%;
	height: 30px;
}
#chat .chat-conversation .new-message form
{
	width: 100%;
}
#chat .chat-conversation .new-message input[type="text"]
{
	flex-grow: 1;
	padding: 5px;
}
#chat .chat-conversation .new-message button
{
	width: 50px;
}
#chat .chat-body .message
{
	padding: 5px;
}
#chat .chat-time,
#chat span.chat-status i
{
	font-size: 12px;
}
#chat .chat-status i
{
	color: rgba(var(--color-black),0.75);
	font-size: 24px;
	position: relative;
}
#chat div.chat-status.new i,
#chat div.chat-status.sent i
{
	color: rgba(var(--color-green),0.75);
}
#chat div.chat-status.received i,
#chat div.chat-status.read i
{
	color: rgba(var(--color-black),0.75);
}
#chat div.chat-status.closed i
{
	color: rgba(var(--color-black),0.35);
}@media only screen and (min-width:1025px)
{
  #filter > * > *
  {
    margin-left: 5px;
    margin-right: 5px;
  }
  #stats > div
  {
    /*bottom: 50px;*/
  }
}


@media screen and (max-width: 1024px) 
{
	/* General stuff */
	#background {
		background-attachment: fixed;
	}
	#wrapper, #navwrapper {
			min-width: 600px;
			max-width: 800px;
	}
	nav,
	nav.scrolled
	{
		height: auto;
		background: rgb(var(--color-white));
	}
	#header {
		height: 100px;
	}
	div#logo,
	div#logo.scrolled
	{
		margin-top: 2px;
		height: 28px;
		transform: none;
		width: 100px;
	}
	#featured
	{
		top: 62px;
	}
	#navwrapper
	{
		flex-direction: column;
		position: relative;
		align-items: center;
	}
	#navmobile
	{
		display: block;
		font-size: 32px;
		position: absolute;
		right: 10px;
		cursor: pointer;
	}
	#navmobile.showmenu + ul
	{
		display: flex;
	}
	#controls
	{
		order: 1;
	}
	nav ul
	{
		display: none;
		order: 2;
		text-align: left;
		align-self: flex-end;
		padding: 10px 0px;
	}
	nav ul li
	{
		display: block;
		padding: 5px 0px;
	}
	#session img
	{
		display: none;
	}
	#content
	{
		margin-top: 32px;
	}
	#filter
  {
    justify-content: center;
  }
	#filter > .row
	{
		width: 540px;
	}
  #filter > .row:first-child
  {
    margin-bottom: 35px;
  }

	#filter > .row > div.itemContent,
	#filter > .row > div.price
	{
		width: 200px;
	}
	#filter > .row > div.price label
	{
    bottom: 25%;
    right: 104px;
	}
  #filter .rivenCheckbox ~ label
  {
    bottom: 25%;
    left: 48px;
  }
	#filter > .row > select#weapon
	{
		width: 140px;
  }
	#filter > .row > div#stats,
	#filter > .row > select#negstat,
	#filter > .row > button#filterlist,
	#filter > .row > a
	{
		width: 270px;
	}
	
	.filter.online > .material-icons
	{
		font-size: 16px;
	}
	.filter,
	.attribute
	{
		font-size: 12px;
		padding: 3px;
	}
  .attribute.seller:after
  {
    content: "";
  }
  .nomobile
  {
	  display: none;
  }
	.stat.name, .stat.value
	{
    vertical-align: top;
	}
	
	.attribute.image
	{
		background-size: 30px auto;
	}
	#slogan {
		display: none;
	}
	nav ul {
		margin-left: 250px;
	}
	
	/* Sell site */
	#creator * {
		font-size: 16px;
		line-height: 30px;
	}
	#creator > ul > li {
		width: 100%;
	}
	#creator li > input, #creator li > select, #creator .itemContent > input, #creator .itemContent > select {
		width: 100%;
		height: 50px;
	}
	#rivencreator .preview > form
	{
		display: none;
	}
	#checkArray > div {
		width: 33%;
		font-size: 16px;
	}
	.rivenCheckbox {
		width: 48px;
		height: 48px;
		margin: 0;
	}
	.rivenCheckbox label {
		width: 44px;
		height: 44px;
		left: 4px;
		top: 4px;
	}
	.rivenCheckbox label::after {
		width: 32px;
		height: 32px;
		top: 4px;
		left: 4px;
	}
	.sliderInput {
		height: 50px;
	}
	.sliderValue {
		margin-top: -27px;
	}
	.sliderValue::after {
		border-top: 27px solid transparent;
		border-bottom: 27px solid transparent;
	}
	input[type=range]::-webkit-slider-thumb
	{
	  height: 32px;
	  width: 32px;
	}
	input[type=range]::-moz-range-thumb
	{
	  height: 32px;
	  width: 32px;
	}
	input[type=range]::-ms-thumb {
	  height: 32px;
	  width: 32px;
	}
	.statSelector {
		margin-left: 0;
		margin-right: 0;
	}
	.statSelector > div, #negStat {
		width: 100%;
		display: flex;
		flex-direction: row;
		justify-content: space-between;
	}
	.statSelector select, #negStat select {
		margin-left: 10px;
		width: 70%;
	}
	.statSelector input, #negStat input {
		width: 30%;
		min-width: 70px;
		max-width: 80px;
	}
	
	#riven-list .type,
	#riven-list .name,
	#riven-list .polarity,
	#riven-list .rank,
	#riven-list .mastery,
	#riven-list .rerolls,
	.attribute.image:hover .image.container
	{
		display: none;
	}
	
	#riven-list span.name,
	#riven-list .stat.name
	{
		display: inline-block;
	}
	
	#rivencreator
	{
		flex-direction: column-reverse;
	}
	#creator li.half, #finalizer li.half, #creator #createriven,
	#creator .itemContent > div, .itemContent > select#namepicker, #finalizer .itemContent > div
	{
    width: 100%;
	}
	#creator .itemContent > div > input, #finalizer .itemContent > div > input {
		width: 30%;
	}
	#creator .itemContent > select, 
	#creator .itemContent > input, 
	#creator .itemContent > div, 
	#finalizer .itemContent > select, 
	#finalizer .itemContent > input, 
	#finalizer .itemContent > div,
	#negStat select
	{
    margin-left: 0;
	}
	#negStat
	{
		width: 75%;
	}
	#creator .sliderValue
	{
		line-height: 50px;
	}
	.onlinestatus
	{
		width: 74px;
		position: relative;
		top: 0px;
		left: 5px;
	}
	.onlinestatus:before
	{
		content: 'ON';
	}
	.onlinestatus:after
	{
		content: 'OFF';
	}
	.onlinestatus input ~ label
	{
		width: 35px;
		z-index: 100000;
	}
	.onlinestatus input[type=checkbox]:checked + label
	{
		left: 37px;
	}
}

@media screen and (max-width: 640px) {
	#wrapper, #navwrapper {
			min-width: 300px;
			max-width: 300px;
	}
	#navwrapper
	{
		align-items: flex-start;
	}
	#navmobile.showmenu + ul
	{
		display: block;
	}
	#session > a > div
	{
		display: none;
	}
	#header
	{
		display: none;
	}
	div#riven_option
	{
		transform: scale(0.65);
		transform-origin: top left;
		margin-bottom: -80px;
	}
	#filter > .row
	{
		width: 260px;
		flex-wrap: wrap;
	}
  #filter > .row > div.itemContent,
  #filter > .row > select#weapon,
  #filter > .row > div.price
  {
    width: 200px;
  }
	#filter > .row > div.itemContent,
	#filter > .row > select#weapon,
	#filter > .row > div.price,
	#filter > .row > div#stats,
	#filter > .row > select#negstat
	{
		width: 260px;
    max-width: 260px;
		margin-bottom: 10px;
	}
	#filter > .row > button#filterlist,
	#filter > .row > a
	{
		width: 130px;
		margin-bottom: 10px;
	}
	.filter, .attribute
	{
		font-size: 10px;
	}
	.attribute.online
	{
		font-size: 18px;
	}
	#riven-list .seller,
	#riven-list .action span
	{
		display: none;
	}
	#previewriven
	{
    transform: scale(0.9);
    margin: 0;
	}
	#creator, #finalizer {
    width: 225px;
	}
	.rc-anchor-normal {
    width: 200px;
	}
}</style><script>var statsData = {
  "Damage" : {
    "Name" : "Damage",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Damage",
    "MeleeDesc" : "Melee Damage",
    "Prefix" : "Visi",
    "Suffix" : "ata",
    "MeleeOnly" : false,
    "IconURL" : ""
  },
  "Multi" : {
    "Name" : "Multishot",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Multishot",
    "Prefix" : "Sati",
    "Suffix" : "can",
    "MeleeOnly" : false,
    "IconURL" : ""
  },
  "Speed" : {
    "Name" : "Fire Rate / Attack Speed",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Fire Rate",
    "MeleeDesc" : "Attack Speed",
    "Prefix" : "Croni",
    "Suffix" : "dra",
    "MeleeOnly" : false,
    "IconURL" : ""
  },
  "Corpus" : {
    "Name" : "Damage to Corpus",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Damage to Corpus",
    "Prefix" : "Manti",
    "Suffix" : "tron",
    "MeleeOnly" : false,
    "IconURL" : ""
  },
  "Grineer" : {
    "Name" : "Damage to Grineer",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Damage to Grineer",
    "Prefix" : "Argi",
    "Suffix" : "con",
    "MeleeOnly" : false,
    "IconURL" : ""
  },
  "Infested" : {
    "Name" : "Damage to Infested",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Damage to Infested",
    "Prefix" : "Pura",
    "Suffix" : "ada",
    "MeleeOnly" : false,
    "IconURL" : ""
  },
  "Impact" : {
    "Name" : "Impact",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Impact",
    "Prefix" : "Magna",
    "Suffix" : "ton",
    "MeleeOnly" : false,
    "IconURL" : "impact_c.png"
  },
  "Puncture" : {
    "Name" : "Puncture",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Puncture",
    "Prefix" : "Insi",
    "Suffix" : "cak",
    "MeleeOnly" : false,
    "IconURL" : "puncture_c.png"
  },
  "Slash" : {
    "Name" : "Slash",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Slash",
    "Prefix" : "Sci",
    "Suffix" : "sus",
    "MeleeOnly" : false,
    "IconURL" : "slash_c.png"
  },
  "Cold" : {
    "Name" : "Cold",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Cold",
    "Prefix" : "Geli",
    "Suffix" : "do",
    "MeleeOnly" : false,
    "IconURL" : "cold_c.png"
  },
  "Electric" : {
    "Name" : "Electric",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Electricity",
    "Prefix" : "Vexi",
    "Suffix" : "tio",
    "MeleeOnly" : false,
    "IconURL" : "electric_c.png"
  },
  "Heat" : {
    "Name" : "Heat",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Heat",
    "Prefix" : "Igni",
    "Suffix" : "pha",
    "MeleeOnly" : false,
    "IconURL" : "fire_c.png"
  },
  "Toxin" : {
    "Name" : "Toxin",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Toxin",
    "Prefix" : "Toxi",
    "Suffix" : "tox",
    "MeleeOnly" : false,
    "IconURL" : "poison_c.png"
  },
  "ChannelDmg" : {
    "Name" : "Channeling Damage",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Damage while Channeling",
    "Prefix" : "Tori",
    "Suffix" : "bo",
    "MeleeOnly" : true,
    "IconURL" : ""
  },
  "ChannelEff" : {
    "Name" : "Channeling Efficiency",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Efficiency while Channeling",
    "Prefix" : "Uti",
    "Suffix" : "tia",
    "MeleeOnly" : true,
    "IconURL" : ""
  },
  "Combo" : {
    "Name" : "Combo Duration",
    "Pre" : "+",
    "Unit" : "s",
    "Desc" : "Combo Duration",
    "Prefix" : "Tempi",
    "Suffix" : "nem",
    "MeleeOnly" : true,
    "IconURL" : ""
  },
  "CritChance" : {
    "Name" : "Critical Chance",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Critical Chance",
    "Prefix" : "Crita",
    "Suffix" : "cron",
    "MeleeOnly" : false,
    "IconURL" : ""
  },
  "Slide" : {
    "Name" : "Slide Attack Critical Chance",
    "Pre" : "Slide Attack has +",
    "Unit" : "%",
    "Desc" : "chance to be a Critical Hit",
    "Prefix" : "Pleci",
    "Suffix" : "nent",
    "MeleeOnly" : true,
    "IconURL" : ""
  },
  "CritDmg" : {
    "Name" : "Critical Damage",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Critical Damage",
    "Prefix" : "Acri",
    "Suffix" : "tis",
    "MeleeOnly" : false,
    "IconURL" : ""
  },
  "Finisher" : {
    "Name" : "Finisher Damage",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Finisher Damage",
    "Prefix" : "Exi",
    "Suffix" : "cta",
    "MeleeOnly" : true,
    "IconURL" : ""
  },
  "Flight" : {
    "Name" : "Flight Speed",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Flight Speed",
    "Prefix" : "Conci",
    "Suffix" : "nak",
    "MeleeOnly" : false,
    "IconURL" : ""
  },
  "Ammo" : {
    "Name" : "Ammo Max",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Ammo Maximum",
    "Prefix" : "Ampi",
    "Suffix" : "bin",
    "MeleeOnly" : false,
    "IconURL" : ""
  },
  "Magazine" : {
    "Name" : "Magazine Capacity",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Magazine Size",
    "Prefix" : "Arma",
    "Suffix" : "tin",
    "MeleeOnly" : false,
    "IconURL" : ""
  },
  "Punch" : {
    "Name" : "Punch Through",
    "Pre" : "+",
    "Unit" : "",
    "Desc" : "Punch Through",
    "Prefix" : "Lexi",
    "Suffix" : "nok",
    "MeleeOnly" : false,
    "IconURL" : ""
  },
  "Reload" : {
    "Name" : "Reload Speed",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Reload Speed",
    "Prefix" : "Feva",
    "Suffix" : "tak",
    "MeleeOnly" : false,
    "IconURL" : ""
  },
  "Range" : {
    "Name" : "Range",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Range",
    "Prefix" : "Locti",
    "Suffix" : "tor",
    "MeleeOnly" : true,
    "IconURL" : ""
  },
  "StatusC" : {
    "Name" : "Status Chance",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Status Chance",
    "Prefix" : "Hexa",
    "Suffix" : "dex",
    "MeleeOnly" : false,
    "IconURL" : ""
  },
  "StatusD" : {
    "Name" : "Status Duration",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Status Duration",
    "Prefix" : "Deci",
    "Suffix" : "des",
    "MeleeOnly" : false,
    "IconURL" : ""
  },
  "Recoil" : {
    "Name" : "Weapon Recoil",
    "Pre" : "-",
    "Unit" : "%",
    "Desc" : "Weapon Recoil",
    "Prefix" : "Zeti",
    "Suffix" : "mag",
    "MeleeOnly" : false,
    "IconURL" : ""
  },
  "Zoom" : {
    "Name" : "Zoom",
    "Pre" : "+",
    "Unit" : "%",
    "Desc" : "Zoom",
    "Prefix" : "Hera",
    "Suffix" : "lis",
    "MeleeOnly" : false,
    "IconURL" : ""
  }
};

var weaponData = {
  "Primary" : {
    "Hek" : {
      "Variants" : "Vaykor",
      "Disposition" : 1
    },
    "Simulor" : {
      "Variants" : "Synoid",
      "Disposition" : 1
    },
    "Soma" : {
      "Variants" : "Prime",
      "Disposition" : 1
    },
    "Tigris" : {
      "Variants" : "Prime, Sancti",
      "Disposition" : 1
    },
    "Tonkor" : {
      "Variants" : "",
      "Disposition" : 1
    },
    "Boltor" : {
      "Variants" : "Prime, Telos",
      "Disposition" : 2
    },
    "Cernos" : {
      "Variants" : "Prime, Rakta",
      "Disposition" : 2
    },
    "Dread" : {
      "Variants" : "",
      "Disposition" : 2
    },
    "Ignis" : {
      "Variants" : "Wraith",
      "Disposition" : 2
    },
    "Quanta" : {
      "Variants" : "Vandal",
      "Disposition" : 2
    },
    "Sybaris" : {
      "Variants" : "Prime, Dex",
      "Disposition" : 2
    },
    "Amprex" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Arca_Plasmor" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Argonak" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Baza" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Braton" : {
      "Variants" : "Prime, Mk1, Vandal",
      "Disposition" : 3
    },
    "Corinth" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Ferrox" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Grakata" : {
      "Variants" : "Prisma",
      "Disposition" : 3
    },
    "Hema" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Javlok" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Lanka" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Latron" : {
      "Variants" : "Prime, Wraith",
      "Disposition" : 3
    },
    "Lenz" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Paris" : {
      "Variants" : "Prime, Mk1",
      "Disposition" : 3
    },
    "Rubico" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Scourge" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Snipetron" : {
      "Variants" : "Vandal",
      "Disposition" : 3
    },
    "Tenora" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Vectis" : {
      "Variants" : "Prime",
      "Disposition" : 3
    },
    "Zarr" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Zenith" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Zhuge" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Astilla" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Burston" : {
      "Variants" : "Prime",
      "Disposition" : 4
    },
    "Daikyu" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Dera" : {
      "Variants" : "Vandal",
      "Disposition" : 4
    },
    "Gorgon" : {
      "Variants" : "Prisma, Wraith",
      "Disposition" : 4
    },
    "Grinlok" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Karak" : {
      "Variants" : "Wraith",
      "Disposition" : 4
    },
    "Mutalist_Cernos" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Ogris" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Opticor" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Penta" : {
      "Variants" : "Secura",
      "Disposition" : 4
    },
    "Quartakk" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Stradavar" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Supra" : {
      "Variants" : "Vandal",
      "Disposition" : 4
    },
    "Torid" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Attica" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Boar" : {
      "Variants" : "Prime",
      "Disposition" : 5
    },
    "Buzlok" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Convectrix" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Drakgoon" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Flux_Rifle" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Glaxion" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Harpak" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Hind" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Kohm" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Miter" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Mutalist_Quanta" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Panthera" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Paracyst" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Phage" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Sobek" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Strun" : {
      "Variants" : "Mk1, Wraith",
      "Disposition" : 5
    },
    "Synapse" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Tetra" : {
      "Variants" : "Prisma",
      "Disposition" : 5
    },
    "Tiberon" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Vulkar" : {
      "Variants" : "Wraith",
      "Disposition" : 5
    }
  },
  "Secondary" : {
    "Akstiletto" : {
      "Variants" : "Prime",
      "Disposition" : 1
    },
    "Gammacor" : {
      "Variants" : "Synoid",
      "Disposition" : 1
    },
    "Hikou" : {
      "Variants" : "Prime",
      "Disposition" : 1
    },
    "Lex" : {
      "Variants" : "Prime",
      "Disposition" : 1
    },
    "Marelok" : {
      "Variants" : "Vaykor",
      "Disposition" : 1
    },
    "Sonicor" : {
      "Variants" : "",
      "Disposition" : 1
    },
    "Spira" : {
      "Variants" : "Prime",
      "Disposition" : 1
    },
    "Staticor" : {
      "Variants" : "",
      "Disposition" : 1
    },
    "Zakti" : {
      "Variants" : "",
      "Disposition" : 1
    },
    "Akbolto" : {
      "Variants" : "Telos",
      "Disposition" : 2
    },
    "Atomos" : {
      "Variants" : "",
      "Disposition" : 2
    },
    "Ballistica" : {
      "Variants" : "Prime, Rakta",
      "Disposition" : 2
    },
    "Brakk" : {
      "Variants" : "",
      "Disposition" : 2
    },
    "Euphona_Prime" : {
      "Variants" : "",
      "Disposition" : 2
    },
    "Pox" : {
      "Variants" : "",
      "Disposition" : 2
    },
    "Twin_Grakatas" : {
      "Variants" : "",
      "Disposition" : 2
    },
    "Aklex" : {
      "Variants" : "Prime",
      "Disposition" : 3
    },
    "Arca_Scisco" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Cycron" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Detron" : {
      "Variants" : "Mara",
      "Disposition" : 3
    },
    "Knell" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Kulstar" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Pandero" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Twin_Rogga" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Akbronco" : {
      "Variants" : "Prime",
      "Disposition" : 4
    },
    "Akmagnus" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Aksomati" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Akvasto" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Despair" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Dual_Toxocyst" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Fusilai" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Kraken" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Stubba" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Twin_Kohmak" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Acrid" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Afuris" : {
      "Variants" : "Dex",
      "Disposition" : 5
    },
    "Akjagara" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Aklato" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Akzani" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Angstrum" : {
      "Variants" : "Prisma",
      "Disposition" : 5
    },
    "Azima" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Bolto" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Bronco" : {
      "Variants" : "Prime",
      "Disposition" : 5
    },
    "Castanas" : {
      "Variants" : "Sancti",
      "Disposition" : 5
    },
    "Cestra" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Dual_Cestra" : {
      "Variants" : "Secura",
      "Disposition" : 5
    },
    "Embolist" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Furis" : {
      "Variants" : "Mk1",
      "Disposition" : 5
    },
    "Kohmak" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Kunai" : {
      "Variants" : "Mk1",
      "Disposition" : 5
    },
    "Lato" : {
      "Variants" : "Prime, Vandal",
      "Disposition" : 5
    },
    "Magnus" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Nukor" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Pyrana" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Seer" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Sicarus" : {
      "Variants" : "Prime",
      "Disposition" : 5
    },
    "Spectra" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Stug" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Talons" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Twin_Gremlins" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Twin_Vipers" : {
      "Variants" : "Wraith",
      "Disposition" : 5
    },
    "Tysis" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Vasto" : {
      "Variants" : "Prime",
      "Disposition" : 5
    },
    "Viper" : {
      "Variants" : "",
      "Disposition" : 5
    }
  },
  "Melee" : {
    "Sigma_&_Octanis" : {
      "Variants" : "",
      "Disposition" : 0
    },
    "Balla" : {
      "Variants" : "",
      "Disposition" : 0
    },
    "Cyath" : {
      "Variants" : "",
      "Disposition" : 0
    },
    "Dehtat" : {
      "Variants" : "",
      "Disposition" : 0
    },
    "Kronsh" : {
      "Variants" : "",
      "Disposition" : 0
    },
    "Mewan" : {
      "Variants" : "",
      "Disposition" : 0
    },
    "Ooltha" : {
      "Variants" : "",
      "Disposition" : 0
    },
    "Plague_Keewar" : {
      "Variants" : "",
      "Disposition" : 0
    },
    "Plague_Kripath" : {
      "Variants" : "",
      "Disposition" : 0
    },
    "Atterax" : {
      "Variants" : "",
      "Disposition" : 1
    },
    "Dark_Dagger" : {
      "Variants" : "Rakta",
      "Disposition" : 1
    },
    "Galatine" : {
      "Variants" : "Prime",
      "Disposition" : 1
    },
    "Guandao" : {
      "Variants" : "",
      "Disposition" : 1
    },
    "Hirudo" : {
      "Variants" : "",
      "Disposition" : 1
    },
    "Jat_Kusar" : {
      "Variants" : "",
      "Disposition" : 1
    },
    "Lecta" : {
      "Variants" : "Secura",
      "Disposition" : 1
    },
    "Lesion" : {
      "Variants" : "",
      "Disposition" : 1
    },
    "Nikana" : {
      "Variants" : "Prime",
      "Disposition" : 1
    },
    "Orthos" : {
      "Variants" : "Prime",
      "Disposition" : 1
    },
    "Venka" : {
      "Variants" : "Prime",
      "Disposition" : 1
    },
    "War" : {
      "Variants" : "",
      "Disposition" : 1
    },
    "Zenistar" : {
      "Variants" : "",
      "Disposition" : 1
    },
    "Ack_&_Brunt" : {
      "Variants" : "",
      "Disposition" : 2
    },
    "Broken_War" : {
      "Variants" : "",
      "Disposition" : 2
    },
    "Dual_Kamas" : {
      "Variants" : "Prime",
      "Disposition" : 2
    },
    "Jat_Kittag" : {
      "Variants" : "",
      "Disposition" : 2
    },
    "Sydon" : {
      "Variants" : "Vaykor",
      "Disposition" : 2
    },
    "Arca_Titron" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Boltace" : {
      "Variants" : "Telos",
      "Disposition" : 3
    },
    "Cassowar" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Dex_Dakra" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Dual_Cleavers" : {
      "Variants" : "Prisma",
      "Disposition" : 3
    },
    "Endura" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Fragor" : {
      "Variants" : "Prime",
      "Disposition" : 3
    },
    "Gunsen" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Heliocor" : {
      "Variants" : "Synoid",
      "Disposition" : 3
    },
    "Twin_Krohkur" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Magistar" : {
      "Variants" : "Sancti",
      "Disposition" : 3
    },
    "Mios" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Obex" : {
      "Variants" : "Prisma",
      "Disposition" : 3
    },
    "Ohma" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Scindo" : {
      "Variants" : "Prime",
      "Disposition" : 3
    },
    "Silva_&_Aegis" : {
      "Variants" : "Prime",
      "Disposition" : 3
    },
    "Bo" : {
      "Variants" : "Mk1, Prime",
      "Disposition" : 4
    },
    "Broken_Scepter" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Caustacyst" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Dakra_Prime" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Dark_Split-Sword" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Destreza" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Dual_Ichor" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Glaive" : {
      "Variants" : "Prime",
      "Disposition" : 4
    },
    "Karyst" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Kesheg" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Krohkur" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Mire" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Nami_Skyla" : {
      "Variants" : "Prime",
      "Disposition" : 4
    },
    "Orvius" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Prova" : {
      "Variants" : "Vandal",
      "Disposition" : 4
    },
    "Reaper_Prime" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Redeemer" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Sarpa" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Scoliac" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Sheev" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Skana" : {
      "Variants" : "Prime, Prisma",
      "Disposition" : 4
    },
    "Twin_Basolk" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Volnus" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Amphis" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Anku" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Ankyros" : {
      "Variants" : "Prime",
      "Disposition" : 5
    },
    "Ceramic_Dagger" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Cerata" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Cronus" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Dark_Sword" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Dragon_Nikana" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Dual_Ether" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Dual_Heat_Swords" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Dual_Raza" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Dual_Skana" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Dual_Zoren" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Ether_Daggers" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Ether_Reaper" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Ether_Sword" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Fang" : {
      "Variants" : "Prime",
      "Disposition" : 5
    },
    "Furax" : {
      "Variants" : "Mk1, Wraith",
      "Disposition" : 5
    },
    "Gazal_Machete" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Gram" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Halikar" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Hate" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Heat_Dagger" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Heat_Sword" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Jaw_Sword" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Kama" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Kestrel" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Kogake" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Kronen" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Lacera" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Machete" : {
      "Variants" : "Wraith",
      "Disposition" : 5
    },
    "Nami_Solo" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Ninkondi" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Okina" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Pangolin_Sword" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Plasma_Sword" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Ripkas" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Serro" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Shaku" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Sibear" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Tekko" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Tipedo" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Tonbo" : {
      "Variants" : "",
      "Disposition" : 5
    }
  },
  "Sentinel" : {
    "Artax" : {
      "Variants" : "",
      "Disposition" : 3
    },
    "Deconstructor" : {
      "Variants" : "Prime",
      "Disposition" : 3
    },
    "Sweeper" : {
      "Variants" : "Prime",
      "Disposition" : 3
    },
    "Laser_Rifle" : {
      "Variants" : "Prime",
      "Disposition" : 4
    },
    "Vulklok" : {
      "Variants" : "",
      "Disposition" : 4
    },
    "Burst_Laser" : {
      "Variants" : "Prisma",
      "Disposition" : 5
    },
    "Deth_Machine_Rifle" : {
      "Variants" : "",
      "Disposition" : 5
    },
    "Stinger" : {
      "Variants" : "",
      "Disposition" : 5
    }
  }
};











document.addEventListener("DOMContentLoaded", initEventListeners);

function initEventListeners()
{
	var mobilemenu = document.getElementById("navmobile");
	mobilemenu.addEventListener("click", function()
	{
		toggleMobileMenu(mobilemenu);
	});
}

function toggleMobileMenu(mobilemenu)
{	
	if(mobilemenu.classList.contains("showmenu"))
	{
		mobilemenu.classList.remove("showmenu");
	}
	else
	{
		mobilemenu.classList.add("showmenu");
	}
}

function initCreator()
{
  var creator = document.getElementById("creator");
  var preview = document.getElementById("previewriven");
  
  var type = document.getElementById("weapontype");
  var weapon = document.getElementById("weapon");
  var selectedPolarity = document.getElementById("polarity");
  var polarities = document.getElementsByClassName("polarity");
  var slider = document.getElementsByClassName("slider");
  var modSlider = document.getElementById("rankslider");
  var mrSlider = document.getElementById("mrslider");
  var createButton = document.getElementById("createriven");
  var isVeiled = document.getElementById("veiled");
  var posStats = document.getElementsByClassName("posStats")[0];
  var hasNegative = document.getElementById("negative");
  
  var maxWidth = 260;
  
  /* EVENTS */
  selectedPolarity.addEventListener("change", function()
  {
    selectedPolarity.style.backgroundImage = "url(\"/_modules/riven/img/" + selectedPolarity.options[selectedPolarity.selectedIndex].value + ".png\")";
  });
  type.addEventListener("change", function()
  {
    if(validSelect(type.value) && !isVeiled.checked)
    {
      listWeapons(capitalizeFirst(type.value));
      listStats(capitalizeFirst(type.value));
    }
  });
  for(var i = 0; i < slider.length; i++)
  {
    slider[i].addEventListener("input", function()
    {
      this.getElementsByClassName("sliderValue")[0].innerHTML = this.getElementsByClassName("sliderInput")[0].value;
    });
  }
  posStats.addEventListener("input", function()
  {
    generateNames(posStats);
  });
  creator.addEventListener("input", function()
  {
    var rank = parseInt(document.getElementById("rankslider").value);
    var rerolls = parseInt(document.getElementById("rerollinput").value);
    var mr = parseInt(document.getElementById("mrslider").value);
    var wtype = capitalizeFirst(type.value);
    var weapon = capitalizeFirst(document.getElementById("weapon").value);
    var polarity = selectedPolarity.value;
    var firstStat = [document.getElementById("firstStat").getElementsByTagName("select")[0].value, document.getElementById("firstStat").getElementsByTagName("input")[0].value];
    var secondStat = [document.getElementById("secondStat").getElementsByTagName("select")[0].value, document.getElementById("secondStat").getElementsByTagName("input")[0].value];
    var thirdStat = [document.getElementById("thirdStat").getElementsByTagName("select")[0].value, document.getElementById("thirdStat").getElementsByTagName("input")[0].value];
    var negStat = [document.getElementById("negStat").getElementsByTagName("select")[0].value, document.getElementById("negStat").getElementsByTagName("input")[0].value];
    var stats = [firstStat,secondStat,thirdStat];
    var title = document.getElementById("namepicker").value;
    
    if(!isVeiled.checked)
      createRiven(preview, rank, wtype, weapon, title, polarity, stats, negStat, mr, rerolls);
    else
      createRiven(preview, -1, wtype); 
  }); 
  isVeiled.checked = false;
  isVeiled.addEventListener("click", function()
  {
    toggleUnveiled(isVeiled, type);
  });
  createButton.addEventListener("click", validateRiven);
  
  
  /* IMPORT HANDLING */
  if(typeof importJSON != "undefined")
  {
	  type.value = getWeaponType(importJSON.weaponData);
	  trigger(type, "change");
	  weapon.value = importJSON.weaponData;
	  
	  var positives = Object.keys(importJSON.Positives).length;
	  var stat = document.getElementById("firstStat");
	  stat.getElementsByTagName("select")[0].value = Object.keys(importJSON.Positives)[0];
	  stat.getElementsByTagName("input")[0].value = importJSON.Positives[Object.keys(importJSON.Positives)[0]];
	  var stat = document.getElementById("secondStat");
	  stat.getElementsByTagName("select")[0].value = Object.keys(importJSON.Positives)[1];
	  stat.getElementsByTagName("input")[0].value = importJSON.Positives[Object.keys(importJSON.Positives)[1]];
	  if(positives > 2)
	  {
		  var stat = document.getElementById("thirdStat");
		  stat.getElementsByTagName("select")[0].value = Object.keys(importJSON.Positives)[2];
		  stat.getElementsByTagName("input")[0].value = importJSON.Positives[Object.keys(importJSON.Positives)[2]];
	  }
	  
	  
	  
	  
	  if(importJSON.hasOwnProperty('Negatives'))
	  {
		  var stat = document.getElementById("negStat");
		  stat.getElementsByTagName("select")[0].value = Object.keys(importJSON.Negatives)[0];
		  stat.getElementsByTagName("input")[0].value = importJSON.Negatives[Object.keys(importJSON.Negatives)[0]];
	  }
	  
	  // preview refresh and names
	  trigger(posStats, "input");
	  trigger(creator, "input");
  }
}

function toggleUnveiled(checkbox, type)
{
  var unveiledFields = document.getElementsByClassName("veil");
  var halfField = document.getElementsByClassName("half")[0];
	for(var i = 0; i < unveiledFields.length; i++)
	{
		if(unveiledFields[i].classList.contains("hideField"))
		{
			unveiledFields[i].classList.remove("hideField");
			halfField.classList.remove("ratherFull");
		} else {
			unveiledFields[i].classList.add("hideField");
			halfField.classList.add("ratherFull");
		}
	}
  if(checkbox.checked)
  {
    type.innerHTML = "<option selected disabled>- please select -</option>"
                    +"<option value=\"rifle\">Rifle Riven Mod</option>"
                    +"<option value=\"shotgun\">Shotgun Riven Mod</option>"
                    +"<option value=\"pistol\">Pistol Riven Mod</option>"
                    +"<option value=\"melee\">Melee Riven Mod</option>";
  }
  else
  {
    type.innerHTML = "<option selected disabled>- please select -</option>"
                    +"<option value=\"Primary\">Primary</option>"
                    +"<option value=\"Secondary\">Secondary</option>"
                    +"<option value=\"Melee\">Melee</option>"
                    +"<option value=\"Sentinel\">Sentinel</option>";
  }
  
  resetValidation();
}

function createRiven(container, rank, wtype, weapon, name, polarity, posstats, negstat, mr, rerolls)
{
  wtype = capitalizeFirst(wtype);
  var base = 
  "<h1>???</h1>"
  +"<h2>"+ wtype +" Riven Mod</h2>"
  +"<ul>"
  +"<li><br></li>"
  +"<li>You will need to prove yourself before I reveal the beauty within this work.</li>"
  +"</ul>"
  +"<h3 id=\"mr\"><span id=\"rivenveiled\">VEILED</span></h3><h3 id=\"rerolls\"></h3>";
  container.innerHTML = base;
  
  if(rank > -1)
  {
    rank += 10;
    container.getElementsByTagName("h1")[0].innerHTML = rank;
    container.getElementsByTagName("h1")[0].style.backgroundImage = "url(\"/_modules/riven/img/" + polarity + "_c.png\")";
    container.getElementsByTagName("h2")[0].innerHTML = weapon.replaceAll("_", " ") + " " + name;
    container.getElementsByTagName("h3")[0].innerHTML = "MR "+mr;
    container.getElementsByTagName("h3")[1].innerHTML = "<img id=\"rerollicon\" src=\"/_modules/riven/img/rerolls_c.png\">"+String(rerolls);
    var statContainer = container.getElementsByTagName("ul")[0];
    statContainer.innerHTML = "";
    for( var i = 0; i < posstats.length; i++)
    {
      if(statsData.hasOwnProperty(posstats[i][0]))
      {
        var icon = "";
        if(statsData[posstats[i][0]]["IconURL"] != "")
          icon = "<img src=\"/_modules/riven/img/"+statsData[posstats[i][0]]["IconURL"]+"\">";
        if("MeleeDesc" in statsData[posstats[i][0]] && wtype == "Melee")
          statContainer.innerHTML += "<li>" + statsData[posstats[i][0]]["Pre"] + posstats[i][1] + statsData[posstats[i][0]]["Unit"] + " " + icon + statsData[posstats[i][0]]["MeleeDesc"] + "</li>";
        else
          statContainer.innerHTML += "<li>" + statsData[posstats[i][0]]["Pre"] + posstats[i][1] + statsData[posstats[i][0]]["Unit"] + " " + icon + statsData[posstats[i][0]]["Desc"] + "</li>";
      }
    }
    if(statsData.hasOwnProperty(negstat[0]))
    {
      var icon = "";
      if(statsData[negstat[0]]["IconURL"] != "")
        icon = "<img src=\"/_modules/riven/img/"+statsData[negstat[0]]["IconURL"]+"\">";
      if("MeleeDesc" in statsData[negstat[0]] && wtype == "Melee")
        statContainer.innerHTML += "<li>" + invertPre(statsData[negstat[0]]["Pre"]) + negstat[1] + statsData[negstat[0]]["Unit"] + " " + icon + statsData[negstat[0]]["MeleeDesc"] + "</li>";
      else
        statContainer.innerHTML += "<li>" + invertPre(statsData[negstat[0]]["Pre"]) + negstat[1] + statsData[negstat[0]]["Unit"] + " " + icon + statsData[negstat[0]]["Desc"] + "</li>";
    }
  }
    var title = container.getElementsByTagName("h2")[0];
    resizeTitle(title);
}

function listStats(wType)
{
  allStats = Object.keys(statsData);
  statList = [];
  htmlContent = "";
  if(wType == "Melee" || wType == "Sentinel")
  {
    for(var i = 0; i < allStats.length; i++)
    {
		statList.push([statsData[allStats[i]]["Name"], allStats[i]]);
    }
  }
  else
  {
    for(var i = 0; i < allStats.length; i++)
    {
		if(statsData[allStats[i]]["MeleeOnly"] == false)
			statList.push([statsData[allStats[i]]["Name"], allStats[i]]);
    }
  }
  
  statList.sort();
  for(var i = 0; i < statList.length; i++)
  {
      htmlContent += "<option value=\"" + statList[i][1] + "\">" + statList[i][0] + "</option>";
  }
  
  document.getElementById("firstStat").getElementsByTagName("select")[0].innerHTML = "<option selected disabled>- please select -</option>" + htmlContent;
  document.getElementById("secondStat").getElementsByTagName("select")[0].innerHTML = "<option selected disabled>- please select -</option>" + htmlContent;
  document.getElementById("thirdStat").getElementsByTagName("select")[0].innerHTML = "<option value=\"\" selected>- none -</option>" + htmlContent;
  document.getElementById("negStat").getElementsByTagName("select")[0].innerHTML = "<option value=\"\" selected>- none -</option>" + htmlContent;
}

function listWeapons(wType)
{
  weapon.innerHTML = "<option selected disabled>- select Weapon -</option>";
  
  var list = Object.keys(weaponData[wType]).sort();
  
  for(var i = 0; i < list.length; i++)
  {
    weapon.innerHTML += "<option value=" + list[i] + ">" + list[i].replaceAll("_", " ") + "</option>";
  }
}

function generateNames(obj)
{
  var selects = obj.getElementsByTagName("select");
  var selected = [];
  var prefixes = [];
  var suffixes = [];
  var results = [];
  for(var i = 0; i < selects.length; i++)
  {
    if(statsData.hasOwnProperty(selects[i].value))
    {
      selected.push(selects[i].value);
    }
  }
  for(var i = 0; i < selected.length; i++)
  {
    prefixes.push(statsData[selected[i]]["Prefix"]);
    suffixes.push(statsData[selected[i]]["Suffix"]);
  }
  if(selected.length > 2)
  {
    results.push(prefixes[0]+"-"+prefixes[1]+suffixes[2]);
    results.push(prefixes[0]+"-"+prefixes[2]+suffixes[1]);
    results.push(prefixes[1]+"-"+prefixes[0]+suffixes[2]);
    results.push(prefixes[1]+"-"+prefixes[2]+suffixes[0]);
    results.push(prefixes[2]+"-"+prefixes[0]+suffixes[1]);
    results.push(prefixes[2]+"-"+prefixes[1]+suffixes[0]);
  }
  else if(selected.length == 2)
  {
    results.push(prefixes[0]+suffixes[1]);
    results.push(prefixes[1]+suffixes[0]);
  }
  
  var namepicker = document.getElementById("namepicker");
  namepicker.innerHTML = "<option selected disabled>- select Name -<option translate=\"no\" class=\"notranslate\">" + results.join("<option>");
}

function resizeTitle(obj)
{
  var maxWidth = 240;
  var ratioX = 0.9;
  var ratioY = 1;
  var curWidth = obj.getBoundingClientRect().width;
  
  while(curWidth > maxWidth && ratioX > 0.5)
  {
    obj.style.transform = "scale("+(ratioX)+","+(ratioY)+")";
    ratioX = ratioX*0.96;
    ratioY = ratioY*0.99;
    curWidth = obj.getBoundingClientRect().width;
  }    
}

function checkSize(obj)
{
  
}

function invertPre(pre)
{
  if(pre.indexOf("+") > -1)
    return pre.replace("+", "-");
  else
    return pre.replace("-", "+");
}

function validSelect(value)
{
  if(value.indexOf("- ") > -1 || value.indexOf(" -") > -1 || value == "")
    return false;
  else
    return true;
}

function validName(name)
{
  if(name.length >= 3 && name.length <= 24)
    return !/[^\w\-\.]/.test(name);
  else
    return false;
}

function getWeaponType(wname)
{
	var list = Object.keys(weaponData).sort();

	for(var i = 0; i < list.length; i++)
	{
		if(weaponData[list[i]].hasOwnProperty(wname))
			return list[i];
	}	
	
	return "";
}

function getCumulativeKuva(rerolls)
{
  var amount = 0;
  while(rerolls > 0)
  {
    rerolls--;
    amount += getKuvaCost(rerolls);
  }
  return amount;
}

function getKuvaCost(rerolls)
{
  var amount;
  
  switch(rerolls) 
  {
    case 0 : amount = 900; break;
    case 1 : amount = 1000; break;
    case 2 : amount = 1200; break;
    case 3 : amount = 1400; break;
    case 4 : amount = 1700; break;
    case 5 : amount = 2000; break;
    case 6 : amount = 2350; break;
    case 7 : amount = 2750; break;
    case 8 : amount = 3150; break;
    default: amount = 3500;
  }
  return amount;
}

function validateRiven()
{
  var form = document.forms["rivenCreation"];
  
  var veiled = form["veiled"].checked;
  var type = form["type"].value;
  
  if(!veiled)
  {
    var weapon = form["weapon"].value;
    var pstats = [[form["stat1"].value,form["stat1amount"].value],[form["stat2"].value,form["stat2amount"].value],[form["stat3"].value,form["stat3amount"].value]]
    var nstat = [form["stat4"].value,form["stat4amount"].value];
    var name = form["name"].value;
    
    if(form["rerolls"].value == "")
      form["rerolls"].value = 0;
    
    form["rerolls"].value = parseInt(form["rerolls"].value);
    
    if(validSelect(type))
      form["type"].setCustomValidity("");
    else
      form["type"].setCustomValidity("Please specify the type.");
    
    if(validSelect(weapon))
      form["weapon"].setCustomValidity("");
    else
      form["weapon"].setCustomValidity("Please select a weapon.");
    
    
    for(var i = 0; i < 3; i++)
    {
      var current = "stat"+(i+1);
      if(validSelect(pstats[i][0]) || i == 2)
      {
        form[current].setCustomValidity("");
        if(pstats[i][1] <= 0 && validSelect(pstats[i][0]))
          form[current+"amount"].setCustomValidity("Please enter a valid value.");
        else
          form[current+"amount"].setCustomValidity("");
      }
      else
        form[current].setCustomValidity("Please select this stat.");
    }
    
    if(validSelect(nstat[0]))
    {
      form["stat4amount"].setCustomValidity("");
      if(nstat[1] <= 0)
        form["stat4amount"].setCustomValidity("Please enter a valid value.");
    }
    else
      form["stat4amount"].setCustomValidity("");
    
    if(validSelect(name))
      form["name"].setCustomValidity("");
    else
      form["name"].setCustomValidity("Please choose a name.");
    
    
  }
  else
  {
    if(!validSelect(type))
    {
      form["type"].setCustomValidity("Please specify the type.");
    }
    else
      form["type"].setCustomValidity("");
  }
}

function validateFinal()
{
  var form = document.forms["rivenFinalizer"];
  var playername = form["playername"].value;
  var price = form["platprice"].value;
  if(validName(playername))
    form["playername"].setCustomValidity("");
  else
    form["playername"].setCustomValidity("Your name needs to be 3-24 alphanumeric characters long.");
    
}

function resetValidation()
{
  var form = document.forms["rivenCreation"];
  for(var i = 0; i < form.length; i++)
  {
    form[i].setCustomValidity("");
  }
}

function finalizeRiven(veiled, type, weapon, title, stats, negStat, polarity, rerolls, mastery, rank)
{
  var container = document.getElementById("creator");
  var preview = document.getElementById("previewriven");
  var sendbutton = document.getElementById("sellriven");
  document.getElementById("creator").style.display = "none";
  document.getElementById("finalizer").style.display = "block";
  
  sendbutton.addEventListener("click", validateFinal);
  
  type = capitalizeFirst(type);
  
  if(veiled)
    createRiven(preview, -1, type); 
  else
    createRiven(preview, rank, type, weapon, title, polarity, stats, negStat, mastery, rerolls);
}
  
function loginRiven(user)
{
  var info = document.getElementById("riveninfo");
  var wrapper = document.getElementById("rivencreator");
  
  if(info != null && wrapper != null)
  {
    wrapper = wrapper.parentElement;
    if(user && userIGN != "")
    {
      info.classList.add("hide");
      wrapper.classList.remove("hide");
    }
    else
    {
      info.classList.remove("hide"); 
      wrapper.classList.add("hide");
    }
  }
  
  setIGN();
  
  var userid = document.getElementById("userid");
  
  if(userid != null)
  {
    userid.value = user.uid;
  }
}

function rivenSuccess()
{
  window.location.href = "/sell";
}


function openSettings()
{
  document.getElementById("settingsFrame").style.width = "200px";
  document.getElementById("wrapper").style.marginLeft = "200px";
  document.getElementById("navwrapper").getElementsByTagName("ul")[0].style.marginLeft = "250px";
  settingsOpened = true;
}

function closeSettings()
{
  document.getElementById("settingsFrame").style.width = "0";
  document.getElementById("wrapper").style.marginLeft = "0";
  document.getElementById("navwrapper").getElementsByTagName("ul")[0].style.marginLeft = "170px";
  settingsOpened = false;
} 


















</script>




    
	</head>
	<!-- END OF HEAD -->
    
    <!-- BODY -->
	<body>
    
  <!-- SETTINGS -->
  <div id="settingsFrame" class="sideframe">
    <a href="javascript:void(0)" class="closeButton" onclick="closeSettings()">&times;</a>
        <form id="settingsForm" name="settings" action="" method="post">
    <ul>
    <li><label for="settingsIGN">Ingame Name</label><input type="text" id="settingsIGN" name="ign" placeholder="3-24 Alphanumeric" maxlength=24 value="">    
    </li>
    <li><label for="settingsPlatform">Platform</label>
      <select id="settingsPlatform" name="platform">
      <option selected value="PC">PC</option>
      <option value="XB1">XB1</option>
      <option value="PS4">PS4</option>
      </select>    
    </li>
    <li><label for="settingsLang">Language</label><input id="settignsLang" type="text" placeholder="N/A" disabled>    
    </li>
    
    <li>
      <input id="savesettings" type="submit" name="save" value="Save">
    </li>
    <li>
      <input type="hidden" name="userid" id="settingsUID" value="">
      </li>
    </ul>
    </form>
    <br>
    <center>- More Coming soon -</center>
      </div>

  <!-- END OF SETTINGS -->
  
  <div id="background">
  </div>
		<div id="wrapper">
	<!-- NAV -->
			<nav id="navi">
				<div id="navwrapper">
					<div id="navmobile"><i class="material-icons">menu</i></div>
					<ul>
						<li class="item"><a href="/"><i class="material-icons">public</i>Home</a></li><li class="item"><a href="/news"><i class="material-icons">whatshot</i>News</a></li><li class="item"><a href="/list"><i class="material-icons">line_weight</i>Riven List</a></li><li class="item"><a href="/auctions"><i class="material-icons">gavel</i>Auctions</a></li><li class="item"><a href="/sell"><i class="material-icons">unarchive</i>Sell</a></li>					</ul>
					<div id="controls">
						<div id="session"><div class="loader"></div></div> 
<button id="loginButton">Sign in</button>
<button id="logoutButton" class="hide">Sign out</button>
<button id="settings" class="hide"><i class="material-icons">settings</i></button>
<div class="onlinestatus hide"><form name="activityToggle" action="" method="post">
<input type="checkbox" id="settingsIngame" name="activity"><label for="settingsIngame"></label>
</form></div>
    
<div id="loginselect">
<button class="signin google">Sign in with Google</button>
<button class="signin twitter">Sign in with Twitter</button>
<button class="signin facebook">Sign in with Facebook</button>
<button class="signin github">Sign in with Github</button>
<!--<button class="signin steam">Sign in with Steam</button>-->
</div>					</div>
				</div>
			</nav>
	<!-- END OF NAV -->
  
			
    <!-- HEADER -->
			<div id="header">
				<div id="logo"></div>
				<a href="https://Patreon.com/RivenMarket" target="_blank"><div id="featured"><h3>Community Featured:</h3>Support us, on Patreon!</div></a>
				<div id="slogan">
						<div class="header fadeSlogan visible"><h1>Current version: v1.2.4 [BETA]</h1></div>
						<div class="header fadeSlogan hidden"><a href="https://discord.gg/pCKUra4" target="_blank"><h1>Bugs, Suggestions, Clem?</h1><h2>Join our Discord!</h2></a></div>
						<div class="header fadeSlogan hidden"><a href="https://reddit.com/r/RivenMarket" target="_blank"><h1>Found a Bug?</h1><h2>Post it on reddit!</h2></a></div>
						<div class="header fadeSlogan fading"><h1>Patreon Supporter:</h1><h3>EvisceratedFetus, Zachariasz J. Müller, Ryan, Silv0rX</h3></div>
				</div>
			</div>
    <!-- END OF HEADER -->
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
		
<div id="content"><span><h1>Welcome!</h1></span><hr><span><h3>For planned features, see below.</h3></span><h3><a href="https://reddit.com/r/RivenMarket" target="_blank">Reddit<i class="material-icons">call_made</i></a>  <a href="https://discord.gg/pCKUra4" target="_blank">Discord<i class="material-icons">call_made</i></a>  <a href="https://Patreon.com/RivenMarket" target="_blank">Patreon<i class="material-icons">call_made</i></a>  <a href="https://www.facebook.com/RivenMarket/" target="_blank">Facebook<i class="material-icons">call_made</i></a></h3><br><div class="flex" id="riven_option"> <button class="bigbutton" id="riven_list" onclick="location.href='/list'" type="button"><i class="material-icons">line_weight</i><br>Browse</button><button class="bigbutton" id="riven_buy" onclick="location.href='/search'" type="button"><i class="material-icons">find_replace</i><br>Search</button><button class="bigbutton" id="riven_sell" onclick="location.href='/sell'" type="button"><i class="material-icons">gavel</i><br>Sell</button></div><hr><div id="roadmap"><h1>Planned Features</h1><h3>Most or even all of the features below are going to be implemented at some point in some way. Please note that this list is ordered by priority, not by implementation date.</h3><ul><li><h3>Auction</h3>If a Weapon is new or you don't want to set a strict price, but still want to get the most out of your riven, auctioning it will let you fetch the best price.<br>Priority: High</li><li><h3>Price History</h3>Setting a price is difficult with how Rivens work, but a quick compare and recent overall popularity and price history for that weapon and possibly stat combinations will help to decide on a fair price much more quickly.<br>Priority: High</li><li><hr></li><li><h3>Search</h3>Finding THE Riven you really want, by querying for every aspect of a riven.<br>Priority: Medium</li><li><h3>Calculator</h3>Ever wanted to see how a Riven looks when ranked up, without spending the Endo or Credits? This feature will let you experiment with that.<br>Priority: Medium</li><li><h3>Riven Details</h3>Endo value, spent Kuva, DPS increase and more will be added to every Riven and can be used to quickly gauge a Rivens base value.<br>Priority: Medium</li><li><h3>Advanced Filter</h3>Filtering rivens is nice, but we want to implement features that will help you compare rivens right in the list like "see all stats maxed" and more.<br>Priority: Medium</li><li><hr></li><li><h3>Languages</h3>Currently you can only view the website in English, but you will be able to change that in the future.<br>Priority: Low</li><li><h3>Statistics</h3>Do you want to get in-depth with Riven selling, buying or reselling? Look no further as this feature will give you a lot of information about market trends, popular stats and overviews about the current state of riven trading.<br>Priority: Low</li><li><h3>Linking</h3>Link your Steam and/or Warframe accounts to enable even more features!<br>Priority: Low</li><li><h3>Deal Alerts!</h3>Get alerted as soon as someone puts up Rivens that you are interested in.<br>Priority: Low</li><li><h3>QoL Improvements</h3>Everyone loves QoL (as that is kind of the point), so expect tons of Quality of Life changes towards all aspects of the site.<br>Priority: Low</li><li><hr></li><li><h3>So Much More!</h3>Just as the title suggests, this is really just the tip of the Iceberg and this list will continue to grow, if you have any idea and/or suggestion, make sure to let us know!</li><li><hr></li><li><h3>(Mostly) Finished:</h3></li><li><h3><i class="material-icons">done</i>Responsive Design</h3></li><li><h3><i class="material-icons">done</i>Activity</h3></li><li><h3><i class="material-icons">done</i>A Dark Theme / Theme Switcher</h3></li><li><h3><i class="material-icons">done</i>Login Methods</h3></li><li><h3><i class="material-icons">done</i>News</h3></li><li><h3><i class="material-icons">done</i>Platform</h3></li><li><h3><i class="material-icons">done</i>NO F* ADS</h3></li></ul></div></div>
	
	<footer>
    <ul id="footer">
      <li id="themes">Themes
      <ul class="dropdown">
        <li class="theme"><a href="javascript:window.location.href=window.location.href" onClick="setCookie('theme','default','30')">Default</a></li>
        <li class="theme"><a href="javascript:window.location.href=window.location.href" onClick="setCookie('theme','dark','30')">Dark</a></li>
        <!--<li class="theme"><a href="/" onClick="setCookie('theme','simple','30')">Simple</a></li>-->
      </ul></li>
      <!--
      <li id="languages">Language
      <ul class="dropdown">
        <li class="language">English</li>
        <li class="language">Deutsch</li>
        <li class="language">Français</li>
        <li class="language">Español</li>
        <li class="language">Pоссийский</li>
      </ul></li>
      -->
      <li id="socials">Social
      <ul class="dropdown">
        <li class="social"><a href="https://www.patreon.com/RivenMarket" target="_blank">Patreon</a></li>
        <li class="social"><a href="https://www.reddit.com/r/RivenMarket" target="_blank">Reddit</a></li>
        <li class="social"><a href="https://discord.gg/pCKUra4" target="_blank">Discord</a></li>
        <!--<li class="social">Contact</li>-->
        <!--<li class="social">Feedback</li>-->
        <!--<li class="social">Report Bug</li>-->
        <!--<li class="social">Report User</li>-->
      </ul></li>
      <li id="abouts">About
      <ul class="dropdown">
        <li class="about"><a href="/legal">Legal Stuff</a></li>
        <li class="about"><a href="/about">Riven.market</a></li>
        <li class="about"><a href="https://warframe.com" target="_blank">Warframe (TM)</a></li>
        <!--<li class="about">Sitemap</li>-->
        <li class="about"><a href="/help">F.A.Q.</a></li>
      </ul></li>
	  <li id="privacy">
		<a href="/privacy">Privacy Policy</a>
	  </li>
    </ul>
	</footer>
	<!-- END OF FOOTER -->
  
  
  <!-- SECONDARY SCRIPTS -->
  <script src="https://www.gstatic.com/firebasejs/4.9.1/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/4.9.1/firebase-auth.js"></script>
  <script src="/_js/auth.js" defer></script>
	
	<!-- CHAT -->
	<script>
    function openConversation(target)
{
	var chattoggle = document.getElementById("chat").getElementsByTagName("input")[0];
	chattoggle.checked = "checked";
	var receiver = target.parentNode.parentNode.parentNode.dataset.user;
	var receivername = target.parentNode.parentNode.parentNode.getElementsByClassName("seller")[0].innerText.trim();
	
	var newdiv = document.createElement("DIV");
	newdiv.classList.add("chat-contact")
	newdiv.innerHTML = '<form name="chat" method="post">'
					+'<span>Contact '+receivername+'</span>'
					+'<input type="text" name="message" placeholder="type your text...">'
					+'<input type="hidden" name="receiver" value="'+receiver+'">'
					+'<button type="submit">send</button>'
				+'</form>';
	
	// document.getElementById("chat-box").appendChild(newdiv);
	document.getElementById("chat-box").insertBefore(newdiv,document.getElementById("chat-box").firstChild);
}</script>
	<div id="chat">
		<label for="chat-chk" class=""><i class="material-icons">message</i></label>
		<input type="checkbox" id="chat-chk">
		
		<div id="chat-box">
					</div>
	</div>
	
	<!-- END CHAT --> 
	
	  
  <!-- SECONDARY STYLES -->
	</body>	
	<!-- END OF BODY -->
</html>
<!-- END OF DOCUMENT -->