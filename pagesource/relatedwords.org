<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <title>Related Words - Find Words Related to Another Word</title>
  <meta name="description" content="">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link rel="icon" type="image/png" href="/img/favicon.png" />

  <link href='https://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>
  <link href='/css/index.css' rel='stylesheet' type='text/css'>

</head>

<body>
  <!-- this is so scrapers get the right preview image -->
  <img style="display:none" src="/img/logo.png" alt="Related Words Logo" />

  <div id="main">
    <div class="central">

      <div class="header-area">
        <div class="title-area">
          <div id="logo"><a style="overflow:hidden; width:100%; height:100%;position: absolute; top: 0; left: 0;" href="http://relatedwords.org"><span style="position:relative; top:-100px;">related words</span></a></div>
          <div id="title-wrapper"><h1 class="title">Related Words</h1></div>
        </div>
        <div class="search-area">
          <div class="search-wrapper">
            <input id="query" type="text" placeholder="Type a word or short phrase..."/>
            <button onclick="clearSearch();" id="clear-search-button"><div style="transform: translate(0,-0.1rem);">âœ•</div></button>
            <button onclick="executeSearch();" id="search-button"><div style="transform: translate(0,-0.1rem);"><img src="/img/search-icon.png" style="height:1.3em; -webkit-filter: invert(100%); filter: invert(100%); vertical-align: middle;position: relative; top: 0.05em;" /></div></button>
          </div>

          <div style="color: #888; font-size: 90%; margin-top: 3px;">
            <!--<div style="width: 395px;background-color: #e2e2e2;/* padding: 1em; */display: inline-block;border-radius: 25px;line-height: 40px;height: 40px;">Try <a href="http://reversedictionary.org">ReverseDictionary.org</a> for multi-word queries.</div>-->
            <span>examples:</span>
            <span style="text-decoration:underline; cursor:pointer;" onclick="qs('#query').value=this.innerText; executeSearch();">winter</span>,&nbsp;
            <span style="text-decoration:underline; cursor:pointer;" onclick="qs('#query').value=this.innerText; executeSearch();">understanding</span>,&nbsp;
            <span style="text-decoration:underline; cursor:pointer;" onclick="qs('#query').value=this.innerText; executeSearch();">cloud</span>
          </div>

          <p id="query-subtitle" style="color: #888; width: 80%; max-width: 578px; margin: 0 auto; margin-top: 2rem;">
            <span class="home">This tool helps you find words that are related to a specific word or phrase. Also check out <a href="http://reversedictionary.org" target="_blank">ReverseDictionary.org</a> and <a href="http://describingwords.io" target="_blank">DescribingWords.io</a>.</span>
            <span class="query" style="display:none;">Here are some words that are associated with <b><span class="_word-placeholder_">~term~</span></b>. You can get the definitions of these <span style="display:inline-block;overflow:hidden;width:0;height:0;" data-is-sneaky="yes"><span class="_word-placeholder_">~term~</span> related </span>words by clicking on them. Also check out <a id="describing-words-link" href="http://describingwords.io" target="_blank">describing words for <span class="_word-placeholder_">~term~</span></a> and find more <a id="reverse-dictionary-link" href="http://reversedictionary.org" target="_blank">words related to <span class="_word-placeholder_">~term~</span></a> using ReverseDictionary.org</span>
          </p>
          <p id="word-click-hint" style="display: none; text-align: center; background-color: rgb(226, 226, 226); color:rgb(105, 105, 105); width: 300px;font-weight:bold;margin: 0 auto;margin-top: 2.5rem;text-transform:uppercase;border-radius: 30px;font-size: 17px;line-height: 50px;height: 50px;">Click words for definitions</p>
        </div>
      </div>

      <div id="results-area">
        <div style="display:none;" id="word-loader-gif">
          <div class="spinner">
            <div class="bounce1"></div>
            <div class="bounce2"></div>
            <div class="bounce3"></div>
          </div>
          <p class="loading-message">Our algorithm is scanning multiple databases for related words. Please be patient! :)</p>
        </div>

        <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
        <!-- Related Words - Main -->
        <ins class="adsbygoogle"
             style="display:block"
             data-ad-client="ca-pub-3263838347296949"
             data-ad-slot="1348686402"
             data-ad-format="auto"></ins>
        <script>
        (adsbygoogle = window.adsbygoogle || []).push({});
        </script>

        <div style="display:none;font-size: 1.5rem;margin-top: 4rem;color: #777;" id="message"></div>

        <div style="height: 0; width:200px; position: absolute; left: -8000px;">
          <h1 style="text-align:center;">Words Related to <span class="_word-placeholder_">Another Word</span></h1>
          <p>Below is a list of words related to <b><span class="_word-placeholder_">another word</span></b>. You can click words for definitions. Sorry if there's a few unusual suggestions! The algorithm isn't perfect, but it does a pretty good job for common-ish words. Here's the list of words that are related to <b><span class="_word-placeholder_">another word</span></b>:</p>
        </div>

        <div class="words">
        </div>
        <a style="display:none;" id="result-item-template" href="#" class="item"></a>
      </div>

      <div id="under-results">
        <h2 style="text-align:center; margin-top: 3rem;">Popular Searches</h2>
        <div class="search-ideas special-item-ctn"></div>

        <div style="height: 0; width:200px; position: absolute; left: -8000px;" class="term-description-area">
          <h1 style="text-align:center;">Words Related to <span class="_word-placeholder_">~term~</span></h1>
          <p>As you've probably noticed, words related to "<span class="_word-placeholder_">term</span>" are listed above.<span class="_top-5-placeholder_"></span> Hopefully the generated list of <span class="_word-placeholder_">term</span> related words above suit your needs.</p>
          <p>P.S. There are some problems that I'm aware of, but can't currently fix (because they are out of the scope of this project). The main one is that individual words can have many different senses (meanings), so when you search for a word like <i>mean</i>, the engine doesn't know which definition you're referring to ("bullies are <i>mean</i>" vs. "what do you <i>mean</i>?", etc.), so consider that your search query for words like <span class="_word-placeholder_">term</span> may be a bit ambiguous to the engine in that sense, and the related terms that are returned may reflect this. You might also be wondering: <a id="word-type-link" href="http://wordtype.org" target="_blank">What type of word is <span class="_word-placeholder_">~term~</span></a>?</p>
        </div>

        <div class="about-area">
          <h2 style="text-align:center;">Related Words</h2>
          <p>Related Words runs on several different algorithms which compete to get their results higher in the list. One such algorithm uses <a href="https://en.wikipedia.org/wiki/Word_embedding" target="_blank">word embedding</a> to convert words into many dimensional vectors which represent their meanings. The vectors of the words in your query are compared to a huge database of of pre-computed vectors to find similar words. Another algorithm crawls through <a href="http://conceptnet5.media.mit.edu" target="_blank">Concept Net</a> to find words which have some meaningful relationship with your query. These algorithms, and several more, are what allows Related Words to give you... <i>related</i> words - rather than just direct synonyms.</p>
          <p>As well as finding words related to other words, you can enter phrases and it should give you related words and phrases, so long as the phrase/sentence you entered isn't too long. You will probably get some weird results every now and then - that's just the nature of the engine in its current state.</p>
          <p>Special thanks to the contributors of the open-source code that was used to bring you this list of <span class="_word-placeholder_">term</span> themed words: <a target="_blank" href="https://github.com/Planeshifter">@Planeshifter</a>, <a target="_blank" href="https://github.com/HubSpot">@HubSpot</a>, <a href="http://conceptnet5.media.mit.edu" target="_blank">Concept Net</a>, <a href="https://wordnet.princeton.edu/" target="_blank">WordNet</a>, and <a target="_blank" href="https://github.com/mongodb">@mongodb</a>.</p>
          <p>There is still lots of work to be done to get this to give consistently good results, but I think it's at the stage where it could be useful to people, which is why I released it.</p>
        </div>

        <h2 style="text-align:center; margin-top: 3rem;">Recent Queries</h2>
        <div class="recent-searches special-item-ctn"></div>
      </div>

    </div>

    <!-- scrolll to top button -->
    <button class="scroll-to-top">scroll to top</button>

    <!-- prelaoder -->
    <div style="display:none;">
      <img src='/img/find.png' />
    </div>

  </div>

  <script> var qs = document.querySelector.bind(document); </script>

  <script src="/js/ScrollToPlugin.js"></script>
  <script src="/js/utils.js"></script>

  <link rel="stylesheet" href="/css/drop-theme-arrows-bounce-dark.css" />
  <script src="/js/tether.min.js"></script>
  <script src="/js/drop.min.js"></script>

  <script src="/js/updateView.js"></script>

  <script>

    qs('#query').focus();

    function clearSearch() {
      destroyAllPopups();
      qs('#query').value = '';
      qs("#clear-search-button").style.display = "none";
      qs('#query').focus();
      ScrollToPlugin.scrollVerticalToElement('body', 0);
      qs("#results-area .words").innerHTML = "";

      qs('#query-subtitle').style.display = "";
      qs("#query-subtitle .home").style.display = "";
      qs("#query-subtitle .query").style.display = "none";

      qs('#word-click-hint').style.display = "none";
      qs(".term-description-area").style.display = "";

      history.pushState({}, homepageTitle, "/");
      handlePageLoad();
    }

    function executeSearch() {

      var query = qs('#query').value;
      history.pushState({}, "Words related to "+query+" - Related Words", "/relatedto/"+query);

      // have to call this because popstate isn't triggered by the above statement:
      handlePageLoad();

    }

    var popupInstances = [];
    function hideAllPopups() {
      popupInstances.forEach(function(p) {
        p.close();
      })
    }
    function destroyAllPopups() {
      hideAllPopups();
      try {
        popupInstances.forEach(function(p) {
          p.destroy();
        })
      } catch(e) {
        console.error("This old horse (seems to work fine anyway - maybe causing a memory leak though?):", e);
      }
      popupInstances = [];
    }

    var lastRequest = 0;
    function updateResults() {

      //qs('#query-subtitle').style.display = "none";

      var timeNow = new Date().getTime();
      if(timeNow - lastRequest < 500) {
        // less than 500ms since last request, so ignore this one
        console.error("Request ignored. Too soon after last one.");
        return;
      }
      lastRequest = new Date().getTime();

      var wordsWrapper = qs("#results-area .words");
      wordsWrapper.style.height = wordsWrapper.clientHeight + "px";

      destroyAllPopups();
      wordsWrapper.innerHTML = "";

      qs("#word-loader-gif").style.display = "block";
      qs("#message").style.display = "none";

      var query = qs("#query").value;

      qs("#query-subtitle").style.display = "none";
      queryDatabase(query, function(terms) {

        updateResultsView(query, terms);
        //qs('#word-click-hint').style.display = "none"

        qs("#query-subtitle").style.display = "";
        qs("#query-subtitle .home").style.display = "none";
        qs("#query-subtitle .query").style.display = "";
        qs("#describing-words-link").href = "http://describingwords.io/for/"+query;
        qs("#reverse-dictionary-link").href = "http://reversedictionary.org/wordsfor/"+query;
        qs("#word-type-link").href = "http://wordtype.org/of/"+query;

      });


    }

    var api = "/api/related?term=";
    function queryDatabase(query, callback) {

      var request = new XMLHttpRequest();
      request.open('GET', api+query, true);
      request.onload = function() {
        if (request.status >= 200 && request.status < 400) {
          // Success!
          var terms = JSON.parse(request.responseText);
          callback(terms);

        } else {
          console.error("Reached the serever but something went wrong with the query for related terms.");
          queryDatabase(query, callback);
        }
      };
      request.onerror = function() {
        console.error("Connection error while trying to get related terms.");
      };
      request.send();

    }


    function handlePageLoad() {

      var query = getQueryFromURIPath(location.pathname);

      qs("#query").value = query;

      if(query) { updateResults(); }

      updateStaticView(query);

    }

    // POPULAR SEARCHES:
    var count = 0;
    var max = 48;
    var start = Math.floor(popularSearches.length * Math.random());
    for(var i = start; i < popularSearches.length; i++) {
      var link = document.createElement("a");
      link.innerText = popularSearches[i];
      link.href = "/relatedto/"+encodeURIComponent(popularSearches[i]);
      link.className = "search-link-suggestions";
      qs(".search-ideas").appendChild(link);
      count++;
      if(i === popularSearches.length-1) { i = 0; } //loop back around
      if(count >= max) { break; }
    }

    // RECENT SEACHES:
    var request = new XMLHttpRequest();
    request.open('GET', '/api/recentSearches?num=200', true);
    request.onload = function() {
      if (request.status >= 200 && request.status < 400) {
        // Success!
        var recentSearches = JSON.parse(request.responseText);
        var wrapperDiv = document.createElement('div');
        wrapperDiv.style.cssText = "display: flex; flex-direction: row; flex-wrap: wrap;";
        for(var i = 0; i < recentSearches.length; i++) {
          var link = document.createElement("a");
          link.innerText = recentSearches[i].query;
          link.href = "/relatedto/"+recentSearches[i].query;
          link.className = "search-link-suggestions";
          wrapperDiv.appendChild(link)
        }
        qs(".recent-searches").appendChild(wrapperDiv);

      } else {
        console.error("Reached the serever but something went wrong with the query for recent searches.")
      }
    };
    request.onerror = function() {
      console.error("Connection error while trying to get recent searches");
    };
    request.send();

    handlePageLoad();

  </script>

<script src="/js/eventsInit.js"></script>

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-36798824-14', 'auto');
  ga('send', 'pageview');

</script>

<img style="display:none;" src="/img/popup_loading.gif" />

<div style="position:absolute; left:-8000px; top:-8000px;">
  <p>Here's a list of the sites that I'm currently working on:</p>
  <ul>
    <li><a href="http://reversedictionary.org">reverse dictionary</a> is a website that allows you to find words based on their definition. In other words, it turns sentences (or phrases) into words.<li/>
    <li><a href="http://relatedwords.org">related words</a> helps you find similar words. Give the engine a seed word and it will find a huge list of related words. It allows you to do a broader search than a thesaurus allows.<li/>
    <li><a href="http://describingwords.io">describing words</a> allows you to find adjectives or describing phrases and words for a particular noun or noun phrase. It helps you find inspiration for describing things.<li/>
    <li><a href="http://newsongs.io">new songs</a> is an aggregation of many lists of new songs from around the internet. It inclides lists of new songs from all major genres from hip-hop to classical and everything in between.<li/>
    <li><a href="http://fbemojis.com">facebook emojis</a> is simply a giant list of emojis that can be used on facebook. It is also searchable, so you can quickly find what you're looking for.<li/>
    <li><a href="http://urbanthesaurus.org">urban thesaurus</a> is a thesaurus for slang words. If you're looking for synonyms of a slang word, this website will help you out.<li/>
    <li><a href="http://wordtype.org">word type</a> is a simple tool to query the part-of-speech of a word.<li/>
  </ul>
</div>

</body>
</html>