<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Kotlin 中文文档</title>
<meta name="description" content="Kotlin 中文文档">

<link rel="stylesheet" type="text/css" href="/style.css" />
</head>
<body>

<div id="main">
	<div id="left">
<ul>
<li>
<p><a href="#">准备开始</a></p>
<ul>
<li><a href="/GettingStarted/Basic-Syntax.html">基本语法</a></li>
<li><a href="/GettingStarted/Idioms.html">习惯用语</a></li>
<li><a href="/GettingStarted/Coding-Conventions.html">编码风格</a></li>
</ul>
</li>
<li>
<p><a href="#">基础</a></p>
<ul>
<li><a href="/Basics/Basic-Types.html">基本类型</a></li>
<li><a href="/Basics/Packages.html">包</a></li>
<li><a href="/Basics/Control-Flow.html">控制流</a></li>
<li><a href="/Basics/Returns-and-Jumps.html">返回与跳转</a></li>
</ul>
</li>
<li>
<p><a href="#">类和对象</a></p>
<ul>
<li><a href="/ClassesAndObjects/Classes-and-Inheritance.html">类和继承</a>　</li>
<li><a href="/ClassesAndObjects/Properties-and-fields.html">属性和字段</a>　</li>
<li><a href="/ClassesAndObjects/Interfaces.html">接口</a></li>
<li><a href="/ClassesAndObjects/Visibility-Modifiers.html">可见性修饰词</a></li>
<li><a href="/ClassesAndObjects/Extensions.html">扩展</a></li>
<li><a href="/ClassesAndObjects/Data-Classes.html">数据对象</a></li>
<li><a href="/ClassesAndObjects/Generics.html">泛型</a></li>
<li><a href="/ClassesAndObjects/NestedClasses.html">嵌套类</a></li>
<li><a href="/ClassesAndObjects/EnumClasses.html">枚举类</a></li>
<li><a href="/ClassesAndObjects/ObjectExpressicAndDeclarations.html">对象表达式和声明</a></li>
<li><a href="/ClassesAndObjects/Delegation.html">代理模式</a></li>
<li><a href="/ClassesAndObjects/DelegationProperties.html">代理属性</a></li>
</ul>
</li>
<li>
<p><a href="#">函数和lambda表达式</a></p>
<ul>
<li><a href="/FunctionsAndLambdas/Functions.html">函数</a></li>
<li><a href="/FunctionsAndLambdas/Higher-OrderFunctionsAndLambdas.html">高阶函数和lambda表达式</a></li>
<li><a href="/FunctionsAndLambdas/InlineFunctions.html">内联函数</a></li>
</ul>
</li>
<li>
<p><a href="#">其它</a></p>
<ul>
<li><a href="/Other/Multi-Declarations.html">多重申明</a></li>
<li><a href="/Other/Ranges.html">Ranges</a></li>
<li><a href="/Other/Type-Checks-and-Casts.html">类型检查和自动转换</a></li>
<li><a href="/Other/This-Expression.html">This表达式</a></li>
<li><a href="/Other/Equality.html">等式</a></li>
<li><a href="/Other/Opetator-overloading.html">运算符重载</a></li>
<li><a href="/Other/Null-Safety.html">空安全</a></li>
<li><a href="/Other/Exceptions.html">异常</a></li>
<li><a href="/Other/Annotations.html">注解</a></li>
<li><a href="/Other/Reflection.html">反射</a></li>
<li><a href="/Other/Dynamic-Type.html">动态类型</a></li>
</ul>
</li>
<li>
<p><a href="#">参考</a></p>
<ul>
<li><a href="/Reference/API-Reference.html">API</a></li>
<li><a href="/Reference/Grammar.html">语法</a></li>
</ul>
</li>
<li>
<p><a href="#">互用性</a></p>
<ul>
<li><a href="/Interop/Java-Interop.html">与 java 交互</a></li>
</ul>
</li>
<li>
<p><a href="#">工具</a></p>
<ul>
<li><a href="/Tools/Documenting-Kotlin-Code.html">Kotlin代码文档</a></li>
<li><a href="/Tools/Using-Maven.html">使用Maven</a></li>
<li><a href="/Tools/Using-Ant.html">使用Ant</a></li>
<li><a href="/Tools/Using-Griffon.html">使用Griffon</a></li>
<li><a href="/Tools/Using-Gradle.html">使用Gradle</a>　</li>
</ul>
</li>
<li>
<p><a href="#">FAQ</a></p>
<ul>
<li><a href="/FAQ/Comparison2java.html">与java对比</a></li>
<li><a href="/FAQ/Comparison2Scala.html">与Scala对比</a></li>
</ul>
</li>
<li>
<p><a href="#">Kotlin极简教程</a></p>
<ul>
<li><a href="/chapter/easy_kotlin_chapter_1.html">第1章 Kotlin简介</a></li>
<li><a href="/chapter/chapter2_hello_world_kotlin2js.html">第2章 快速开始：HelloWorld</a></li>
<li><a href="/chapter/chapter3_kotlin_basics.html">第3章 Kotlin语言基础</a></li>
<li><a href="/chapter/chapter4_type_system.html">第4章 基本数据类型与类型系统</a></li>
<li><a href="/chapter/chapter6_generics.html">第6章 泛型</a></li>
<li><a href="/chapter/chatper7_oop.html">第7章 面向对象编程</a></li>
<li><a href="/chapter/chapter8_fp.html">第8章 函数式编程（FP）</a></li>
<li><a href="/chapter/chapter9_coroutines.html">第9章 轻量级线程：协程</a></li>
<li><a href="/chapter/chapter10_interoperability.html">第10章 Kotlin与Java互操作</a></li>
<li><a href="/chapter/chapter11_kotlin_springboot.html">第11章 使用Kotlin集成SpringBoot开发Web服务端</a></li>
<li><a href="/chapter/chapter13_kotlin_android.html">第13章 使用 Kotlin 和 Anko 的Android 开发</a></li>
<li><a href="/chapter/chapter14_kotlin_dsl.html">第14章 使用 Kotlin DSL</a></li>
<li><a href="/chapter/chatper15_net_io_img_crawler.html">第15章 Kotlin 文件IO操作与多线程</a></li>
<li><a href="/chapter/chatper16_kotlin_native_helloworld.html">第16章 使用 Kotlin Native</a></li>
</ul>
</li>
</ul>
	</div>

	<div id="right">
<article class="markdown-body entry-content" itemprop="text">
<div class="entry-content">
						<p><font>This is it. 1.0 is here!</font></p>
<p><font><font class="">It’s been a long and exciting road but we’ve finally reached the first big 1.0, and we’re celebrating the release by also presenting you with the new logo:</font></font></p>
<p></p><center><img src="1_0_Banner.png" margin-left="auto" margin-right="auto" alt="Kotlin" class="alignnone size-full wp-image-3688" width="640" height="320" srcset="1_0_Banner.png" src-orig="1_0_Banner.png" scale="1.5"></center><p></p>
<p><em><font><font>查看有关</font></font><a href="https://www.reddit.com/r/programming/comments/45wcnd/kotlin_10_released_pragmatic_language_for_jvm_and/"><font><font>Reddit</font></font></a><font><font>和</font></font><a href="https://news.ycombinator.com/item?id=11103087"><font><font>Hacker News的讨论</font></font></a></em></p>
<p><span id="more-3507"></span></p>
<h2><font><font>什么是Kotlin？</font></font></h2>
<p><font><font>Kotlin是JVM和Android的实用编程语言，结合了OO和功能特性，专注于</font></font><strong><font><font>互操作性</font></font></strong><font><font>，</font></font><strong><font><font>安全性</font></font></strong><font><font>，</font></font><strong><font><font>清晰度</font></font></strong><font><font>和</font></font><strong><font><font>工具</font></font></strong><font><font>支持。</font></font></p>
<p><font><font>作为通用语言，Kotlin </font></font><strong><font><font>可以在Java工作的地方工作</font></font></strong><font><font>：服务器端应用程序，移动应用程序（Android），桌面应用程序。</font><font>它适用于所有主要的工具和服务，如</font></font></p>
<ul>
<li><font><font>IntelliJ IDEA，Android Studio和Eclipse</font></font></li>
<li><font><font>Maven，Gradle和Ant</font></font></li>
<li><a href="https://spring.io/blog/2016/02/15/developing-spring-boot-applications-with-kotlin"><font><font>Spring Boot </font></font></a><font><font>（Kotlin支持今天发布！）</font></font></li>
<li><font><font>GitHub，Slack甚至Minecraft </font></font><img src="https://i2.wp.com/blog.jetbrains.com/kotlin/wp-includes/images/smilies/simple-smile.png?zoom=1.5&amp;w=640&amp;ssl=1" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;" width="16" height="16" src-orig="https://i2.wp.com/blog.jetbrains.com/kotlin/wp-includes/images/smilies/simple-smile.png?w=640&amp;ssl=1" scale="1.5"></li>
</ul>
<p><font><font>Kotlin的关键重点之一是</font></font><strong><font><font>混合Java + Kotlin项目的</font></font></strong><font><font>互操作性和无缝支持</font><font>，使采用更容易，从而减少了样板代码和更多的类型安全性。</font><font>此外，Kotlin有一个</font></font><strong><font><font>广泛的标准库</font></font></strong><font><font>，使日常任务轻松流畅，同时保持字节码足迹</font></font><a href="http://www.methodscount.com/?lib=org.jetbrains.kotlin%3Akotlin-stdlib%3A1.0.0-rc-1036"><font><font>低</font></font></a><!--(TODO)--><font><font>。</font><font>当然，</font></font><strong><font><font>也可以在Kotlin</font></font></strong><font><font>中</font><strong><font>使用任何Java库</font></strong><font>。</font><font>反之亦然。 </font></font></p>
<h2><font><font>What does pragmatic mean?</font></font></h2>
<p><font><font>了解自己的核心价值观对于任何长期的项目都至关重要。</font><font>如果我选择一个字来描述Kotlin的设计，这将是</font></font><strong><font><font>务实的</font></font></strong><font><font>。</font><font>这就是为什么早期我们说Kotlin对发明或研究不是那么重要。</font><font>我们最终发明了很多东西，但这并不是项目的重点。</font><font>当然，我们正在构建一个</font></font><strong><font><font>防止错误</font></font></strong><font><font>的</font><strong><font>类型系统</font></strong><font>，以及</font></font><strong><font><font>促进代码重用的抽象机制，就像</font></font></strong><font><font>我们</font><strong><font>所在的</font></strong><font>任何人一样。</font><font>但我们（务实）的做法是通过</font></font><strong><font><font>专注于用例</font></font></strong><font><font>来使语言成为一个</font></font><strong><font><font>很好的工具</font></font></strong><font><font>。</font></font></p>
<p><font><font>特别地，这种方法使我们立即</font></font><strong><font><font>引入与现有代码和基础设施的互操作性至关重要</font></font></strong><font><font>的概念</font><font>。</font><font>重新写作世界</font></font><em><font><font>是正确的方式</font></font></em><font><font>，从头开始 - 谁从来没有希望过？</font><font>我做了很多次:)而且，如果不是针对Java互操作，Maven集成，Android兼容性，Kotlin将会更容易设计和开发。</font><font>在许多方面肯定会更加优雅。</font><font>但优雅，虽然高度赞赏，但不是这里</font></font><strong><font><font>的主要目标</font></font></strong><font><font>，</font><strong><font>主要目标是有用的</font></strong><font>。</font><font>而我们的用户不得不重新学习，重新创造，从头开始重新做，越能重复使用，越好。</font></font></p>
<p><font><font>- </font></font><em><font><font>那么，为什么Kotlin没有自己的软件包管理器，还是自己的构建系统？</font></font></em><br><font><font>
- 由于已经有Maven和Gradle，并且重用他们大量的插件对于许多项目至关重要。</font></font><br><font><font>
- </font></font><em><font><font>为什么我们投入大量的时间和精力来制作JDK兼容的收集界面，而从零开始重新设计集合就变得更容易了？</font></font></em><br><font><font>
- 由于吨和吨的Java代码与JDK集合一起工作，并且在边界上转换数据将是一个痛苦。</font></font><br><font><font>
- </font></font><em><font><font>为什么Kotlin支持Java 6字节代码？</font></font></em><br><font><font>
- 因为很多人还在运行Java 6（Android，最引人注目的是Android，而不是Android）。</font></font></p>
<p><font><font>对于我们来说，实用主义是</font></font><strong><font><font>创造用户体验</font></font></strong><font><font>，而不是单纯的语言或图书馆。</font><font>许多语言设计决策是在诸如“这不妨碍增量编译”之类的限制下进行的，“如果这增加了APK方法计数会怎么样？”，“IDE将如何突出显示此类型？”和许多更像这些。</font><font>因此，我们为我们的</font></font><strong><font><font>工具和语言</font></font></strong><font><font>感到自豪</font><font>。</font></font></p>
<h2><font><font>Is it mature enough and ready for production?</font></font></h2>
<p><font><font>是。</font><font>而且已经有相当一段时间了。</font><font>在JetBrains，我们不仅实施了编译器和工具，而且</font><font>在过去两年中也在相当广泛的规模中</font><font>使用Kotlin </font></font><strong><font><font>在现实生活中的项目</font></font></strong><font><font>。</font><font>除了JetBrains，还有不少公司已经</font></font><strong><font><font>在生产</font></font></strong><font><font>中</font><font>使用</font><strong><font>了Kotlin</font></strong><font>一段时间了。</font></font></p>
<p><font><font>事实上，我们花了很长时间才达到1.0的原因之一是因为我们特别注意在实践中验证我们的设计决策。</font><font>这是必要的，因为向前推进编译器将</font></font><strong><font><font>向后兼容</font></font></strong><font><font>，未来版本的Kotlin不能破坏现有的代码。</font><font>因此，无论我们做出什么选择，我们都需要坚持下去。</font></font></p>
<p><font><font>如果没有</font></font><strong><font><font>早期采用者</font></font></strong><font><font>的宝贵</font><strong><font>帮助，</font></strong><font>达到这个里程碑就是我们无法做到的</font><font>。</font><font>我们要感谢你们每一个人的勇气，精力和热情！</font></font></p>
<h2><font><font>Who’s behind Kotlin?</font></font></h2>
<p><font><font>首先，Kotlin是开源语言</font></font></p>
<ul>
<li><font><strong><font>根据Apache 2.0</font></strong><font>开发</font></font><a href="https://github.com/JetBrains/kotlin"><font><font>GitHub </font></font></a> <strong><font><font>开源许可证</font></font></strong><font><font> ;</font></font></li>
<li><font><font>有</font></font><strong><font><font>超过100个贡献者</font></font></strong><font><font>到目前为止。</font></font></li>
</ul>
<p><font><font>JetBrains目前是Kotlin的主要支持者：我们投入了大量精力开发出来，</font></font><strong><font><font>我们长期致力于该项目</font></font></strong><font><font>。</font><font>我们将自己的需求写在我们自己的产品中。</font><font>我们很高兴地说，迄今为止，</font></font><strong><font><font>接近10台JetBrains产品</font></font></strong><font><font>，其中包括IntelliJ IDEA，</font></font><a href="https://blog.jetbrains.com/dotnet/2016/01/13/project-rider-a-csharp-ide/"><font><font>JetBrains Rider</font></font></a><font><font>，JetBrains Account＆E-Shop，YouTrack以及我们的一些较小的IDE和一些内部项目正在使用Kotlin。</font><font>所以</font></font><strong><font><font>这是留在这里</font></font></strong><font><font>！</font></font></p>
<p><font><font>自2012年以来，Kotlin的发展非常开放：一直与社区进行交流，收集和解决大量的反馈意见。</font></font></p>
<p><font><font>展望未来，我们正计划为设计方案和讨论设立一个集中的场地，使过程更加明显和有序。</font><font>到目前为止，Kotlin的标准化工作尚未开始，但是我们意识到，我们需要比以后更早地做到这一点。</font></font></p>
<p><font><font>该项目的语言设计和总体指导由JetBrains聘用的团队完成。</font><font>我们目前有</font></font><strong><font><font>超过20人</font></font></strong><font><font>在Kotlin </font><strong><font>全职工作</font></strong><font>，这也是JetBrains对Kotlin的承诺的另一个证明。</font></font></p>
<h3><font><font>The numbers</font></font></h3>
<p><font><font>我们来看看一些数字：</font></font></p>
<ul>
<li><strong><font></font></strong><font><font>上个月，</font><strong><font>11K +</font></strong><font>人们在上个月使用Kotlin，</font><font>上周只有</font></font><strong><font><font>5K</font></font></strong><font><font>左右;</font></font></li>
<li><strong><font><font>数以百计</font></font></strong><font><font>的</font></font><a href="http://stackoverflow.com/questions/tagged/kotlin"><font><font>StackOverflow的答案</font></font></a><font><font> ;</font></font></li>
<li><strong><font><font>两本书</font></font></strong><font><font>：</font></font><a href="https://www.manning.com/books/kotlin-in-action"><font><font>Kotlin in Action</font></font></a><font><font>和</font></font><a href="https://leanpub.com/kotlin-for-android-developers"><font><font>Kotlin for Android Developers</font></font></a><font><font> ;</font></font></li>
<li><strong><font><font>约1400人</font></font></strong><font><font>在</font></font><a href="http://kotlinlang.slack.com/"><font><font>Slack</font></font></a><font><font>（</font></font><a href="http://kotlinslackin.herokuapp.com/"><font><font>获得邀请</font></font></a><font><font>）;</font></font></li>
<li><strong><font></font></strong><font><font>IntelliJ IDEA和Rider等项目中的Kotlin码</font><strong><font>超过500K</font></strong><font>行。</font></font></li>
</ul>
<p><font><font>谈到代码行，GitHub开放存储库中</font></font><strong><font><font>的数量随着时间的推移</font></font></strong><font><font>呈指数级</font><strong><font>增长</font></strong><font>（JetBrains的项目被排除在外）：</font></font></p><center><br>
<img src="KotlinAdoption.png" alt="Kotlin GitHub采用" onmouseover="this.src='https://d3nmt5vlzunoa1.cloudfront.net/kotlin/files/2016/02/KotlinAdoption.gif';" onmouseout="this.src='https://d3nmt5vlzunoa1.cloudfront.net/kotlin/files/2016/02/KotlinAdoption.png';" width="640" height="320" src-orig="https://i2.wp.com/blog.jetbrains.com/kotlin/files/2016/02/KotlinAdoption.png?w=640&amp;ssl=1" scale="0"><br>
</center><p></p>
<p><font><font>当然，我们有越来越多的</font></font><strong><font><font>公司使用Kotlin，</font></font></strong><font><font>包括Prezi和Expedia。</font><font>顺便说一下，如果您使用Kotlin，请确保您向我们发送</font></font><a href="https://github.com/JetBrains/kotlin-web-site/blob/master/_data/companies-using-kotlin.yml"><font><font>Pull Request</font></font></a><font><font>。</font></font></p>
<h2><font><font>即将到来的路线图</font></font></h2>
<p><font><font>从1.0开始，我们致力于</font><font>语言及其标准库（</font><font>）</font><font>的长期</font></font><strong><font><font>向后兼容性</font></font></strong><font></font><code>kotlin-stdlib</code><font><font>：</font></font></p>
<ul>
<li><strong><font><font>较新的编译器将使用较旧的二进制文件</font></font></strong><font><font>（但较旧的</font><strong><font>编译器</font></strong><font>可能不了解较新的二进制文件，如javac 1.6无法读取由javac 1.8编译的类）;</font></font></li>
<li><strong><font><font>较旧的二进制文件将在运行时继续使用较新的二进制文件</font></font></strong><font><font>（尽管更新的代码可能需要较新的依赖关系）。</font></font></li>
</ul>
<p><font><font>这仅适用于JVM / Android支持。</font><font>JavaScript支持现在仍然是实验性的，稍后将有自己的发行版。</font></font></p>
<p><font><font>对于计划，我们最近的目标是（除了错误修复）：</font></font></p>
<ul>
<li><font><font>恒定</font></font><strong><font><font>的性能改进</font></font></strong><font><font>的工具链Kotlin（这包括，例如，在摇篮增量编译，也就是在现在的作品）;</font></font></li>
<li><strong><font><font>JavaScript支持</font></font></strong><font><font>（包括在可能的情况下交叉编译为JVM和JS）;</font></font></li>
<li><font><font>支持</font><font>使用优化的lambdas等</font><font>生成</font></font><strong><font><font>Java 8字节代码</font></font></strong><font><font>（</font><font>只要Android用户需要，</font></font><strong><font><font>将积极支持Java 6</font></font></strong><font><font>）。</font></font></li>
</ul>
<p><font><font>工具更新和错误修复将作为增量更新发布，即1.0.X. </font><font>更大的变化将首先通过早期访问计划（EAP），然后将作为1.1发布。</font></font></p>
<h2><font><font>如何开始</font></font></h2>
<p><font><font>用语言来发挥最简单的方法是通过其</font></font><strong><font><font>在线迷你IDE：</font></font><a href="https://try.kotlinlang.org"><font><font>try.kotl.in</font></font></a></strong><font><font>，包括</font></font><a href="http://try.kotlinlang.org/koans"><font><font>Koans</font></font></a><font><font> -了一套入门问题，</font></font><strong><font><font>指导您完成基本</font></font></strong><font><font>的语言。</font></font></p>
<p><font><font>在您的机器上使用Kotlin（Koans也可以</font></font><a href="https://kotlinlang.org/docs/tutorials/koans.html"><font><font>离线</font></font></a><font><font>完成）：</font></font></p>
<ul>
<li><strong><font><font>IntelliJ IDEA</font></font></strong><font><font>（</font></font><a href="https://www.jetbrains.com/idea/download/"><font><font>终极或社区</font></font></a><font><font>）：只需在Java项目中创建Kotlin项目或Kotlin文件;</font></font></li>
<li><strong><font><font>Android Studio</font></font></strong><font><font>：通过</font></font><em><font><font>插件管理器</font></font></em><font><font>安装插件</font><font>;</font></font></li>
<li><strong><font><font>Eclipse</font></font></strong><font><font>：通过</font></font><a href="https://marketplace.eclipse.org/content/kotlin-plugin-eclipse"><font><font>Marketplace</font></font></a><font><font>安装插件</font><font>。</font></font></li>
</ul>
<p><font><font>注意：如果您运行的是较旧版本，则可能需要将Kotlin插件更新为1.0。</font></font></p>
<p><font><font>为了加快概念，语言</font></font><strong><font><font>文档和教程</font></font></strong><font><font>可从</font></font><a href="https://kotlinlang.org"><font><font>官方网站获得</font></font></a><font><font>。</font></font><a href="http://blog.jetbrains.com/kotlin/2016/01/kotlin-digest-2015/"><font><font>2015年“摘要”中</font></font></a><font><font>可以找到我们社区成员发表的伟大文章和演讲</font><font>。</font></font></p>
<p><font><font>如果您将Kotlin引入到Java项目中，您可以使用</font><font>内置于IDE </font><font>中的</font></font><strong><font><font>Java-to-Kotlin</font></font></strong><font><font>转换器，帮助逐班迁移。</font></font></p>
<p><font><font>最后但并非最不重要的一点，请确保您加入了</font></font><a href="https://devnet.jetbrains.com/community/kotlin"><font><font>论坛</font></font></a><font><font>或</font></font><a href="http://kotlinslackin.herokuapp.com/"><font><font>Slack的讨论</font></font></a><font><font>。</font></font></p>
<p><font><font>再次</font></font><strong><font><font>感谢大家</font></font></strong><font><font>。</font><font>没有社区，我们不可能做到这一点。</font></font></p>
<p><font><font>有一个漂亮的Kotlin！</font></font><strong><font><font>现在</font></font></strong> <img src="https://i2.wp.com/blog.jetbrains.com/kotlin/wp-includes/images/smilies/simple-smile.png?zoom=1.5&amp;w=640&amp;ssl=1" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;" width="16" height="16" src-orig="https://i2.wp.com/blog.jetbrains.com/kotlin/wp-includes/images/smilies/simple-smile.png?w=640&amp;ssl=1" scale="1.5"></p>
<p><font><font>PS </font></font><em><font><font>查看有关</font></font><a href="https://www.reddit.com/r/programming/comments/45wcnd/kotlin_10_released_pragmatic_language_for_jvm_and/"><font><font>Reddit</font></font></a><font><font>和</font></font><a href="https://news.ycombinator.com/item?id=11103087"><font><font>Hacker News的讨论</font></font></a></em></p>
											</div>
</article>

<div id="cloud-tie-wrapper" class="cloud-tie-wrapper"></div>
<script src="https://img1.cache.netease.com/f2e/tie/yun/sdk/loader.js"></script>
<script>
var cloudTieConfig = {
  url: document.location.href, 
  sourceId: "",
  productKey: "51548a0774cd495991554a5801171b80",
  target: "cloud-tie-wrapper"
};
var yunManualLoad = true;
Tie.loader("aHR0cHM6Ly9hcGkuZ2VudGllLjE2My5jb20vcGMvbGl2ZXNjcmlwdC5odG1s", true);
</script>

	</div>
</div>


</body>
</html>